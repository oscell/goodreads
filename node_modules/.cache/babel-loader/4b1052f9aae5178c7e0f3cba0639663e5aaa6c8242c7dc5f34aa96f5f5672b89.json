{"ast":null,"code":"import \"./vars.74a64330.css\";\nimport $a4QS8$circleloader_vars_cssmodulejs from \"./circleloader_vars_css.mjs\";\nimport { clamp as $a4QS8$clamp } from \"@react-aria/utils\";\nimport { useDOMRef as $a4QS8$useDOMRef, useStyleProps as $a4QS8$useStyleProps, classNames as $a4QS8$classNames } from \"@react-spectrum/utils\";\nimport $a4QS8$react from \"react\";\nimport { useProgressBar as $a4QS8$useProgressBar } from \"@react-aria/progress\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $79c16f64960b6385$var$ProgressCircle(props, ref) {\n  let {\n    value = 0,\n    minValue = 0,\n    maxValue = 100,\n    size = 'M',\n    staticColor: staticColor,\n    variant: variant,\n    isIndeterminate = false,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    ...otherProps\n  } = props;\n  let domRef = (0, $a4QS8$useDOMRef)(ref);\n  let {\n    styleProps: styleProps\n  } = (0, $a4QS8$useStyleProps)(otherProps);\n  value = (0, $a4QS8$clamp)(value, minValue, maxValue);\n  let {\n    progressBarProps: progressBarProps\n  } = (0, $a4QS8$useProgressBar)({\n    ...props,\n    value: value\n  });\n  let subMask1Style = {};\n  let subMask2Style = {};\n  if (!isIndeterminate) {\n    let percentage = (value - minValue) / (maxValue - minValue) * 100;\n    let angle;\n    if (percentage > 0 && percentage <= 50) {\n      angle = -180 + percentage / 50 * 180;\n      subMask1Style.transform = `rotate(${angle}deg)`;\n      subMask2Style.transform = 'rotate(-180deg)';\n    } else if (percentage > 50) {\n      angle = -180 + (percentage - 50) / 50 * 180;\n      subMask1Style.transform = 'rotate(0deg)';\n      subMask2Style.transform = `rotate(${angle}deg)`;\n    }\n  }\n  if (!ariaLabel && !ariaLabelledby) console.warn('ProgressCircle requires an aria-label or aria-labelledby attribute for accessibility');\n  return /*#__PURE__*/(0, $a4QS8$react).createElement(\"div\", {\n    ...styleProps,\n    ...progressBarProps,\n    ref: domRef,\n    className: (0, $a4QS8$classNames)((0, $parcel$interopDefault($a4QS8$circleloader_vars_cssmodulejs)), 'spectrum-CircleLoader', {\n      'spectrum-CircleLoader--indeterminate': isIndeterminate,\n      'spectrum-CircleLoader--small': size === 'S',\n      'spectrum-CircleLoader--large': size === 'L',\n      'spectrum-CircleLoader--overBackground': variant === 'overBackground',\n      'spectrum-CircleLoader--staticWhite': staticColor === 'white',\n      'spectrum-CircleLoader--staticBlack': staticColor === 'black'\n    }, styleProps.className)\n  }, /*#__PURE__*/(0, $a4QS8$react).createElement(\"div\", {\n    className: (0, $a4QS8$classNames)((0, $parcel$interopDefault($a4QS8$circleloader_vars_cssmodulejs)), 'spectrum-CircleLoader-track')\n  }), /*#__PURE__*/(0, $a4QS8$react).createElement(\"div\", {\n    className: (0, $a4QS8$classNames)((0, $parcel$interopDefault($a4QS8$circleloader_vars_cssmodulejs)), 'spectrum-CircleLoader-fills')\n  }, /*#__PURE__*/(0, $a4QS8$react).createElement(\"div\", {\n    className: (0, $a4QS8$classNames)((0, $parcel$interopDefault($a4QS8$circleloader_vars_cssmodulejs)), 'spectrum-CircleLoader-fillMask1')\n  }, /*#__PURE__*/(0, $a4QS8$react).createElement(\"div\", {\n    className: (0, $a4QS8$classNames)((0, $parcel$interopDefault($a4QS8$circleloader_vars_cssmodulejs)), 'spectrum-CircleLoader-fillSubMask1'),\n    \"data-testid\": \"fillSubMask1\",\n    style: subMask1Style\n  }, /*#__PURE__*/(0, $a4QS8$react).createElement(\"div\", {\n    className: (0, $a4QS8$classNames)((0, $parcel$interopDefault($a4QS8$circleloader_vars_cssmodulejs)), 'spectrum-CircleLoader-fill')\n  }))), /*#__PURE__*/(0, $a4QS8$react).createElement(\"div\", {\n    className: (0, $a4QS8$classNames)((0, $parcel$interopDefault($a4QS8$circleloader_vars_cssmodulejs)), 'spectrum-CircleLoader-fillMask2')\n  }, /*#__PURE__*/(0, $a4QS8$react).createElement(\"div\", {\n    className: (0, $a4QS8$classNames)((0, $parcel$interopDefault($a4QS8$circleloader_vars_cssmodulejs)), 'spectrum-CircleLoader-fillSubMask2'),\n    \"data-testid\": \"fillSubMask2\",\n    style: subMask2Style\n  }, /*#__PURE__*/(0, $a4QS8$react).createElement(\"div\", {\n    className: (0, $a4QS8$classNames)((0, $parcel$interopDefault($a4QS8$circleloader_vars_cssmodulejs)), 'spectrum-CircleLoader-fill')\n  })))));\n}\n/**\n * ProgressCircles show the progression of a system operation such as downloading, uploading, or processing, in a visual way.\n * They can represent determinate or indeterminate progress.\n */\nlet $79c16f64960b6385$export$c79b9d6b4cc92af7 = /*#__PURE__*/(0, $a4QS8$react).forwardRef($79c16f64960b6385$var$ProgressCircle);\nexport { $79c16f64960b6385$export$c79b9d6b4cc92af7 as ProgressCircle };","map":{"version":3,"names":["$79c16f64960b6385$var$ProgressCircle","props","ref","value","minValue","maxValue","size","staticColor","variant","isIndeterminate","ariaLabel","ariaLabelledby","otherProps","domRef","$a4QS8$useDOMRef","styleProps","$a4QS8$useStyleProps","$a4QS8$clamp","progressBarProps","$a4QS8$useProgressBar","subMask1Style","subMask2Style","percentage","angle","transform","console","warn","$a4QS8$react","createElement","className","$a4QS8$classNames","$parcel$interopDefault","$a4QS8$circleloader_vars_cssmodulejs","style","$79c16f64960b6385$export$c79b9d6b4cc92af7","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-spectrum/progress/dist/packages/@react-spectrum/progress/src/ProgressCircle.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {clamp} from '@react-aria/utils';\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport React, {CSSProperties} from 'react';\nimport {SpectrumProgressCircleProps} from '@react-types/progress';\nimport styles from '@adobe/spectrum-css-temp/components/circleloader/vars.css';\nimport {useProgressBar} from '@react-aria/progress';\n\n\nfunction ProgressCircle(props: SpectrumProgressCircleProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    value = 0,\n    minValue = 0,\n    maxValue = 100,\n    size = 'M',\n    staticColor,\n    variant,\n    isIndeterminate = false,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    ...otherProps\n  } = props;\n  let domRef = useDOMRef(ref);\n  let {styleProps} = useStyleProps(otherProps);\n\n  value = clamp(value, minValue, maxValue);\n  let {progressBarProps} = useProgressBar({...props, value});\n\n  let subMask1Style: CSSProperties = {};\n  let subMask2Style: CSSProperties = {};\n  if (!isIndeterminate) {\n    let percentage = (value - minValue) / (maxValue - minValue) * 100;\n    let angle;\n    if (percentage > 0 && percentage <= 50) {\n      angle = -180 + (percentage / 50 * 180);\n      subMask1Style.transform = `rotate(${angle}deg)`;\n      subMask2Style.transform = 'rotate(-180deg)';\n    } else if (percentage > 50) {\n      angle = -180 + (percentage - 50) / 50 * 180;\n      subMask1Style.transform = 'rotate(0deg)';\n      subMask2Style.transform = `rotate(${angle}deg)`;\n    }\n  }\n\n  if (!ariaLabel && !ariaLabelledby) {\n    console.warn('ProgressCircle requires an aria-label or aria-labelledby attribute for accessibility');\n  }\n\n  return (\n    <div\n      {...styleProps}\n      {...progressBarProps}\n      ref={domRef}\n      className={\n        classNames(\n          styles,\n          'spectrum-CircleLoader',\n          {\n            'spectrum-CircleLoader--indeterminate': isIndeterminate,\n            'spectrum-CircleLoader--small': size === 'S',\n            'spectrum-CircleLoader--large': size === 'L',\n            'spectrum-CircleLoader--overBackground': variant === 'overBackground',\n            'spectrum-CircleLoader--staticWhite': staticColor === 'white',\n            'spectrum-CircleLoader--staticBlack': staticColor === 'black'\n          },\n          styleProps.className\n        )\n      }>\n      <div className={classNames(styles, 'spectrum-CircleLoader-track')} />\n      <div className={classNames(styles, 'spectrum-CircleLoader-fills')} >\n        <div className={classNames(styles, 'spectrum-CircleLoader-fillMask1')} >\n          <div\n            className={classNames(styles, 'spectrum-CircleLoader-fillSubMask1')}\n            data-testid=\"fillSubMask1\"\n            style={subMask1Style}>\n            <div className={classNames(styles, 'spectrum-CircleLoader-fill')} />\n          </div>\n        </div>\n        <div className={classNames(styles, 'spectrum-CircleLoader-fillMask2')} >\n          <div\n            className={classNames(styles, 'spectrum-CircleLoader-fillSubMask2')}\n            data-testid=\"fillSubMask2\"\n            style={subMask2Style} >\n            <div className={classNames(styles, 'spectrum-CircleLoader-fill')} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * ProgressCircles show the progression of a system operation such as downloading, uploading, or processing, in a visual way.\n * They can represent determinate or indeterminate progress.\n */\nlet _ProgressCircle = React.forwardRef(ProgressCircle);\nexport {_ProgressCircle as ProgressCircle};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
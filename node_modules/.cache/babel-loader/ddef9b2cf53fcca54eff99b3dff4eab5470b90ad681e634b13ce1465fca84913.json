{"ast":null,"code":"import { SliderBase as $39572711324a3b8e$export$9418495bb635ebde } from \"./SliderBase.mjs\";\nimport { SliderThumb as $9058ca69d66a724f$export$2c1b491743890dec } from \"./SliderThumb.mjs\";\nimport \"./vars.0949d1ae.css\";\nimport $i1AIe$slider_vars_cssmodulejs from \"./slider_vars_css.mjs\";\nimport { clamp as $i1AIe$clamp } from \"@react-aria/utils\";\nimport { classNames as $i1AIe$classNames } from \"@react-spectrum/utils\";\nimport $i1AIe$react from \"react\";\nimport { useLocale as $i1AIe$useLocale } from \"@react-aria/i18n\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $a1251704aa53e1a5$var$Slider(props, ref) {\n  let {\n    onChange: onChange,\n    onChangeEnd: onChangeEnd,\n    value: value,\n    defaultValue: defaultValue,\n    isFilled: isFilled,\n    fillOffset: fillOffset,\n    trackGradient: trackGradient,\n    getValueLabel: getValueLabel,\n    ...otherProps\n  } = props;\n  let baseProps = {\n    ...otherProps,\n    // Normalize `value: number[]` to `value: number`\n    value: value != null ? [value] : undefined,\n    defaultValue: defaultValue != null ? [defaultValue] : undefined,\n    onChange: v => {\n      onChange === null || onChange === void 0 ? void 0 : onChange(v[0]);\n    },\n    onChangeEnd: v => {\n      onChangeEnd === null || onChangeEnd === void 0 ? void 0 : onChangeEnd(v[0]);\n    },\n    getValueLabel: getValueLabel ? ([v]) => getValueLabel(v) : undefined\n  };\n  let {\n    direction: direction\n  } = (0, $i1AIe$useLocale)();\n  return /*#__PURE__*/(0, $i1AIe$react).createElement((0, $39572711324a3b8e$export$9418495bb635ebde), {\n    ...baseProps,\n    ref: ref,\n    classes: {\n      'spectrum-Slider--filled': isFilled && fillOffset == null\n    },\n    style:\n    // @ts-ignore\n    {\n      '--spectrum-slider-track-gradient': trackGradient && `linear-gradient(to ${direction === 'ltr' ? 'right' : 'left'}, ${trackGradient.join(', ')})`\n    }\n  }, ({\n    trackRef: trackRef,\n    inputRef: inputRef,\n    state: state\n  }) => {\n    fillOffset = fillOffset != null ? (0, $i1AIe$clamp)(fillOffset, state.getThumbMinValue(0), state.getThumbMaxValue(0)) : fillOffset;\n    let cssDirection = direction === 'rtl' ? 'right' : 'left';\n    let lowerTrack = /*#__PURE__*/(0, $i1AIe$react).createElement(\"div\", {\n      className: (0, $i1AIe$classNames)((0, $parcel$interopDefault($i1AIe$slider_vars_cssmodulejs)), 'spectrum-Slider-track'),\n      style: {\n        width: `${state.getThumbPercent(0) * 100}%`,\n        // TODO not sure if it has advantages, but this could also be implemented as CSS calc():\n        // .track::before {\n        //    background-size: calc((1/ (var(--width)/100)) * 100%);\n        //    width: calc(var(--width) * 1%)M\n        // }\n        // @ts-ignore\n        '--spectrum-track-background-size': `${1 / state.getThumbPercent(0) * 100}%`,\n        '--spectrum-track-background-position': direction === 'ltr' ? '0' : '100%'\n      }\n    });\n    let upperTrack = /*#__PURE__*/(0, $i1AIe$react).createElement(\"div\", {\n      className: (0, $i1AIe$classNames)((0, $parcel$interopDefault($i1AIe$slider_vars_cssmodulejs)), 'spectrum-Slider-track'),\n      style: {\n        width: `${(1 - state.getThumbPercent(0)) * 100}%`,\n        // @ts-ignore\n        '--spectrum-track-background-size': `${1 / (1 - state.getThumbPercent(0)) * 100}%`,\n        '--spectrum-track-background-position': direction === 'ltr' ? '100%' : '0'\n      }\n    });\n    let filledTrack = null;\n    if (isFilled && fillOffset != null) {\n      let width = state.getThumbPercent(0) - state.getValuePercent(fillOffset);\n      let isRightOfOffset = width > 0;\n      let offset = isRightOfOffset ? state.getValuePercent(fillOffset) : state.getThumbPercent(0);\n      filledTrack = /*#__PURE__*/(0, $i1AIe$react).createElement(\"div\", {\n        className: (0, $i1AIe$classNames)((0, $parcel$interopDefault($i1AIe$slider_vars_cssmodulejs)), 'spectrum-Slider-fill', {\n          'spectrum-Slider-fill--right': isRightOfOffset\n        }),\n        style: {\n          [cssDirection]: `${offset * 100}%`,\n          width: `${Math.abs(width) * 100}%`\n        }\n      });\n    }\n    return /*#__PURE__*/(0, $i1AIe$react).createElement((0, $i1AIe$react).Fragment, null, lowerTrack, /*#__PURE__*/(0, $i1AIe$react).createElement((0, $9058ca69d66a724f$export$2c1b491743890dec), {\n      index: 0,\n      isDisabled: props.isDisabled,\n      trackRef: trackRef,\n      inputRef: inputRef,\n      state: state,\n      name: props.name\n    }), filledTrack, upperTrack);\n  });\n}\n/**\n * Sliders allow users to quickly select a value within a range. They should be used when the upper and lower bounds to the range are invariable.\n */\nconst $a1251704aa53e1a5$export$472062a354075cee = /*#__PURE__*/(0, $i1AIe$react).forwardRef($a1251704aa53e1a5$var$Slider);\nexport { $a1251704aa53e1a5$export$472062a354075cee as Slider };","map":{"version":3,"names":["$a1251704aa53e1a5$var$Slider","props","ref","onChange","onChangeEnd","value","defaultValue","isFilled","fillOffset","trackGradient","getValueLabel","otherProps","baseProps","undefined","v","direction","$i1AIe$useLocale","$i1AIe$react","createElement","$39572711324a3b8e$export$9418495bb635ebde","classes","style","join","trackRef","inputRef","state","$i1AIe$clamp","getThumbMinValue","getThumbMaxValue","cssDirection","lowerTrack","className","$i1AIe$classNames","$parcel$interopDefault","$i1AIe$slider_vars_cssmodulejs","width","getThumbPercent","upperTrack","filledTrack","getValuePercent","isRightOfOffset","offset","Math","abs","Fragment","$9058ca69d66a724f$export$2c1b491743890dec","index","isDisabled","name","$a1251704aa53e1a5$export$472062a354075cee","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-spectrum/slider/dist/packages/@react-spectrum/slider/src/Slider.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {clamp} from '@react-aria/utils';\nimport {classNames} from '@react-spectrum/utils';\nimport {FocusableRef} from '@react-types/shared';\nimport React from 'react';\nimport {SliderBase, SliderBaseChildArguments, SliderBaseProps} from './SliderBase';\nimport {SliderThumb} from './SliderThumb';\nimport {SpectrumSliderProps} from '@react-types/slider';\nimport styles from '@adobe/spectrum-css-temp/components/slider/vars.css';\nimport {useLocale} from '@react-aria/i18n';\n\nfunction Slider(props: SpectrumSliderProps, ref: FocusableRef<HTMLDivElement>) {\n  let {onChange, onChangeEnd, value, defaultValue, isFilled, fillOffset, trackGradient, getValueLabel, ...otherProps} = props;\n\n  let baseProps: Omit<SliderBaseProps, 'children'> = {\n    ...otherProps,\n    // Normalize `value: number[]` to `value: number`\n    value: value != null ? [value] : undefined,\n    defaultValue: defaultValue != null ? [defaultValue] : undefined,\n    onChange: (v: number[]): void => {\n      onChange?.(v[0]);\n    },\n    onChangeEnd: (v: number[]): void => {\n      onChangeEnd?.(v[0]);\n    },\n    getValueLabel: getValueLabel ? ([v]) => getValueLabel(v) : undefined\n  };\n\n  let {direction} = useLocale();\n\n  return (\n    <SliderBase\n      {...baseProps}\n      ref={ref}\n      classes={{\n        'spectrum-Slider--filled': isFilled && fillOffset == null\n      }}\n      style={\n        // @ts-ignore\n        {'--spectrum-slider-track-gradient': trackGradient && `linear-gradient(to ${direction === 'ltr' ? 'right' : 'left'}, ${trackGradient.join(', ')})`}\n      }>\n      {({trackRef, inputRef, state}: SliderBaseChildArguments) => {\n        fillOffset = fillOffset != null ? clamp(fillOffset, state.getThumbMinValue(0), state.getThumbMaxValue(0)) : fillOffset;\n        let cssDirection = direction === 'rtl' ? 'right' : 'left';\n\n        let lowerTrack = (\n          <div\n            className={classNames(styles, 'spectrum-Slider-track')}\n            style={{\n              width: `${state.getThumbPercent(0) * 100}%`,\n              // TODO not sure if it has advantages, but this could also be implemented as CSS calc():\n              // .track::before {\n              //    background-size: calc((1/ (var(--width)/100)) * 100%);\n              //    width: calc(var(--width) * 1%)M\n              // }\n              // @ts-ignore\n              '--spectrum-track-background-size': `${(1 / state.getThumbPercent(0)) * 100}%`,\n              '--spectrum-track-background-position': direction === 'ltr' ? '0' : '100%'\n            }} />\n        );\n        let upperTrack = (\n          <div\n            className={classNames(styles, 'spectrum-Slider-track')}\n            style={{\n              width: `${(1 - state.getThumbPercent(0)) * 100}%`,\n              // @ts-ignore\n              '--spectrum-track-background-size': `${(1 / (1 - state.getThumbPercent(0))) * 100}%`,\n              '--spectrum-track-background-position': direction === 'ltr' ? '100%' : '0'\n            }} />\n        );\n\n        let filledTrack = null;\n        if (isFilled && fillOffset != null) {\n          let width = state.getThumbPercent(0) - state.getValuePercent(fillOffset);\n          let isRightOfOffset = width > 0;\n          let offset = isRightOfOffset ? state.getValuePercent(fillOffset) : state.getThumbPercent(0);\n          filledTrack = (\n            <div\n              className={classNames(styles, 'spectrum-Slider-fill', {'spectrum-Slider-fill--right': isRightOfOffset})}\n              style={{\n                [cssDirection]: `${offset * 100}%`,\n                width: `${Math.abs(width) * 100}%`\n              }} />\n          );\n        }\n\n        return  (\n          <>\n            {lowerTrack}\n            <SliderThumb\n              index={0}\n              isDisabled={props.isDisabled}\n              trackRef={trackRef}\n              inputRef={inputRef}\n              state={state}\n              name={props.name} />\n            {filledTrack}\n            {upperTrack}\n          </>\n        );\n      }}\n    </SliderBase>\n  );\n}\n\n/**\n * Sliders allow users to quickly select a value within a range. They should be used when the upper and lower bounds to the range are invariable.\n */\nconst _Slider = React.forwardRef(Slider);\nexport {_Slider as Slider};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
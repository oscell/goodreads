{"ast":null,"code":"import { useCallback as $acGV5$useCallback } from \"react\";\nimport { useControlledState as $acGV5$useControlledState } from \"@react-stately/utils\";\n\n/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $bf996d45f4a36925$export$3fcbf6e4407997e0(props) {\n  let [isExpanded, setExpanded] = (0, $acGV5$useControlledState)(props.isExpanded, props.defaultExpanded || false, props.onExpandedChange);\n  const expand = (0, $acGV5$useCallback)(() => {\n    setExpanded(true);\n  }, [setExpanded]);\n  const collapse = (0, $acGV5$useCallback)(() => {\n    setExpanded(false);\n  }, [setExpanded]);\n  const toggle = (0, $acGV5$useCallback)(() => {\n    setExpanded(!isExpanded);\n  }, [setExpanded, isExpanded]);\n  return {\n    isExpanded: isExpanded,\n    setExpanded: setExpanded,\n    expand: expand,\n    collapse: collapse,\n    toggle: toggle\n  };\n}\nexport { $bf996d45f4a36925$export$3fcbf6e4407997e0 as useDisclosureState };","map":{"version":3,"names":["$bf996d45f4a36925$export$3fcbf6e4407997e0","props","isExpanded","setExpanded","$acGV5$useControlledState","defaultExpanded","onExpandedChange","expand","$acGV5$useCallback","collapse","toggle"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-stately/disclosure/dist/packages/@react-stately/disclosure/src/useDisclosureState.ts"],"sourcesContent":["/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCallback} from 'react';\nimport {useControlledState} from '@react-stately/utils';\n\nexport interface DisclosureProps {\n  /** Whether the disclosure is expanded (controlled). */\n  isExpanded?: boolean,\n  /** Whether the disclosure is expanded by default (uncontrolled). */\n  defaultExpanded?: boolean,\n  /** Handler that is called when the disclosure expanded state changes. */\n  onExpandedChange?: (isExpanded: boolean) => void\n}\n\n\nexport interface DisclosureState {\n  /** Whether the disclosure is currently expanded. */\n  readonly isExpanded: boolean,\n  /** Sets whether the disclosure is expanded. */\n  setExpanded(isExpanded: boolean): void,\n  /** Expand the disclosure. */\n  expand(): void,\n  /** Collapse the disclosure. */\n  collapse(): void,\n  /** Toggles the disclosure's visibility. */\n  toggle(): void\n}\n\n/**\n * Manages state for a disclosure widget. Tracks whether the disclosure is expanded, and provides\n * methods to toggle this state.\n */\nexport function useDisclosureState(props: DisclosureProps): DisclosureState  {\n  let [isExpanded, setExpanded] = useControlledState(props.isExpanded, props.defaultExpanded || false, props.onExpandedChange);\n\n  const expand = useCallback(() => {\n    setExpanded(true);\n  }, [setExpanded]);\n\n  const collapse = useCallback(() => {\n    setExpanded(false);\n  }, [setExpanded]);\n\n  const toggle = useCallback(() => {\n    setExpanded(!isExpanded);\n  }, [setExpanded, isExpanded]);\n\n  return {\n    isExpanded,\n    setExpanded,\n    expand,\n    collapse,\n    toggle\n  };\n}\n"],"mappings":";;;AAAA;;;;;;;;;;;;AA0CO,SAASA,0CAAmBC,KAAsB;EACvD,IAAI,CAACC,UAAA,EAAYC,WAAA,CAAY,GAAG,IAAAC,yBAAiB,EAAEH,KAAA,CAAMC,UAAU,EAAED,KAAA,CAAMI,eAAe,IAAI,OAAOJ,KAAA,CAAMK,gBAAgB;EAE3H,MAAMC,MAAA,GAAS,IAAAC,kBAAU,EAAE;IACzBL,WAAA,CAAY;EACd,GAAG,CAACA,WAAA,CAAY;EAEhB,MAAMM,QAAA,GAAW,IAAAD,kBAAU,EAAE;IAC3BL,WAAA,CAAY;EACd,GAAG,CAACA,WAAA,CAAY;EAEhB,MAAMO,MAAA,GAAS,IAAAF,kBAAU,EAAE;IACzBL,WAAA,CAAY,CAACD,UAAA;EACf,GAAG,CAACC,WAAA,EAAaD,UAAA,CAAW;EAE5B,OAAO;gBACLA,UAAA;iBACAC,WAAA;YACAI,MAAA;cACAE,QAAA;YACAC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
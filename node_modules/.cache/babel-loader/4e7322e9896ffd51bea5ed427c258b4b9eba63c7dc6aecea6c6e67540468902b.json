{"ast":null,"code":"import \"./vars.6caec7fe.css\";\nimport $b8ZoF$button_vars_cssmodulejs from \"./button_vars_css.mjs\";\nimport { useSlotProps as $b8ZoF$useSlotProps, useFocusableRef as $b8ZoF$useFocusableRef, useStyleProps as $b8ZoF$useStyleProps, classNames as $b8ZoF$classNames, SlotProvider as $b8ZoF$SlotProvider } from \"@react-spectrum/utils\";\nimport { FocusRing as $b8ZoF$FocusRing } from \"@react-aria/focus\";\nimport { mergeProps as $b8ZoF$mergeProps } from \"@react-aria/utils\";\nimport $b8ZoF$react from \"react\";\nimport { useButton as $b8ZoF$useButton } from \"@react-aria/button\";\nimport { useHover as $b8ZoF$useHover } from \"@react-aria/interactions\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// @private\nfunction $b43bd559b476d0c4$var$FieldButton(props, ref) {\n  props = (0, $b8ZoF$useSlotProps)(props, 'button');\n  let {\n    isQuiet: isQuiet,\n    isDisabled: isDisabled,\n    validationState: validationState,\n    isInvalid: isInvalid,\n    children: children,\n    autoFocus: autoFocus,\n    isActive: isActive,\n    focusRingClass: focusRingClass,\n    ...otherProps\n  } = props;\n  let domRef = (0, $b8ZoF$useFocusableRef)(ref);\n  let {\n    buttonProps: buttonProps,\n    isPressed: isPressed\n  } = (0, $b8ZoF$useButton)(props, domRef);\n  let {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  } = (0, $b8ZoF$useHover)({\n    isDisabled: isDisabled\n  });\n  let {\n    styleProps: styleProps\n  } = (0, $b8ZoF$useStyleProps)(otherProps);\n  return /*#__PURE__*/(0, $b8ZoF$react).createElement((0, $b8ZoF$FocusRing), {\n    focusRingClass: (0, $b8ZoF$classNames)((0, $parcel$interopDefault($b8ZoF$button_vars_cssmodulejs)), 'focus-ring', focusRingClass),\n    autoFocus: autoFocus\n  }, /*#__PURE__*/(0, $b8ZoF$react).createElement(\"button\", {\n    ...(0, $b8ZoF$mergeProps)(buttonProps, hoverProps),\n    ref: domRef,\n    className: (0, $b8ZoF$classNames)((0, $parcel$interopDefault($b8ZoF$button_vars_cssmodulejs)), 'spectrum-FieldButton', {\n      'spectrum-FieldButton--quiet': isQuiet,\n      'is-active': isActive || isPressed,\n      'is-disabled': isDisabled,\n      'spectrum-FieldButton--invalid': isInvalid || validationState === 'invalid',\n      'is-hovered': isHovered\n    }, styleProps.className)\n  }, /*#__PURE__*/(0, $b8ZoF$react).createElement((0, $b8ZoF$SlotProvider), {\n    slots: {\n      icon: {\n        size: 'S',\n        UNSAFE_className: (0, $b8ZoF$classNames)((0, $parcel$interopDefault($b8ZoF$button_vars_cssmodulejs)), 'spectrum-Icon')\n      }\n    }\n  }, children)));\n}\nlet $b43bd559b476d0c4$export$47dc48f595b075da = /*#__PURE__*/(0, $b8ZoF$react).forwardRef($b43bd559b476d0c4$var$FieldButton);\nexport { $b43bd559b476d0c4$export$47dc48f595b075da as FieldButton };","map":{"version":3,"names":["$b43bd559b476d0c4$var$FieldButton","props","ref","$b8ZoF$useSlotProps","isQuiet","isDisabled","validationState","isInvalid","children","autoFocus","isActive","focusRingClass","otherProps","domRef","$b8ZoF$useFocusableRef","buttonProps","isPressed","$b8ZoF$useButton","hoverProps","isHovered","$b8ZoF$useHover","styleProps","$b8ZoF$useStyleProps","$b8ZoF$react","createElement","$b8ZoF$FocusRing","$b8ZoF$classNames","$parcel$interopDefault","$b8ZoF$button_vars_cssmodulejs","$b8ZoF$mergeProps","className","$b8ZoF$SlotProvider","slots","icon","size","UNSAFE_className","$b43bd559b476d0c4$export$47dc48f595b075da","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-spectrum/button/dist/packages/@react-spectrum/button/src/FieldButton.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ButtonProps} from '@react-types/button';\nimport {classNames, SlotProvider, useFocusableRef, useSlotProps, useStyleProps} from '@react-spectrum/utils';\nimport {DOMProps, FocusableRef, RefObject, StyleProps} from '@react-types/shared';\nimport {FocusRing} from '@react-aria/focus';\nimport {mergeProps} from '@react-aria/utils';\nimport React from 'react';\nimport styles from '@adobe/spectrum-css-temp/components/button/vars.css';\nimport {useButton} from '@react-aria/button';\nimport {useHover} from '@react-aria/interactions';\n\ninterface FieldButtonProps extends ButtonProps, DOMProps, StyleProps {\n  isQuiet?: boolean,\n  isActive?: boolean,\n  validationState?: 'valid' | 'invalid',\n  isInvalid?: boolean,\n  focusRingClass?: string\n}\n\n// @private\nfunction FieldButton(props: FieldButtonProps, ref: FocusableRef) {\n  props = useSlotProps(props, 'button');\n  let {\n    isQuiet,\n    isDisabled,\n    validationState,\n    isInvalid,\n    children,\n    autoFocus,\n    isActive,\n    focusRingClass,\n    ...otherProps\n  } = props;\n  let domRef = useFocusableRef(ref) as RefObject<HTMLButtonElement | null>;\n  let {buttonProps, isPressed} = useButton(props, domRef);\n  let {hoverProps, isHovered} = useHover({isDisabled});\n  let {styleProps} = useStyleProps(otherProps);\n\n  return (\n    <FocusRing focusRingClass={classNames(styles, 'focus-ring', focusRingClass)} autoFocus={autoFocus}>\n      <button\n        {...mergeProps(buttonProps, hoverProps)}\n        ref={domRef}\n        className={\n          classNames(\n            styles,\n            'spectrum-FieldButton',\n            {\n              'spectrum-FieldButton--quiet': isQuiet,\n              'is-active': isActive || isPressed,\n              'is-disabled': isDisabled,\n              'spectrum-FieldButton--invalid': isInvalid || validationState === 'invalid',\n              'is-hovered': isHovered\n            },\n            styleProps.className\n          )\n        }>\n        <SlotProvider\n          slots={{\n            icon: {\n              size: 'S',\n              UNSAFE_className: classNames(styles, 'spectrum-Icon')\n            }\n          }}>\n          {children}\n        </SlotProvider>\n      </button>\n    </FocusRing>\n  );\n}\n\nlet _FieldButton = React.forwardRef(FieldButton);\nexport {_FieldButton as FieldButton};\n"],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;AA8BA;AACA,SAASA,kCAAYC,KAAuB,EAAEC,GAAiB;EAC7DD,KAAA,GAAQ,IAAAE,mBAAW,EAAEF,KAAA,EAAO;EAC5B,IAAI;IAAAG,OAAA,EACFA,OAAO;IAAAC,UAAA,EACPA,UAAU;IAAAC,eAAA,EACVA,eAAe;IAAAC,SAAA,EACfA,SAAS;IAAAC,QAAA,EACTA,QAAQ;IAAAC,SAAA,EACRA,SAAS;IAAAC,QAAA,EACTA,QAAQ;IAAAC,cAAA,EACRA,cAAc;IACd,GAAGC;EAAA,CACJ,GAAGX,KAAA;EACJ,IAAIY,MAAA,GAAS,IAAAC,sBAAc,EAAEZ,GAAA;EAC7B,IAAI;IAAAa,WAAA,EAACA,WAAW;IAAAC,SAAA,EAAEA;EAAS,CAAC,GAAG,IAAAC,gBAAQ,EAAEhB,KAAA,EAAOY,MAAA;EAChD,IAAI;IAAAK,UAAA,EAACA,UAAU;IAAAC,SAAA,EAAEA;EAAS,CAAC,GAAG,IAAAC,eAAO,EAAE;gBAACf;EAAU;EAClD,IAAI;IAAAgB,UAAA,EAACA;EAAU,CAAC,GAAG,IAAAC,oBAAY,EAAEV,UAAA;EAEjC,oBACE,IAAAW,YAAA,EAAAC,aAAA,EAAC,GAAAC,gBAAQ;IAAEd,cAAA,EAAgB,IAAAe,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,8BAAA,CAAK,GAAG,cAAcjB,cAAA;IAAiBF,SAAA,EAAWA;kBACtF,IAAAc,YAAA,EAAAC,aAAA,CAAC;IACE,GAAG,IAAAK,iBAAS,EAAEd,WAAA,EAAaG,UAAA,CAAW;IACvChB,GAAA,EAAKW,MAAA;IACLiB,SAAA,EACE,IAAAJ,iBAAS,GACP,GAAAC,sBAAA,CAAAC,8BAAA,CAAK,GACL,wBACA;MACE,+BAA+BxB,OAAA;MAC/B,aAAaM,QAAA,IAAYM,SAAA;MACzB,eAAeX,UAAA;MACf,iCAAiCE,SAAA,IAAaD,eAAA,KAAoB;MAClE,cAAca;IAChB,GACAE,UAAA,CAAWS,SAAS;kBAGxB,IAAAP,YAAA,EAAAC,aAAA,EAAC,GAAAO,mBAAW;IACVC,KAAA,EAAO;MACLC,IAAA,EAAM;QACJC,IAAA,EAAM;QACNC,gBAAA,EAAkB,IAAAT,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,8BAAA,CAAK,GAAG;MACvC;IACF;KACCpB,QAAA;AAKX;AAEA,IAAI4B,yCAAA,gBAAe,IAAAb,YAAI,EAAEc,UAAU,CAACrC,iCAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
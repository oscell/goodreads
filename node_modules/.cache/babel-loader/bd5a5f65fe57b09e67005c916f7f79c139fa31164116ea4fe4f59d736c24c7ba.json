{"ast":null,"code":"import { DatePickerSegment as $cfa347761f172638$export$6388987c5223b54e } from \"./DatePickerSegment.mjs\";\nimport \"./styles.4bf108e6.css\";\nimport $immgY$styles_cssmodulejs from \"./styles_css.mjs\";\nimport { Input as $79348162c55d687f$export$f5b8910cec6cf069 } from \"./Input.mjs\";\nimport { useFocusManagerRef as $04e96200274b03de$export$71a23a36270e4bf0, useFormattedDateWidth as $04e96200274b03de$export$31e22e3c931fc056 } from \"./utils.mjs\";\nimport { classNames as $immgY$classNames } from \"@react-spectrum/utils\";\nimport { Field as $immgY$Field } from \"@react-spectrum/label\";\nimport $immgY$react, { useRef as $immgY$useRef } from \"react\";\nimport { useFormProps as $immgY$useFormProps } from \"@react-spectrum/form\";\nimport { useLocale as $immgY$useLocale } from \"@react-aria/i18n\";\nimport { useProviderProps as $immgY$useProviderProps } from \"@react-spectrum/provider\";\nimport { useTimeField as $immgY$useTimeField } from \"@react-aria/datepicker\";\nimport { useTimeFieldState as $immgY$useTimeFieldState } from \"@react-stately/datepicker\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $f0a04554754386b6$var$TimeField(props, ref) {\n  props = (0, $immgY$useProviderProps)(props);\n  props = (0, $immgY$useFormProps)(props);\n  let {\n    autoFocus: autoFocus,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isRequired: isRequired,\n    isQuiet: isQuiet\n  } = props;\n  let domRef = (0, $04e96200274b03de$export$71a23a36270e4bf0)(ref);\n  let {\n    locale: locale\n  } = (0, $immgY$useLocale)();\n  let state = (0, $immgY$useTimeFieldState)({\n    ...props,\n    locale: locale\n  });\n  let fieldRef = (0, $immgY$useRef)(null);\n  let inputRef = (0, $immgY$useRef)(null);\n  let {\n    labelProps: labelProps,\n    fieldProps: fieldProps,\n    inputProps: inputProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps,\n    isInvalid: isInvalid,\n    validationErrors: validationErrors,\n    validationDetails: validationDetails\n  } = (0, $immgY$useTimeField)({\n    ...props,\n    inputRef: inputRef\n  }, state, fieldRef);\n  let validationState = state.validationState || (isInvalid ? 'invalid' : null);\n  let approximateWidth = (0, $04e96200274b03de$export$31e22e3c931fc056)(state) + 'ch';\n  return /*#__PURE__*/(0, $immgY$react).createElement((0, $immgY$Field), {\n    ...props,\n    ref: domRef,\n    elementType: \"span\",\n    labelProps: labelProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps,\n    validationState: validationState,\n    isInvalid: isInvalid,\n    validationErrors: validationErrors,\n    validationDetails: validationDetails,\n    wrapperClassName: (0, $immgY$classNames)((0, $parcel$interopDefault($immgY$styles_cssmodulejs)), 'react-spectrum-TimeField-fieldWrapper')\n  }, /*#__PURE__*/(0, $immgY$react).createElement((0, $79348162c55d687f$export$f5b8910cec6cf069), {\n    ref: fieldRef,\n    fieldProps: fieldProps,\n    isDisabled: isDisabled,\n    isQuiet: isQuiet,\n    autoFocus: autoFocus,\n    validationState: validationState,\n    minWidth: approximateWidth,\n    className: (0, $immgY$classNames)((0, $parcel$interopDefault($immgY$styles_cssmodulejs)), 'react-spectrum-TimeField')\n  }, state.segments.map((segment, i) => /*#__PURE__*/(0, $immgY$react).createElement((0, $cfa347761f172638$export$6388987c5223b54e), {\n    key: i,\n    segment: segment,\n    state: state,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isRequired: isRequired\n  })), /*#__PURE__*/(0, $immgY$react).createElement(\"input\", {\n    ...inputProps,\n    ref: inputRef\n  })));\n}\n/**\n * TimeFields allow users to enter and edit time values using a keyboard.\n * Each part of the time is displayed in an individually editable segment.\n */\nconst $f0a04554754386b6$export$5eaee2322dd727eb = /*#__PURE__*/(0, $immgY$react).forwardRef($f0a04554754386b6$var$TimeField);\nexport { $f0a04554754386b6$export$5eaee2322dd727eb as TimeField };","map":{"version":3,"names":["$f0a04554754386b6$var$TimeField","props","ref","$immgY$useProviderProps","$immgY$useFormProps","autoFocus","isDisabled","isReadOnly","isRequired","isQuiet","domRef","$04e96200274b03de$export$71a23a36270e4bf0","locale","$immgY$useLocale","state","$immgY$useTimeFieldState","fieldRef","$immgY$useRef","inputRef","labelProps","fieldProps","inputProps","descriptionProps","errorMessageProps","isInvalid","validationErrors","validationDetails","$immgY$useTimeField","validationState","approximateWidth","$04e96200274b03de$export$31e22e3c931fc056","$immgY$react","createElement","$immgY$Field","elementType","wrapperClassName","$immgY$classNames","$parcel$interopDefault","$immgY$styles_cssmodulejs","$79348162c55d687f$export$f5b8910cec6cf069","minWidth","className","segments","map","segment","i","$cfa347761f172638$export$6388987c5223b54e","key","$f0a04554754386b6$export$5eaee2322dd727eb","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-spectrum/datepicker/dist/packages/@react-spectrum/datepicker/src/TimeField.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames} from '@react-spectrum/utils';\nimport {DatePickerSegment} from './DatePickerSegment';\nimport datepickerStyles from './styles.css';\nimport {Field} from '@react-spectrum/label';\nimport {FocusableRef} from '@react-types/shared';\nimport {Input} from './Input';\nimport React, {ReactElement, useRef} from 'react';\nimport {SpectrumTimeFieldProps, TimeValue} from '@react-types/datepicker';\nimport {useFocusManagerRef, useFormattedDateWidth} from './utils';\nimport {useFormProps} from '@react-spectrum/form';\nimport {useLocale} from '@react-aria/i18n';\nimport {useProviderProps} from '@react-spectrum/provider';\nimport {useTimeField} from '@react-aria/datepicker';\nimport {useTimeFieldState} from '@react-stately/datepicker';\n\nfunction TimeField<T extends TimeValue>(props: SpectrumTimeFieldProps<T>, ref: FocusableRef<HTMLElement>) {\n  props = useProviderProps(props);\n  props = useFormProps(props);\n  let {\n    autoFocus,\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isQuiet\n  } = props;\n\n  let domRef = useFocusManagerRef(ref);\n  let {locale} = useLocale();\n  let state = useTimeFieldState({\n    ...props,\n    locale\n  });\n\n  let fieldRef = useRef(null);\n  let inputRef = useRef(null);\n  let {labelProps, fieldProps, inputProps, descriptionProps, errorMessageProps, isInvalid, validationErrors, validationDetails} = useTimeField({\n    ...props,\n    inputRef\n  }, state, fieldRef);\n\n  let validationState = state.validationState || (isInvalid ? 'invalid' : null);\n\n  let approximateWidth = useFormattedDateWidth(state) + 'ch';\n\n  return (\n    <Field\n      {...props}\n      ref={domRef}\n      elementType=\"span\"\n      labelProps={labelProps}\n      descriptionProps={descriptionProps}\n      errorMessageProps={errorMessageProps}\n      validationState={validationState}\n      isInvalid={isInvalid}\n      validationErrors={validationErrors}\n      validationDetails={validationDetails}\n      wrapperClassName={classNames(datepickerStyles, 'react-spectrum-TimeField-fieldWrapper')}>\n      <Input\n        ref={fieldRef}\n        fieldProps={fieldProps}\n        isDisabled={isDisabled}\n        isQuiet={isQuiet}\n        autoFocus={autoFocus}\n        validationState={validationState}\n        minWidth={approximateWidth}\n        className={classNames(datepickerStyles, 'react-spectrum-TimeField')}>\n        {state.segments.map((segment, i) =>\n          (<DatePickerSegment\n            key={i}\n            segment={segment}\n            state={state}\n            isDisabled={isDisabled}\n            isReadOnly={isReadOnly}\n            isRequired={isRequired} />)\n        )}\n        <input {...inputProps} ref={inputRef} />\n      </Input>\n    </Field>\n  );\n}\n\n/**\n * TimeFields allow users to enter and edit time values using a keyboard.\n * Each part of the time is displayed in an individually editable segment.\n */\nconst _TimeField = React.forwardRef(TimeField) as <T extends TimeValue>(props: SpectrumTimeFieldProps<T> & {ref?: FocusableRef<HTMLElement>}) => ReactElement;\nexport {_TimeField as TimeField};\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;AA2BA,SAASA,gCAA+BC,KAAgC,EAAEC,GAA8B;EACtGD,KAAA,GAAQ,IAAAE,uBAAe,EAAEF,KAAA;EACzBA,KAAA,GAAQ,IAAAG,mBAAW,EAAEH,KAAA;EACrB,IAAI;IAAAI,SAAA,EACFA,SAAS;IAAAC,UAAA,EACTA,UAAU;IAAAC,UAAA,EACVA,UAAU;IAAAC,UAAA,EACVA,UAAU;IAAAC,OAAA,EACVA;EAAO,CACR,GAAGR,KAAA;EAEJ,IAAIS,MAAA,GAAS,IAAAC,yCAAiB,EAAET,GAAA;EAChC,IAAI;IAAAU,MAAA,EAACA;EAAM,CAAC,GAAG,IAAAC,gBAAQ;EACvB,IAAIC,KAAA,GAAQ,IAAAC,wBAAgB,EAAE;IAC5B,GAAGd,KAAK;YACRW;EACF;EAEA,IAAII,QAAA,GAAW,IAAAC,aAAK,EAAE;EACtB,IAAIC,QAAA,GAAW,IAAAD,aAAK,EAAE;EACtB,IAAI;IAAAE,UAAA,EAACA,UAAU;IAAAC,UAAA,EAAEA,UAAU;IAAAC,UAAA,EAAEA,UAAU;IAAAC,gBAAA,EAAEA,gBAAgB;IAAAC,iBAAA,EAAEA,iBAAiB;IAAAC,SAAA,EAAEA,SAAS;IAAAC,gBAAA,EAAEA,gBAAgB;IAAAC,iBAAA,EAAEA;EAAiB,CAAC,GAAG,IAAAC,mBAAW,EAAE;IAC3I,GAAG1B,KAAK;cACRiB;EACF,GAAGJ,KAAA,EAAOE,QAAA;EAEV,IAAIY,eAAA,GAAkBd,KAAA,CAAMc,eAAe,KAAKJ,SAAA,GAAY,YAAY,IAAG;EAE3E,IAAIK,gBAAA,GAAmB,IAAAC,yCAAoB,EAAEhB,KAAA,IAAS;EAEtD,oBACE,IAAAiB,YAAA,EAAAC,aAAA,EAAC,GAAAC,YAAI;IACF,GAAGhC,KAAK;IACTC,GAAA,EAAKQ,MAAA;IACLwB,WAAA,EAAY;IACZf,UAAA,EAAYA,UAAA;IACZG,gBAAA,EAAkBA,gBAAA;IAClBC,iBAAA,EAAmBA,iBAAA;IACnBK,eAAA,EAAiBA,eAAA;IACjBJ,SAAA,EAAWA,SAAA;IACXC,gBAAA,EAAkBA,gBAAA;IAClBC,iBAAA,EAAmBA,iBAAA;IACnBS,gBAAA,EAAkB,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,yBAAA,CAAe,GAAG;kBAC/C,IAAAP,YAAA,EAAAC,aAAA,EAAC,GAAAO,yCAAI;IACHrC,GAAA,EAAKc,QAAA;IACLI,UAAA,EAAYA,UAAA;IACZd,UAAA,EAAYA,UAAA;IACZG,OAAA,EAASA,OAAA;IACTJ,SAAA,EAAWA,SAAA;IACXuB,eAAA,EAAiBA,eAAA;IACjBY,QAAA,EAAUX,gBAAA;IACVY,SAAA,EAAW,IAAAL,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,yBAAA,CAAe,GAAG;KACvCxB,KAAA,CAAM4B,QAAQ,CAACC,GAAG,CAAC,CAACC,OAAA,EAASC,CAAA,kBAC3B,IAAAd,YAAA,EAAAC,aAAA,EAAC,GAAAc,yCAAgB;IAChBC,GAAA,EAAKF,CAAA;IACLD,OAAA,EAASA,OAAA;IACT9B,KAAA,EAAOA,KAAA;IACPR,UAAA,EAAYA,UAAA;IACZC,UAAA,EAAYA,UAAA;IACZC,UAAA,EAAYA;oBAEhB,IAAAuB,YAAA,EAAAC,aAAA,CAAC;IAAO,GAAGX,UAAU;IAAEnB,GAAA,EAAKgB;;AAIpC;AAEA;;;;AAIA,MAAM8B,yCAAA,gBAAa,IAAAjB,YAAI,EAAEkB,UAAU,CAACjD,+BAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import $4ZPCG$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport { Menu as $49b26f4b606348f6$export$d9b273488cd8ce6f } from \"./Menu.mjs\";\nimport { MenuTrigger as $aa0b855f135b86e3$export$27d2ad3c5815583e } from \"./MenuTrigger.mjs\";\nimport { ActionButton as $4ZPCG$ActionButton } from \"@react-spectrum/button\";\nimport { filterDOMProps as $4ZPCG$filterDOMProps } from \"@react-aria/utils\";\nimport $4ZPCG$spectrumiconsworkflowMore from \"@spectrum-icons/workflow/More\";\nimport $4ZPCG$react, { forwardRef as $4ZPCG$forwardRef } from \"react\";\nimport { useLocalizedStringFormatter as $4ZPCG$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nimport { useSlotProps as $4ZPCG$useSlotProps } from \"@react-spectrum/utils\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $43fa9949e6af393d$var$ActionMenu(props, ref) {\n  props = (0, $4ZPCG$useSlotProps)(props, 'actionMenu');\n  let stringFormatter = (0, $4ZPCG$useLocalizedStringFormatter)((0, $parcel$interopDefault($4ZPCG$intlStringsmodulejs)), '@react-spectrum/menu');\n  let buttonProps = (0, $4ZPCG$filterDOMProps)(props, {\n    labelable: true\n  });\n  if (buttonProps['aria-label'] === undefined) buttonProps['aria-label'] = stringFormatter.format('moreActions');\n  return /*#__PURE__*/(0, $4ZPCG$react).createElement((0, $aa0b855f135b86e3$export$27d2ad3c5815583e), {\n    isOpen: props.isOpen,\n    defaultOpen: props.defaultOpen,\n    onOpenChange: props.onOpenChange,\n    align: props.align,\n    direction: props.direction,\n    shouldFlip: props.shouldFlip\n  }, /*#__PURE__*/(0, $4ZPCG$react).createElement((0, $4ZPCG$ActionButton), {\n    ref: ref,\n    ...props,\n    ...buttonProps\n  }, /*#__PURE__*/(0, $4ZPCG$react).createElement((0, $4ZPCG$spectrumiconsworkflowMore), null)), /*#__PURE__*/(0, $4ZPCG$react).createElement((0, $49b26f4b606348f6$export$d9b273488cd8ce6f), {\n    children: props.children,\n    items: props.items,\n    disabledKeys: props.disabledKeys,\n    onAction: props.onAction\n  }));\n}\n/**\n * ActionMenu combines an ActionButton with a Menu for simple \"more actions\" use cases.\n */\nconst $43fa9949e6af393d$export$ed57a210b9d13bb6 = /*#__PURE__*/(0, $4ZPCG$forwardRef)($43fa9949e6af393d$var$ActionMenu);\nexport { $43fa9949e6af393d$export$ed57a210b9d13bb6 as ActionMenu };","map":{"version":3,"names":["$43fa9949e6af393d$var$ActionMenu","props","ref","$4ZPCG$useSlotProps","stringFormatter","$4ZPCG$useLocalizedStringFormatter","$parcel$interopDefault","$4ZPCG$intlStringsmodulejs","buttonProps","$4ZPCG$filterDOMProps","labelable","undefined","format","$4ZPCG$react","createElement","$aa0b855f135b86e3$export$27d2ad3c5815583e","isOpen","defaultOpen","onOpenChange","align","direction","shouldFlip","$4ZPCG$ActionButton","$4ZPCG$spectrumiconsworkflowMore","$49b26f4b606348f6$export$d9b273488cd8ce6f","children","items","disabledKeys","onAction","$43fa9949e6af393d$export$ed57a210b9d13bb6","$4ZPCG$forwardRef"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-spectrum/menu/dist/packages/@react-spectrum/menu/src/ActionMenu.tsx"],"sourcesContent":["/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ActionButton} from '@react-spectrum/button';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {FocusableRef} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Menu} from './Menu';\nimport {MenuTrigger} from './MenuTrigger';\nimport More from '@spectrum-icons/workflow/More';\nimport React, {forwardRef, ReactElement} from 'react';\nimport {SpectrumActionMenuProps} from '@react-types/menu';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useSlotProps} from '@react-spectrum/utils';\n\nfunction ActionMenu<T extends object>(props: SpectrumActionMenuProps<T>, ref: FocusableRef<HTMLButtonElement>) {\n  props = useSlotProps(props, 'actionMenu');\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-spectrum/menu');\n  let buttonProps = filterDOMProps(props, {labelable: true});\n  if (buttonProps['aria-label'] === undefined) {\n    buttonProps['aria-label'] = stringFormatter.format('moreActions');\n  }\n\n  return (\n    <MenuTrigger\n      isOpen={props.isOpen}\n      defaultOpen={props.defaultOpen}\n      onOpenChange={props.onOpenChange}\n      align={props.align}\n      direction={props.direction}\n      shouldFlip={props.shouldFlip}>\n      <ActionButton\n        ref={ref}\n        {...props}\n        {...buttonProps}>\n        <More />\n      </ActionButton>\n      <Menu\n        children={props.children}\n        items={props.items}\n        disabledKeys={props.disabledKeys}\n        onAction={props.onAction} />\n    </MenuTrigger>\n  );\n}\n\n/**\n * ActionMenu combines an ActionButton with a Menu for simple \"more actions\" use cases.\n */\nconst _ActionMenu = forwardRef(ActionMenu) as <T>(props: SpectrumActionMenuProps<T> & {ref?: FocusableRef<HTMLButtonElement>}) => ReactElement;\nexport {_ActionMenu as ActionMenu};\n"],"mappings":";;;;;;;;;;;;AAAA;;;;;;;;;;;;AAyBA,SAASA,iCAA6BC,KAAiC,EAAEC,GAAoC;EAC3GD,KAAA,GAAQ,IAAAE,mBAAW,EAAEF,KAAA,EAAO;EAC5B,IAAIG,eAAA,GAAkB,IAAAC,kCAA0B,GAAE,GAAAC,sBAAA,CAAAC,0BAAA,CAAW,GAAG;EAChE,IAAIC,WAAA,GAAc,IAAAC,qBAAa,EAAER,KAAA,EAAO;IAACS,SAAA,EAAW;EAAI;EACxD,IAAIF,WAAW,CAAC,aAAa,KAAKG,SAAA,EAChCH,WAAW,CAAC,aAAa,GAAGJ,eAAA,CAAgBQ,MAAM,CAAC;EAGrD,oBACE,IAAAC,YAAA,EAAAC,aAAA,EAAC,GAAAC,yCAAU;IACTC,MAAA,EAAQf,KAAA,CAAMe,MAAM;IACpBC,WAAA,EAAahB,KAAA,CAAMgB,WAAW;IAC9BC,YAAA,EAAcjB,KAAA,CAAMiB,YAAY;IAChCC,KAAA,EAAOlB,KAAA,CAAMkB,KAAK;IAClBC,SAAA,EAAWnB,KAAA,CAAMmB,SAAS;IAC1BC,UAAA,EAAYpB,KAAA,CAAMoB;kBAClB,IAAAR,YAAA,EAAAC,aAAA,EAAC,GAAAQ,mBAAW;IACVpB,GAAA,EAAKA,GAAA;IACJ,GAAGD,KAAK;IACR,GAAGO;kBACJ,IAAAK,YAAA,EAAAC,aAAA,EAAC,GAAAS,gCAAG,wBAEN,IAAAV,YAAA,EAAAC,aAAA,EAAC,GAAAU,yCAAG;IACFC,QAAA,EAAUxB,KAAA,CAAMwB,QAAQ;IACxBC,KAAA,EAAOzB,KAAA,CAAMyB,KAAK;IAClBC,YAAA,EAAc1B,KAAA,CAAM0B,YAAY;IAChCC,QAAA,EAAU3B,KAAA,CAAM2B;;AAGxB;AAEA;;;AAGA,MAAMC,yCAAA,gBAAc,IAAAC,iBAAS,EAAE9B,gCAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
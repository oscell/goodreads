{"ast":null,"code":"import { Input as $3985021b0ad6602f$export$f5b8910cec6cf069 } from \"./Input.mjs\";\nimport { useObjectRef as $d1ZE7$useObjectRef, filterDOMProps as $d1ZE7$filterDOMProps } from \"@react-aria/utils\";\nimport { PressResponder as $d1ZE7$PressResponder } from \"@react-aria/interactions\";\nimport $d1ZE7$react, { forwardRef as $d1ZE7$forwardRef } from \"react\";\n\n/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $1e2864c73f66a4da$var$FileTrigger(props, ref) {\n  let {\n    onSelect: onSelect,\n    acceptedFileTypes: acceptedFileTypes,\n    allowsMultiple: allowsMultiple,\n    defaultCamera: defaultCamera,\n    children: children,\n    acceptDirectory: acceptDirectory,\n    ...rest\n  } = props;\n  let inputRef = (0, $d1ZE7$useObjectRef)(ref);\n  let domProps = (0, $d1ZE7$filterDOMProps)(rest);\n  return /*#__PURE__*/(0, $d1ZE7$react).createElement((0, $d1ZE7$react).Fragment, null, /*#__PURE__*/(0, $d1ZE7$react).createElement((0, $d1ZE7$PressResponder), {\n    onPress: () => {\n      var _inputRef_current, _inputRef_current1;\n      if ((_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.value) inputRef.current.value = '';\n      (_inputRef_current1 = inputRef.current) === null || _inputRef_current1 === void 0 ? void 0 : _inputRef_current1.click();\n    }\n  }, children), /*#__PURE__*/(0, $d1ZE7$react).createElement((0, $3985021b0ad6602f$export$f5b8910cec6cf069), {\n    ...domProps,\n    type: \"file\",\n    ref: inputRef,\n    style: {\n      display: 'none'\n    },\n    accept: acceptedFileTypes === null || acceptedFileTypes === void 0 ? void 0 : acceptedFileTypes.toString(),\n    onChange: e => onSelect === null || onSelect === void 0 ? void 0 : onSelect(e.target.files),\n    capture: defaultCamera,\n    multiple: allowsMultiple,\n    // @ts-expect-error\n    webkitdirectory: acceptDirectory ? '' : undefined\n  }));\n}\n/**\n * A FileTrigger allows a user to access the file system with any pressable React Aria or React Spectrum component, or custom components built with usePress.\n */\nconst $1e2864c73f66a4da$export$6fb4a10d2c950550 = /*#__PURE__*/(0, $d1ZE7$forwardRef)($1e2864c73f66a4da$var$FileTrigger);\nexport { $1e2864c73f66a4da$export$6fb4a10d2c950550 as FileTrigger };","map":{"version":3,"names":["$1e2864c73f66a4da$var$FileTrigger","props","ref","onSelect","acceptedFileTypes","allowsMultiple","defaultCamera","children","acceptDirectory","rest","inputRef","$d1ZE7$useObjectRef","domProps","$d1ZE7$filterDOMProps","$d1ZE7$react","createElement","Fragment","$d1ZE7$PressResponder","onPress","_inputRef_current","_inputRef_current1","current","value","click","$3985021b0ad6602f$export$f5b8910cec6cf069","type","style","display","accept","toString","onChange","e","target","files","capture","multiple","webkitdirectory","undefined","$1e2864c73f66a4da$export$6fb4a10d2c950550","$d1ZE7$forwardRef"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/react-aria-components/dist/packages/react-aria-components/src/FileTrigger.tsx"],"sourcesContent":["/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {filterDOMProps, useObjectRef} from '@react-aria/utils';\nimport {Input} from './Input';\nimport {PressResponder} from '@react-aria/interactions';\nimport React, {ForwardedRef, forwardRef, ReactNode} from 'react';\n\nexport interface FileTriggerProps {\n  /**\n   * Specifies what mime type of files are allowed.\n   */\n  acceptedFileTypes?: Array<string>,\n  /**\n   * Whether multiple files can be selected.\n   */\n  allowsMultiple?: boolean,\n  /**\n   * Specifies the use of a media capture mechanism to capture the media on the spot.\n   */\n  defaultCamera?: 'user' | 'environment',\n  /**\n   * Handler when a user selects a file.\n   */\n  onSelect?: (files: FileList | null) => void,\n  /**\n   * The children of the component.\n   */\n  children?: ReactNode,\n  /**\n   * Enables the selection of directories instead of individual files.\n   */\n  acceptDirectory?: boolean\n}\n\nfunction FileTrigger(props: FileTriggerProps, ref: ForwardedRef<HTMLInputElement>) {\n  let {onSelect, acceptedFileTypes, allowsMultiple, defaultCamera, children, acceptDirectory, ...rest} = props;\n  let inputRef = useObjectRef(ref);\n  let domProps = filterDOMProps(rest);\n\n  return (\n    <>\n      <PressResponder\n        onPress={() => {\n          if (inputRef.current?.value) {\n            inputRef.current.value = '';\n          }\n          inputRef.current?.click();\n        }}>\n        {children}\n      </PressResponder>\n      <Input\n        {...domProps}\n        type=\"file\"\n        ref={inputRef}\n        style={{display: 'none'}}\n        accept={acceptedFileTypes?.toString()}\n        onChange={(e) => onSelect?.(e.target.files)}\n        capture={defaultCamera}\n        multiple={allowsMultiple}\n        // @ts-expect-error\n        webkitdirectory={acceptDirectory ? '' : undefined} />\n    </>\n  );\n}\n\n/**\n * A FileTrigger allows a user to access the file system with any pressable React Aria or React Spectrum component, or custom components built with usePress.\n */\nconst _FileTrigger = forwardRef(FileTrigger);\nexport {_FileTrigger  as FileTrigger};\n"],"mappings":";;;;;AAAA;;;;;;;;;;;;AA4CA,SAASA,kCAAYC,KAAuB,EAAEC,GAAmC;EAC/E,IAAI;IAAAC,QAAA,EAACA,QAAQ;IAAAC,iBAAA,EAAEA,iBAAiB;IAAAC,cAAA,EAAEA,cAAc;IAAAC,aAAA,EAAEA,aAAa;IAAAC,QAAA,EAAEA,QAAQ;IAAAC,eAAA,EAAEA,eAAe;IAAE,GAAGC;EAAA,CAAK,GAAGR,KAAA;EACvG,IAAIS,QAAA,GAAW,IAAAC,mBAAW,EAAET,GAAA;EAC5B,IAAIU,QAAA,GAAW,IAAAC,qBAAa,EAAEJ,IAAA;EAE9B,oBACE,IAAAK,YAAA,EAAAC,aAAA,KAAAD,YAAA,EAAAE,QAAA,qBACE,IAAAF,YAAA,EAAAC,aAAA,EAAC,GAAAE,qBAAa;IACZC,OAAA,EAASA,CAAA;UACHC,iBAAA,EAGJC,kBAAA;MAHA,KAAID,iBAAA,GAAAT,QAAA,CAASW,OAAO,cAAhBF,iBAAA,uBAAAA,iBAAA,CAAkBG,KAAK,EACzBZ,QAAA,CAASW,OAAO,CAACC,KAAK,GAAG;OAE3BF,kBAAA,GAAAV,QAAA,CAASW,OAAO,cAAhBD,kBAAA,uBAAAA,kBAAA,CAAkBG,KAAK;IACzB;KACChB,QAAA,gBAEH,IAAAO,YAAA,EAAAC,aAAA,EAAC,GAAAS,yCAAI;IACF,GAAGZ,QAAQ;IACZa,IAAA,EAAK;IACLvB,GAAA,EAAKQ,QAAA;IACLgB,KAAA,EAAO;MAACC,OAAA,EAAS;IAAM;IACvBC,MAAM,EAAExB,iBAAA,aAAAA,iBAAA,uBAAAA,iBAAA,CAAmByB,QAAQ;IACnCC,QAAA,EAAWC,CAAA,IAAM5B,QAAA,aAAAA,QAAA,uBAAAA,QAAA,CAAW4B,CAAA,CAAEC,MAAM,CAACC,KAAK;IAC1CC,OAAA,EAAS5B,aAAA;IACT6B,QAAA,EAAU9B,cAAA;IACV;IACA+B,eAAA,EAAiB5B,eAAA,GAAkB,KAAK6B;;AAGhD;AAEA;;;AAGA,MAAMC,yCAAA,gBAAe,IAAAC,iBAAS,EAAEvC,iCAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"./vars.83159c34.css\";\nimport $1nHC4$calendar_vars_cssmodulejs from \"./calendar_vars_css.mjs\";\nimport { useCalendarCell as $1nHC4$useCalendarCell } from \"@react-aria/calendar\";\nimport { isSameMonth as $1nHC4$isSameMonth, isSameDay as $1nHC4$isSameDay, getDayOfWeek as $1nHC4$getDayOfWeek, isToday as $1nHC4$isToday } from \"@internationalized/date\";\nimport { classNames as $1nHC4$classNames } from \"@react-spectrum/utils\";\nimport { mergeProps as $1nHC4$mergeProps } from \"@react-aria/utils\";\nimport $1nHC4$react, { useRef as $1nHC4$useRef } from \"react\";\nimport { useFocusRing as $1nHC4$useFocusRing } from \"@react-aria/focus\";\nimport { useHover as $1nHC4$useHover } from \"@react-aria/interactions\";\nimport { useLocale as $1nHC4$useLocale } from \"@react-aria/i18n\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $453c556b9066da11$export$5d847498420df57b({\n  state: state,\n  currentMonth: currentMonth,\n  ...props\n}) {\n  let ref = (0, $1nHC4$useRef)(null);\n  let {\n    cellProps: cellProps,\n    buttonProps: buttonProps,\n    isPressed: isPressed,\n    isSelected: isSelected,\n    isDisabled: isDisabled,\n    isFocused: isFocused,\n    isInvalid: isInvalid,\n    formattedDate: formattedDate\n  } = (0, $1nHC4$useCalendarCell)({\n    ...props,\n    isDisabled: !(0, $1nHC4$isSameMonth)(props.date, currentMonth)\n  }, state, ref);\n  let isUnavailable = state.isCellUnavailable(props.date) && !isDisabled;\n  let isLastSelectedBeforeDisabled = !isDisabled && !isInvalid && state.isCellUnavailable(props.date.add({\n    days: 1\n  }));\n  let isFirstSelectedAfterDisabled = !isDisabled && !isInvalid && state.isCellUnavailable(props.date.subtract({\n    days: 1\n  }));\n  let highlightedRange = 'highlightedRange' in state && state.highlightedRange;\n  let isSelectionStart = isSelected && highlightedRange && (0, $1nHC4$isSameDay)(props.date, highlightedRange.start);\n  let isSelectionEnd = isSelected && highlightedRange && (0, $1nHC4$isSameDay)(props.date, highlightedRange.end);\n  let {\n    locale: locale\n  } = (0, $1nHC4$useLocale)();\n  let dayOfWeek = (0, $1nHC4$getDayOfWeek)(props.date, locale);\n  let isRangeStart = isSelected && (isFirstSelectedAfterDisabled || dayOfWeek === 0 || props.date.day === 1);\n  let isRangeEnd = isSelected && (isLastSelectedBeforeDisabled || dayOfWeek === 6 || props.date.day === currentMonth.calendar.getDaysInMonth(currentMonth));\n  let {\n    focusProps: focusProps,\n    isFocusVisible: isFocusVisible\n  } = (0, $1nHC4$useFocusRing)();\n  let {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  } = (0, $1nHC4$useHover)({\n    isDisabled: isDisabled || isUnavailable || state.isReadOnly\n  });\n  return /*#__PURE__*/(0, $1nHC4$react).createElement(\"td\", {\n    ...cellProps,\n    className: (0, $1nHC4$classNames)((0, $parcel$interopDefault($1nHC4$calendar_vars_cssmodulejs)), 'spectrum-Calendar-tableCell')\n  }, /*#__PURE__*/(0, $1nHC4$react).createElement(\"span\", {\n    ...(0, $1nHC4$mergeProps)(buttonProps, hoverProps, focusProps),\n    ref: ref,\n    className: (0, $1nHC4$classNames)((0, $parcel$interopDefault($1nHC4$calendar_vars_cssmodulejs)), 'spectrum-Calendar-date', {\n      'is-today': (0, $1nHC4$isToday)(props.date, state.timeZone),\n      'is-selected': isSelected,\n      'is-focused': isFocused && isFocusVisible,\n      // Style disabled (i.e. out of min/max range), but selected dates as unavailable\n      // since it is more clear than trying to dim the selection.\n      'is-disabled': isDisabled && !isInvalid,\n      'is-unavailable': isUnavailable || isInvalid && isDisabled,\n      'is-outsideMonth': !(0, $1nHC4$isSameMonth)(props.date, currentMonth),\n      'is-range-start': isRangeStart,\n      'is-range-end': isRangeEnd,\n      'is-range-selection': isSelected && 'highlightedRange' in state,\n      'is-selection-start': isSelectionStart,\n      'is-selection-end': isSelectionEnd,\n      'is-hovered': isHovered,\n      'is-pressed': isPressed && !state.isReadOnly,\n      'is-invalid': isInvalid\n    })\n  }, /*#__PURE__*/(0, $1nHC4$react).createElement(\"span\", {\n    className: (0, $1nHC4$classNames)((0, $parcel$interopDefault($1nHC4$calendar_vars_cssmodulejs)), 'spectrum-Calendar-dateText')\n  }, /*#__PURE__*/(0, $1nHC4$react).createElement(\"span\", null, formattedDate))));\n}\nexport { $453c556b9066da11$export$5d847498420df57b as CalendarCell };","map":{"version":3,"names":["$453c556b9066da11$export$5d847498420df57b","state","currentMonth","props","ref","$1nHC4$useRef","cellProps","buttonProps","isPressed","isSelected","isDisabled","isFocused","isInvalid","formattedDate","$1nHC4$useCalendarCell","$1nHC4$isSameMonth","date","isUnavailable","isCellUnavailable","isLastSelectedBeforeDisabled","add","days","isFirstSelectedAfterDisabled","subtract","highlightedRange","isSelectionStart","$1nHC4$isSameDay","start","isSelectionEnd","end","locale","$1nHC4$useLocale","dayOfWeek","$1nHC4$getDayOfWeek","isRangeStart","day","isRangeEnd","calendar","getDaysInMonth","focusProps","isFocusVisible","$1nHC4$useFocusRing","hoverProps","isHovered","$1nHC4$useHover","isReadOnly","$1nHC4$react","createElement","className","$1nHC4$classNames","$parcel$interopDefault","$1nHC4$calendar_vars_cssmodulejs","$1nHC4$mergeProps","$1nHC4$isToday","timeZone"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-spectrum/calendar/dist/packages/@react-spectrum/calendar/src/CalendarCell.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCalendarCellProps, useCalendarCell} from '@react-aria/calendar';\nimport {CalendarDate, getDayOfWeek, isSameDay, isSameMonth, isToday} from '@internationalized/date';\nimport {CalendarState, RangeCalendarState} from '@react-stately/calendar';\nimport {classNames} from '@react-spectrum/utils';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {useRef} from 'react';\nimport styles from '@adobe/spectrum-css-temp/components/calendar/vars.css';\nimport {useFocusRing} from '@react-aria/focus';\nimport {useHover} from '@react-aria/interactions';\nimport {useLocale} from '@react-aria/i18n';\n\ninterface CalendarCellProps extends AriaCalendarCellProps {\n  state: CalendarState | RangeCalendarState,\n  currentMonth: CalendarDate\n}\n\nexport function CalendarCell({state, currentMonth, ...props}: CalendarCellProps) {\n  let ref = useRef<HTMLElement>(null);\n  let {\n    cellProps,\n    buttonProps,\n    isPressed,\n    isSelected,\n    isDisabled,\n    isFocused,\n    isInvalid,\n    formattedDate\n  } = useCalendarCell({\n    ...props,\n    isDisabled: !isSameMonth(props.date, currentMonth)\n  }, state, ref);\n  let isUnavailable = state.isCellUnavailable(props.date) && !isDisabled;\n  let isLastSelectedBeforeDisabled = !isDisabled && !isInvalid && state.isCellUnavailable(props.date.add({days: 1}));\n  let isFirstSelectedAfterDisabled = !isDisabled && !isInvalid && state.isCellUnavailable(props.date.subtract({days: 1}));\n  let highlightedRange = 'highlightedRange' in state && state.highlightedRange;\n  let isSelectionStart = isSelected && highlightedRange && isSameDay(props.date, highlightedRange.start);\n  let isSelectionEnd = isSelected && highlightedRange && isSameDay(props.date, highlightedRange.end);\n  let {locale} = useLocale();\n  let dayOfWeek = getDayOfWeek(props.date, locale);\n  let isRangeStart = isSelected && (isFirstSelectedAfterDisabled || dayOfWeek === 0 || props.date.day === 1);\n  let isRangeEnd = isSelected && (isLastSelectedBeforeDisabled || dayOfWeek === 6 || props.date.day === currentMonth.calendar.getDaysInMonth(currentMonth));\n  let {focusProps, isFocusVisible} = useFocusRing();\n  let {hoverProps, isHovered} = useHover({isDisabled: isDisabled || isUnavailable || state.isReadOnly});\n\n  return (\n    <td\n      {...cellProps}\n      className={classNames(styles, 'spectrum-Calendar-tableCell')}>\n      <span\n        {...mergeProps(buttonProps, hoverProps, focusProps)}\n        ref={ref}\n        className={classNames(styles, 'spectrum-Calendar-date', {\n          'is-today': isToday(props.date, state.timeZone),\n          'is-selected': isSelected,\n          'is-focused': isFocused && isFocusVisible,\n          // Style disabled (i.e. out of min/max range), but selected dates as unavailable\n          // since it is more clear than trying to dim the selection.\n          'is-disabled': isDisabled && !isInvalid,\n          'is-unavailable': isUnavailable || (isInvalid && isDisabled),\n          'is-outsideMonth': !isSameMonth(props.date, currentMonth),\n          'is-range-start': isRangeStart,\n          'is-range-end': isRangeEnd,\n          'is-range-selection': isSelected && 'highlightedRange' in state,\n          'is-selection-start': isSelectionStart,\n          'is-selection-end': isSelectionEnd,\n          'is-hovered': isHovered,\n          'is-pressed': isPressed && !state.isReadOnly,\n          'is-invalid': isInvalid\n        })}>\n        <span className={classNames(styles, 'spectrum-Calendar-dateText')}>\n          <span>{formattedDate}</span>\n        </span>\n      </span>\n    </td>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;AA4BO,SAASA,0CAAa;EAAAC,KAAA,EAACA,KAAK;EAAAC,YAAA,EAAEA,YAAY;EAAE,GAAGC;AAAA,CAAyB;EAC7E,IAAIC,GAAA,GAAM,IAAAC,aAAK,EAAe;EAC9B,IAAI;IAAAC,SAAA,EACFA,SAAS;IAAAC,WAAA,EACTA,WAAW;IAAAC,SAAA,EACXA,SAAS;IAAAC,UAAA,EACTA,UAAU;IAAAC,UAAA,EACVA,UAAU;IAAAC,SAAA,EACVA,SAAS;IAAAC,SAAA,EACTA,SAAS;IAAAC,aAAA,EACTA;EAAa,CACd,GAAG,IAAAC,sBAAc,EAAE;IAClB,GAAGX,KAAK;IACRO,UAAA,EAAY,CAAC,IAAAK,kBAAU,EAAEZ,KAAA,CAAMa,IAAI,EAAEd,YAAA;EACvC,GAAGD,KAAA,EAAOG,GAAA;EACV,IAAIa,aAAA,GAAgBhB,KAAA,CAAMiB,iBAAiB,CAACf,KAAA,CAAMa,IAAI,KAAK,CAACN,UAAA;EAC5D,IAAIS,4BAAA,GAA+B,CAACT,UAAA,IAAc,CAACE,SAAA,IAAaX,KAAA,CAAMiB,iBAAiB,CAACf,KAAA,CAAMa,IAAI,CAACI,GAAG,CAAC;IAACC,IAAA,EAAM;EAAC;EAC/G,IAAIC,4BAAA,GAA+B,CAACZ,UAAA,IAAc,CAACE,SAAA,IAAaX,KAAA,CAAMiB,iBAAiB,CAACf,KAAA,CAAMa,IAAI,CAACO,QAAQ,CAAC;IAACF,IAAA,EAAM;EAAC;EACpH,IAAIG,gBAAA,GAAmB,sBAAsBvB,KAAA,IAASA,KAAA,CAAMuB,gBAAgB;EAC5E,IAAIC,gBAAA,GAAmBhB,UAAA,IAAce,gBAAA,IAAoB,IAAAE,gBAAQ,EAAEvB,KAAA,CAAMa,IAAI,EAAEQ,gBAAA,CAAiBG,KAAK;EACrG,IAAIC,cAAA,GAAiBnB,UAAA,IAAce,gBAAA,IAAoB,IAAAE,gBAAQ,EAAEvB,KAAA,CAAMa,IAAI,EAAEQ,gBAAA,CAAiBK,GAAG;EACjG,IAAI;IAAAC,MAAA,EAACA;EAAM,CAAC,GAAG,IAAAC,gBAAQ;EACvB,IAAIC,SAAA,GAAY,IAAAC,mBAAW,EAAE9B,KAAA,CAAMa,IAAI,EAAEc,MAAA;EACzC,IAAII,YAAA,GAAezB,UAAA,KAAea,4BAAA,IAAgCU,SAAA,KAAc,KAAK7B,KAAA,CAAMa,IAAI,CAACmB,GAAG,KAAK;EACxG,IAAIC,UAAA,GAAa3B,UAAA,KAAeU,4BAAA,IAAgCa,SAAA,KAAc,KAAK7B,KAAA,CAAMa,IAAI,CAACmB,GAAG,KAAKjC,YAAA,CAAamC,QAAQ,CAACC,cAAc,CAACpC,YAAA,CAAY;EACvJ,IAAI;IAAAqC,UAAA,EAACA,UAAU;IAAAC,cAAA,EAAEA;EAAc,CAAC,GAAG,IAAAC,mBAAW;EAC9C,IAAI;IAAAC,UAAA,EAACA,UAAU;IAAAC,SAAA,EAAEA;EAAS,CAAC,GAAG,IAAAC,eAAO,EAAE;IAAClC,UAAA,EAAYA,UAAA,IAAcO,aAAA,IAAiBhB,KAAA,CAAM4C;EAAU;EAEnG,oBACE,IAAAC,YAAA,EAAAC,aAAA,CAAC;IACE,GAAGzC,SAAS;IACb0C,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,gCAAA,CAAK,GAAG;kBAC9B,IAAAL,YAAA,EAAAC,aAAA,CAAC;IACE,GAAG,IAAAK,iBAAS,EAAE7C,WAAA,EAAamC,UAAA,EAAYH,UAAA,CAAW;IACnDnC,GAAA,EAAKA,GAAA;IACL4C,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,gCAAA,CAAK,GAAG,0BAA0B;MACtD,YAAY,IAAAE,cAAM,EAAElD,KAAA,CAAMa,IAAI,EAAEf,KAAA,CAAMqD,QAAQ;MAC9C,eAAe7C,UAAA;MACf,cAAcE,SAAA,IAAa6B,cAAA;MAC3B;MACA;MACA,eAAe9B,UAAA,IAAc,CAACE,SAAA;MAC9B,kBAAkBK,aAAA,IAAkBL,SAAA,IAAaF,UAAA;MACjD,mBAAmB,CAAC,IAAAK,kBAAU,EAAEZ,KAAA,CAAMa,IAAI,EAAEd,YAAA;MAC5C,kBAAkBgC,YAAA;MAClB,gBAAgBE,UAAA;MAChB,sBAAsB3B,UAAA,IAAc,sBAAsBR,KAAA;MAC1D,sBAAsBwB,gBAAA;MACtB,oBAAoBG,cAAA;MACpB,cAAce,SAAA;MACd,cAAcnC,SAAA,IAAa,CAACP,KAAA,CAAM4C,UAAU;MAC5C,cAAcjC;IAChB;kBACA,IAAAkC,YAAA,EAAAC,aAAA,CAAC;IAAKC,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,gCAAA,CAAK,GAAG;kBAClC,IAAAL,YAAA,EAAAC,aAAA,CAAC,cAAMlC,aAAA;AAKjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
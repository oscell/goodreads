{"ast":null,"code":"import { useRenderProps as $64fa3d84918910a7$export$4d86445c2cf5e3 } from \"./utils.mjs\";\nimport { filterDOMProps as $1Ipl1$filterDOMProps } from \"@react-aria/utils\";\nimport { mergeProps as $1Ipl1$mergeProps } from \"react-aria\";\nimport $1Ipl1$react, { createContext as $1Ipl1$createContext, useContext as $1Ipl1$useContext, forwardRef as $1Ipl1$forwardRef } from \"react\";\nimport { useFocusRing as $1Ipl1$useFocusRing } from \"@react-aria/focus\";\nimport { useHover as $1Ipl1$useHover } from \"@react-aria/interactions\";\nconst $e2b71ec1d6016406$export$c80c0ea2ca5cb846 = /*#__PURE__*/(0, $1Ipl1$createContext)(null);\nfunction $e2b71ec1d6016406$var$ColorThumb(props, ref) {\n  let {\n    state: state,\n    thumbProps: thumbProps,\n    inputXRef: inputXRef,\n    inputYRef: inputYRef,\n    xInputProps: xInputProps,\n    yInputProps: yInputProps,\n    isDisabled = false\n  } = (0, $1Ipl1$useContext)($e2b71ec1d6016406$export$c80c0ea2ca5cb846);\n  let {\n    focusProps: focusProps,\n    isFocused: isFocused,\n    isFocusVisible: isFocusVisible\n  } = (0, $1Ipl1$useFocusRing)();\n  let {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  } = (0, $1Ipl1$useHover)(props);\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({\n    ...props,\n    defaultClassName: 'react-aria-ColorThumb',\n    defaultStyle: {\n      ...thumbProps.style,\n      backgroundColor: state.getDisplayColor().toString()\n    },\n    values: {\n      color: state.getDisplayColor(),\n      isHovered: isHovered,\n      isDragging: state.isDragging,\n      isFocused: isFocused,\n      isFocusVisible: isFocusVisible,\n      isDisabled: isDisabled\n    }\n  });\n  let DOMProps = (0, $1Ipl1$filterDOMProps)(props);\n  delete DOMProps.id;\n  return /*#__PURE__*/(0, $1Ipl1$react).createElement(\"div\", {\n    ...(0, $1Ipl1$mergeProps)(thumbProps, hoverProps, DOMProps),\n    ...renderProps,\n    ref: ref,\n    \"data-hovered\": isHovered || undefined,\n    \"data-dragging\": state.isDragging || undefined,\n    \"data-focused\": isFocused || undefined,\n    \"data-focus-visible\": isFocusVisible || undefined,\n    \"data-disabled\": isDisabled || undefined\n  }, /*#__PURE__*/(0, $1Ipl1$react).createElement(\"input\", {\n    ref: inputXRef,\n    ...xInputProps,\n    ...focusProps\n  }), yInputProps && /*#__PURE__*/(0, $1Ipl1$react).createElement(\"input\", {\n    ref: inputYRef,\n    ...yInputProps,\n    ...focusProps\n  }), renderProps.children);\n}\n/**\n * A color thumb appears within a ColorArea, ColorSlider, or ColorWheel and allows a user to drag to adjust the color value.\n */\nconst $e2b71ec1d6016406$export$a3cc47cee1c1ccc = /*#__PURE__*/(0, $1Ipl1$forwardRef)($e2b71ec1d6016406$var$ColorThumb);\nexport { $e2b71ec1d6016406$export$c80c0ea2ca5cb846 as InternalColorThumbContext, $e2b71ec1d6016406$export$a3cc47cee1c1ccc as ColorThumb };","map":{"version":3,"names":["$e2b71ec1d6016406$export$c80c0ea2ca5cb846","$1Ipl1$createContext","$e2b71ec1d6016406$var$ColorThumb","props","ref","state","thumbProps","inputXRef","inputYRef","xInputProps","yInputProps","isDisabled","$1Ipl1$useContext","focusProps","isFocused","isFocusVisible","$1Ipl1$useFocusRing","hoverProps","isHovered","$1Ipl1$useHover","renderProps","$64fa3d84918910a7$export$4d86445c2cf5e3","defaultClassName","defaultStyle","style","backgroundColor","getDisplayColor","toString","values","color","isDragging","DOMProps","$1Ipl1$filterDOMProps","id","$1Ipl1$react","createElement","$1Ipl1$mergeProps","undefined","children","$e2b71ec1d6016406$export$a3cc47cee1c1ccc","$1Ipl1$forwardRef"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/react-aria-components/dist/packages/react-aria-components/src/ColorThumb.tsx"],"sourcesContent":["import {Color} from '@react-types/color';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {HoverEvents, RefObject} from '@react-types/shared';\nimport {mergeProps} from 'react-aria';\nimport React, {createContext, ForwardedRef, forwardRef, HTMLAttributes, InputHTMLAttributes, useContext} from 'react';\nimport {RenderProps, useRenderProps} from './utils';\nimport {useFocusRing} from '@react-aria/focus';\nimport {useHover} from '@react-aria/interactions';\n\ninterface ColorState {\n  getDisplayColor(): Color,\n  isDragging: boolean\n}\n\ninterface InternalColorThumbContextValue {\n  state: ColorState,\n  thumbProps: HTMLAttributes<HTMLElement>,\n  inputXRef: RefObject<HTMLInputElement | null>,\n  inputYRef?: RefObject<HTMLInputElement | null>,\n  xInputProps: InputHTMLAttributes<HTMLInputElement>,\n  yInputProps?: InputHTMLAttributes<HTMLInputElement>,\n  isDisabled?: boolean\n}\n\nexport const InternalColorThumbContext = createContext<InternalColorThumbContextValue | null>(null);\n\nexport interface ColorThumbRenderProps {\n  /**\n   * The selected color, excluding the alpha channel.\n   */\n  color: Color,\n  /**\n   * Whether this thumb is currently being dragged.\n   * @selector [data-dragging]\n   */\n  isDragging: boolean,\n  /**\n   * Whether the thumb is currently hovered with a mouse.\n   * @selector [data-hovered]\n   */\n  isHovered: boolean,\n  /**\n   * Whether the thumb is currently focused.\n   * @selector [data-focused]\n   */\n  isFocused: boolean,\n  /**\n   * Whether the thumb is keyboard focused.\n   * @selector [data-focus-visible]\n   */\n  isFocusVisible: boolean,\n  /**\n   * Whether the thumb is disabled.\n   * @selector [data-disabled]\n   */\n  isDisabled: boolean\n}\n\nexport interface ColorThumbProps extends HoverEvents, RenderProps<ColorThumbRenderProps> {}\n\nfunction ColorThumb(props: ColorThumbProps, ref: ForwardedRef<HTMLDivElement>) {\n  let {state, thumbProps, inputXRef, inputYRef, xInputProps, yInputProps, isDisabled = false} = useContext(InternalColorThumbContext)!;\n  let {focusProps, isFocused, isFocusVisible} = useFocusRing();\n  let {hoverProps, isHovered} = useHover(props);\n\n  let renderProps = useRenderProps({\n    ...props,\n    defaultClassName: 'react-aria-ColorThumb',\n    defaultStyle: {\n      ...thumbProps.style,\n      backgroundColor: state.getDisplayColor().toString()\n    },\n    values: {\n      color: state.getDisplayColor(),\n      isHovered,\n      isDragging: state.isDragging,\n      isFocused,\n      isFocusVisible,\n      isDisabled\n    }\n  });\n\n  let DOMProps = filterDOMProps(props as any);\n  delete DOMProps.id;\n\n  return (\n    <div\n      {...mergeProps(thumbProps, hoverProps, DOMProps)}\n      {...renderProps}\n      ref={ref}\n      data-hovered={isHovered || undefined}\n      data-dragging={state.isDragging || undefined}\n      data-focused={isFocused || undefined}\n      data-focus-visible={isFocusVisible || undefined}\n      data-disabled={isDisabled || undefined}>\n      <input ref={inputXRef} {...xInputProps} {...focusProps} />\n      {yInputProps && <input ref={inputYRef} {...yInputProps} {...focusProps} />}\n      {renderProps.children}\n    </div>\n  );\n}\n\n/**\n * A color thumb appears within a ColorArea, ColorSlider, or ColorWheel and allows a user to drag to adjust the color value.\n */\nconst _ColorThumb = forwardRef(ColorThumb);\nexport {_ColorThumb as ColorThumb};\n"],"mappings":";;;;;;AAwBO,MAAMA,yCAAA,gBAA4B,IAAAC,oBAAY,EAAyC;AAoC9F,SAASC,iCAAWC,KAAsB,EAAEC,GAAiC;EAC3E,IAAI;IAAAC,KAAA,EAACA,KAAK;IAAAC,UAAA,EAAEA,UAAU;IAAAC,SAAA,EAAEA,SAAS;IAAAC,SAAA,EAAEA,SAAS;IAAAC,WAAA,EAAEA,WAAW;IAAAC,WAAA,EAAEA,WAAW;IAAEC,UAAA,GAAa;EAAA,CAAM,GAAG,IAAAC,iBAAS,EAAEZ,yCAAA;EACzG,IAAI;IAAAa,UAAA,EAACA,UAAU;IAAAC,SAAA,EAAEA,SAAS;IAAAC,cAAA,EAAEA;EAAc,CAAC,GAAG,IAAAC,mBAAW;EACzD,IAAI;IAAAC,UAAA,EAACA,UAAU;IAAAC,SAAA,EAAEA;EAAS,CAAC,GAAG,IAAAC,eAAO,EAAEhB,KAAA;EAEvC,IAAIiB,WAAA,GAAc,IAAAC,uCAAa,EAAE;IAC/B,GAAGlB,KAAK;IACRmB,gBAAA,EAAkB;IAClBC,YAAA,EAAc;MACZ,GAAGjB,UAAA,CAAWkB,KAAK;MACnBC,eAAA,EAAiBpB,KAAA,CAAMqB,eAAe,GAAGC,QAAQ;IACnD;IACAC,MAAA,EAAQ;MACNC,KAAA,EAAOxB,KAAA,CAAMqB,eAAe;iBAC5BR,SAAA;MACAY,UAAA,EAAYzB,KAAA,CAAMyB,UAAU;iBAC5BhB,SAAA;sBACAC,cAAA;kBACAJ;IACF;EACF;EAEA,IAAIoB,QAAA,GAAW,IAAAC,qBAAa,EAAE7B,KAAA;EAC9B,OAAO4B,QAAA,CAASE,EAAE;EAElB,oBACE,IAAAC,YAAA,EAAAC,aAAA,CAAC;IACE,GAAG,IAAAC,iBAAS,EAAE9B,UAAA,EAAYW,UAAA,EAAYc,QAAA,CAAS;IAC/C,GAAGX,WAAW;IACfhB,GAAA,EAAKA,GAAA;IACL,gBAAcc,SAAA,IAAamB,SAAA;IAC3B,iBAAehC,KAAA,CAAMyB,UAAU,IAAIO,SAAA;IACnC,gBAAcvB,SAAA,IAAauB,SAAA;IAC3B,sBAAoBtB,cAAA,IAAkBsB,SAAA;IACtC,iBAAe1B,UAAA,IAAc0B;kBAC7B,IAAAH,YAAA,EAAAC,aAAA,CAAC;IAAM/B,GAAA,EAAKG,SAAA;IAAY,GAAGE,WAAW;IAAG,GAAGI;MAC3CH,WAAA,iBAAe,IAAAwB,YAAA,EAAAC,aAAA,CAAC;IAAM/B,GAAA,EAAKI,SAAA;IAAY,GAAGE,WAAW;IAAG,GAAGG;MAC3DO,WAAA,CAAYkB,QAAQ;AAG3B;AAEA;;;AAGA,MAAMC,wCAAA,gBAAc,IAAAC,iBAAS,EAAEtC,gCAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
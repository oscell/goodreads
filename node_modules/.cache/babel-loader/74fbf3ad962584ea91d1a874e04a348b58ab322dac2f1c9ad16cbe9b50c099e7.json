{"ast":null,"code":"import \"./vars.53b5474c.css\";\nimport $jtG7a$badge_vars_cssmodulejs from \"./badge_vars_css.mjs\";\nimport { useDOMRef as $jtG7a$useDOMRef, useStyleProps as $jtG7a$useStyleProps, classNames as $jtG7a$classNames, SlotProvider as $jtG7a$SlotProvider } from \"@react-spectrum/utils\";\nimport { filterDOMProps as $jtG7a$filterDOMProps } from \"@react-aria/utils\";\nimport $jtG7a$react, { forwardRef as $jtG7a$forwardRef } from \"react\";\nimport { Text as $jtG7a$Text } from \"@react-spectrum/text\";\nimport { useProviderProps as $jtG7a$useProviderProps } from \"@react-spectrum/provider\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $c2a9f60d7159b63f$var$Badge(props, ref) {\n  let {\n    children: children,\n    variant: variant,\n    ...otherProps\n  } = (0, $jtG7a$useProviderProps)(props);\n  let domRef = (0, $jtG7a$useDOMRef)(ref);\n  let {\n    styleProps: styleProps\n  } = (0, $jtG7a$useStyleProps)(otherProps);\n  let isTextOnly = (0, $jtG7a$react).Children.toArray(props.children).every(c => ! /*#__PURE__*/(0, $jtG7a$react).isValidElement(c));\n  return /*#__PURE__*/(0, $jtG7a$react).createElement(\"span\", {\n    ...(0, $jtG7a$filterDOMProps)(otherProps),\n    ...styleProps,\n    role: \"presentation\",\n    className: (0, $jtG7a$classNames)((0, $parcel$interopDefault($jtG7a$badge_vars_cssmodulejs)), 'spectrum-Badge', {\n      [`spectrum-Badge--${variant}`]: variant\n    }, styleProps.className),\n    ref: domRef\n  }, /*#__PURE__*/(0, $jtG7a$react).createElement((0, $jtG7a$SlotProvider), {\n    slots: {\n      icon: {\n        size: 'S',\n        UNSAFE_className: (0, $jtG7a$classNames)((0, $parcel$interopDefault($jtG7a$badge_vars_cssmodulejs)), 'spectrum-Badge-icon')\n      },\n      text: {\n        UNSAFE_className: (0, $jtG7a$classNames)((0, $parcel$interopDefault($jtG7a$badge_vars_cssmodulejs)), 'spectrum-Badge-label')\n      }\n    }\n  }, typeof children === 'string' || isTextOnly ? /*#__PURE__*/(0, $jtG7a$react).createElement((0, $jtG7a$Text), null, children) : children));\n}\n/**\n * Badges are used for showing a small amount of color-categorized metadata, ideal for getting a user's attention.\n */\nlet $c2a9f60d7159b63f$export$37acb3580601e69a = /*#__PURE__*/(0, $jtG7a$forwardRef)($c2a9f60d7159b63f$var$Badge);\nexport { $c2a9f60d7159b63f$export$37acb3580601e69a as Badge };","map":{"version":3,"names":["$c2a9f60d7159b63f$var$Badge","props","ref","children","variant","otherProps","$jtG7a$useProviderProps","domRef","$jtG7a$useDOMRef","styleProps","$jtG7a$useStyleProps","isTextOnly","$jtG7a$react","Children","toArray","every","c","isValidElement","createElement","$jtG7a$filterDOMProps","role","className","$jtG7a$classNames","$parcel$interopDefault","$jtG7a$badge_vars_cssmodulejs","$jtG7a$SlotProvider","slots","icon","size","UNSAFE_className","text","$jtG7a$Text","$c2a9f60d7159b63f$export$37acb3580601e69a","$jtG7a$forwardRef"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-spectrum/badge/dist/packages/@react-spectrum/badge/src/Badge.tsx"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, SlotProvider, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport React, {forwardRef} from 'react';\nimport {SpectrumBadgeProps} from '@react-types/badge';\nimport styles from '@adobe/spectrum-css-temp/components/badge/vars.css';\nimport {Text} from '@react-spectrum/text';\nimport {useProviderProps} from '@react-spectrum/provider';\n\n\nfunction Badge(props: SpectrumBadgeProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    children,\n    variant,\n    ...otherProps\n  } = useProviderProps(props);\n  let domRef = useDOMRef(ref);\n  let {styleProps} = useStyleProps(otherProps);\n  let isTextOnly = React.Children.toArray(props.children).every(c => !React.isValidElement(c));\n\n  return (\n    <span\n      {...filterDOMProps(otherProps)}\n      {...styleProps}\n      role=\"presentation\"\n      className={classNames(\n        styles,\n        'spectrum-Badge',\n        {\n          [`spectrum-Badge--${variant}`]: variant\n        },\n        styleProps.className\n      )}\n      ref={domRef}>\n      <SlotProvider\n        slots={{\n          icon: {\n            size: 'S',\n            UNSAFE_className: classNames(styles, 'spectrum-Badge-icon')\n          },\n          text: {\n            UNSAFE_className: classNames(styles, 'spectrum-Badge-label')\n          }\n        }}>\n\n        {\n          typeof children === 'string' || isTextOnly\n            ? <Text>{children}</Text>\n            : children\n        }\n      </SlotProvider>\n    </span>\n  );\n}\n\n/**\n * Badges are used for showing a small amount of color-categorized metadata, ideal for getting a user's attention.\n */\nlet _Badge = forwardRef(Badge);\nexport {_Badge as Badge};\n"],"mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;AAsBA,SAASA,4BAAMC,KAAyB,EAAEC,GAA2B;EACnE,IAAI;IAAAC,QAAA,EACFA,QAAQ;IAAAC,OAAA,EACRA,OAAO;IACP,GAAGC;EAAA,CACJ,GAAG,IAAAC,uBAAe,EAAEL,KAAA;EACrB,IAAIM,MAAA,GAAS,IAAAC,gBAAQ,EAAEN,GAAA;EACvB,IAAI;IAAAO,UAAA,EAACA;EAAU,CAAC,GAAG,IAAAC,oBAAY,EAAEL,UAAA;EACjC,IAAIM,UAAA,GAAa,IAAAC,YAAI,EAAEC,QAAQ,CAACC,OAAO,CAACb,KAAA,CAAME,QAAQ,EAAEY,KAAK,CAACC,CAAA,IAAK,eAAC,IAAAJ,YAAI,EAAEK,cAAc,CAACD,CAAA;EAEzF,oBACE,IAAAJ,YAAA,EAAAM,aAAA,CAAC;IACE,GAAG,IAAAC,qBAAa,EAAEd,UAAA,CAAW;IAC7B,GAAGI,UAAU;IACdW,IAAA,EAAK;IACLC,SAAA,EAAW,IAAAC,iBAAS,GAClB,GAAAC,sBAAA,CAAAC,6BAAA,CAAK,GACL,kBACA;MACE,CAAC,mBAAmBpB,OAAA,EAAS,GAAGA;IAClC,GACAK,UAAA,CAAWY,SAAS;IAEtBnB,GAAA,EAAKK;kBACL,IAAAK,YAAA,EAAAM,aAAA,EAAC,GAAAO,mBAAW;IACVC,KAAA,EAAO;MACLC,IAAA,EAAM;QACJC,IAAA,EAAM;QACNC,gBAAA,EAAkB,IAAAP,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,6BAAA,CAAK,GAAG;MACvC;MACAM,IAAA,EAAM;QACJD,gBAAA,EAAkB,IAAAP,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,6BAAA,CAAK,GAAG;MACvC;IACF;KAGE,OAAOrB,QAAA,KAAa,YAAYQ,UAAA,gBAC5B,IAAAC,YAAA,EAAAM,aAAA,EAAC,GAAAa,WAAG,SAAG5B,QAAA,IACPA,QAAA;AAKd;AAEA;;;AAGA,IAAI6B,yCAAA,gBAAS,IAAAC,iBAAS,EAAEjC,2BAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
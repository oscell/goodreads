{"ast":null,"code":"import { Rect as $5yFQM$Rect, LayoutInfo as $5yFQM$LayoutInfo } from \"@react-stately/virtualizer\";\nimport { TableLayout as $5yFQM$TableLayout } from \"@react-stately/layout\";\n\n/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nclass $5fb43af69b290859$export$725d101278f5a47b extends (0, $5yFQM$TableLayout) {\n  buildCollection() {\n    let loadingState = this.collection.body.props.loadingState;\n    this.isLoading = loadingState === 'loading' || loadingState === 'loadingMore';\n    return super.buildCollection();\n  }\n  buildColumn(node, x, y) {\n    let res = super.buildColumn(node, x, y);\n    res.layoutInfo.allowOverflow = true; // for resizer nubbin\n    return res;\n  }\n  buildBody() {\n    let node = super.buildBody(0);\n    let {\n      children: children,\n      layoutInfo: layoutInfo\n    } = node;\n    let width = node.layoutInfo.rect.width;\n    if (this.isLoading) {\n      // Add some margin around the loader to ensure that scrollbars don't flicker in and out.\n      let rect = new (0, $5yFQM$Rect)(40, children.length === 0 ? 40 : layoutInfo.rect.maxY, (width || this.virtualizer.visibleRect.width) - 80, children.length === 0 ? this.virtualizer.visibleRect.height - 80 : 60);\n      let loader = new (0, $5yFQM$LayoutInfo)('loader', 'loader', rect);\n      loader.parentKey = layoutInfo.key;\n      loader.isSticky = children.length === 0;\n      let node = {\n        layoutInfo: loader,\n        validRect: loader.rect\n      };\n      children.push(node);\n      this.layoutNodes.set(loader.key, node);\n      layoutInfo.rect.height = loader.rect.maxY;\n      width = Math.max(width, rect.width);\n    } else if (children.length === 0) {\n      let rect = new (0, $5yFQM$Rect)(40, 40, this.virtualizer.visibleRect.width - 80, this.virtualizer.visibleRect.height - 80);\n      let empty = new (0, $5yFQM$LayoutInfo)('empty', 'empty', rect);\n      empty.parentKey = layoutInfo.key;\n      empty.isSticky = true;\n      let node = {\n        layoutInfo: empty,\n        validRect: empty.rect\n      };\n      children.push(node);\n      layoutInfo.rect.height = empty.rect.maxY;\n      width = Math.max(width, rect.width);\n    }\n    return node;\n  }\n  buildRow(node, x, y) {\n    let res = super.buildRow(node, x, y);\n    res.layoutInfo.rect.height += 1; // for bottom border\n    return res;\n  }\n  buildCell(node, x, y) {\n    var _node_column;\n    let res = super.buildCell(node, x, y);\n    if ((_node_column = node.column) === null || _node_column === void 0 ? void 0 : _node_column.props.hideHeader) res.layoutInfo.allowOverflow = true;\n    return res;\n  }\n  getEstimatedRowHeight() {\n    return super.getEstimatedRowHeight() + 1; // for bottom border\n  }\n  isStickyColumn(node) {\n    var _node_props, _node_props1;\n    return ((_node_props = node.props) === null || _node_props === void 0 ? void 0 : _node_props.isDragButtonCell) || ((_node_props1 = node.props) === null || _node_props1 === void 0 ? void 0 : _node_props1.isSelectionCell);\n  }\n  getDropTargetFromPoint(x, y, isValidDropTarget) {\n    var _this_virtualizer_layout_getVisibleLayoutInfos_find;\n    // Offset for height of header row\n    y -= (_this_virtualizer_layout_getVisibleLayoutInfos_find = this.virtualizer.layout.getVisibleLayoutInfos(new (0, $5yFQM$Rect)(x, y, 1, 1)).find(info => info.type === 'headerrow')) === null || _this_virtualizer_layout_getVisibleLayoutInfos_find === void 0 ? void 0 : _this_virtualizer_layout_getVisibleLayoutInfos_find.rect.height;\n    return super.getDropTargetFromPoint(x, y, isValidDropTarget);\n  }\n  constructor(...args) {\n    super(...args);\n    this.isLoading = false;\n  }\n}\nexport { $5fb43af69b290859$export$725d101278f5a47b as TableViewLayout };","map":{"version":3,"names":["$5fb43af69b290859$export$725d101278f5a47b","$5yFQM$TableLayout","buildCollection","loadingState","collection","body","props","isLoading","buildColumn","node","x","y","res","layoutInfo","allowOverflow","buildBody","children","width","rect","$5yFQM$Rect","length","maxY","virtualizer","visibleRect","height","loader","$5yFQM$LayoutInfo","parentKey","key","isSticky","validRect","push","layoutNodes","set","Math","max","empty","buildRow","buildCell","_node_column","column","hideHeader","getEstimatedRowHeight","isStickyColumn","_node_props","_node_props1","isDragButtonCell","isSelectionCell","getDropTargetFromPoint","isValidDropTarget","_this_virtualizer_layout_getVisibleLayoutInfos_find","layout","getVisibleLayoutInfos","find","info","type"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-spectrum/table/dist/packages/@react-spectrum/table/src/TableViewLayout.ts"],"sourcesContent":["/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport {DropTarget} from '@react-types/shared';\nimport {GridNode} from '@react-types/grid';\nimport {LayoutInfo, Rect} from '@react-stately/virtualizer';\nimport {LayoutNode, TableLayout} from '@react-stately/layout';\n\nexport class TableViewLayout<T> extends TableLayout<T> {\n  private isLoading: boolean = false;\n\n  protected buildCollection(): LayoutNode[] {\n    let loadingState = this.collection.body.props.loadingState;\n    this.isLoading = loadingState === 'loading' || loadingState === 'loadingMore';\n    return super.buildCollection();\n  }\n\n  protected buildColumn(node: GridNode<T>, x: number, y: number): LayoutNode {\n    let res = super.buildColumn(node, x, y);\n    res.layoutInfo.allowOverflow = true; // for resizer nubbin\n    return res;\n  }\n\n  protected buildBody(): LayoutNode {\n    let node = super.buildBody(0);\n    let {children, layoutInfo} = node;\n    let width = node.layoutInfo.rect.width;\n\n    if (this.isLoading) {\n      // Add some margin around the loader to ensure that scrollbars don't flicker in and out.\n      let rect = new Rect(40, children.length === 0 ? 40 : layoutInfo.rect.maxY, (width || this.virtualizer.visibleRect.width) - 80, children.length === 0 ? this.virtualizer.visibleRect.height - 80 : 60);\n      let loader = new LayoutInfo('loader', 'loader', rect);\n      loader.parentKey = layoutInfo.key;\n      loader.isSticky = children.length === 0;\n      let node = {\n        layoutInfo: loader,\n        validRect: loader.rect\n      };\n      children.push(node);\n      this.layoutNodes.set(loader.key, node);\n      layoutInfo.rect.height = loader.rect.maxY;\n      width = Math.max(width, rect.width);\n    } else if (children.length === 0) {\n      let rect = new Rect(40, 40, this.virtualizer.visibleRect.width - 80, this.virtualizer.visibleRect.height - 80);\n      let empty = new LayoutInfo('empty', 'empty', rect);\n      empty.parentKey = layoutInfo.key;\n      empty.isSticky = true;\n      let node = {\n        layoutInfo: empty,\n        validRect: empty.rect\n      };\n      children.push(node);\n      layoutInfo.rect.height = empty.rect.maxY;\n      width = Math.max(width, rect.width);\n    }\n\n    return node;\n  }\n\n  protected buildRow(node: GridNode<T>, x: number, y: number): LayoutNode {\n    let res = super.buildRow(node, x, y);\n    res.layoutInfo.rect.height += 1; // for bottom border\n    return res;\n  }\n\n  protected buildCell(node: GridNode<T>, x: number, y: number): LayoutNode {\n    let res = super.buildCell(node, x, y);\n    if (node.column?.props.hideHeader) {\n      res.layoutInfo.allowOverflow = true;\n    }\n    return res;\n  }\n\n  protected getEstimatedRowHeight(): number {\n    return super.getEstimatedRowHeight() + 1; // for bottom border\n  }\n\n  protected isStickyColumn(node: GridNode<T>) {\n    return node.props?.isDragButtonCell || node.props?.isSelectionCell;\n  }\n\n  getDropTargetFromPoint(x: number, y: number, isValidDropTarget: (target: DropTarget) => boolean): DropTarget {\n    // Offset for height of header row\n    y -= this.virtualizer.layout.getVisibleLayoutInfos(new Rect(x, y, 1, 1)).find(info => info.type === 'headerrow')?.rect.height;\n    return super.getDropTargetFromPoint(x, y, isValidDropTarget);\n  }\n}\n"],"mappings":";;;AAAA;;;;;;;;;;;;AAgBO,MAAMA,yCAAA,UAA2B,GAAAC,kBAAU;EAGtCC,gBAAA,EAAgC;IACxC,IAAIC,YAAA,GAAe,IAAI,CAACC,UAAU,CAACC,IAAI,CAACC,KAAK,CAACH,YAAY;IAC1D,IAAI,CAACI,SAAS,GAAGJ,YAAA,KAAiB,aAAaA,YAAA,KAAiB;IAChE,OAAO,KAAK,CAACD,eAAA;EACf;EAEUM,YAAYC,IAAiB,EAAEC,CAAS,EAAEC,CAAS,EAAc;IACzE,IAAIC,GAAA,GAAM,KAAK,CAACJ,WAAA,CAAYC,IAAA,EAAMC,CAAA,EAAGC,CAAA;IACrCC,GAAA,CAAIC,UAAU,CAACC,aAAa,GAAG,MAAM;IACrC,OAAOF,GAAA;EACT;EAEUG,UAAA,EAAwB;IAChC,IAAIN,IAAA,GAAO,KAAK,CAACM,SAAA,CAAU;IAC3B,IAAI;MAAAC,QAAA,EAACA,QAAQ;MAAAH,UAAA,EAAEA;IAAU,CAAC,GAAGJ,IAAA;IAC7B,IAAIQ,KAAA,GAAQR,IAAA,CAAKI,UAAU,CAACK,IAAI,CAACD,KAAK;IAEtC,IAAI,IAAI,CAACV,SAAS,EAAE;MAClB;MACA,IAAIW,IAAA,GAAO,KAAI,GAAAC,WAAG,EAAE,IAAIH,QAAA,CAASI,MAAM,KAAK,IAAI,KAAKP,UAAA,CAAWK,IAAI,CAACG,IAAI,EAAE,CAACJ,KAAA,IAAS,IAAI,CAACK,WAAW,CAACC,WAAW,CAACN,KAAK,IAAI,IAAID,QAAA,CAASI,MAAM,KAAK,IAAI,IAAI,CAACE,WAAW,CAACC,WAAW,CAACC,MAAM,GAAG,KAAK;MAClM,IAAIC,MAAA,GAAS,KAAI,GAAAC,iBAAS,EAAE,UAAU,UAAUR,IAAA;MAChDO,MAAA,CAAOE,SAAS,GAAGd,UAAA,CAAWe,GAAG;MACjCH,MAAA,CAAOI,QAAQ,GAAGb,QAAA,CAASI,MAAM,KAAK;MACtC,IAAIX,IAAA,GAAO;QACTI,UAAA,EAAYY,MAAA;QACZK,SAAA,EAAWL,MAAA,CAAOP;MACpB;MACAF,QAAA,CAASe,IAAI,CAACtB,IAAA;MACd,IAAI,CAACuB,WAAW,CAACC,GAAG,CAACR,MAAA,CAAOG,GAAG,EAAEnB,IAAA;MACjCI,UAAA,CAAWK,IAAI,CAACM,MAAM,GAAGC,MAAA,CAAOP,IAAI,CAACG,IAAI;MACzCJ,KAAA,GAAQiB,IAAA,CAAKC,GAAG,CAAClB,KAAA,EAAOC,IAAA,CAAKD,KAAK;IACpC,OAAO,IAAID,QAAA,CAASI,MAAM,KAAK,GAAG;MAChC,IAAIF,IAAA,GAAO,KAAI,GAAAC,WAAG,EAAE,IAAI,IAAI,IAAI,CAACG,WAAW,CAACC,WAAW,CAACN,KAAK,GAAG,IAAI,IAAI,CAACK,WAAW,CAACC,WAAW,CAACC,MAAM,GAAG;MAC3G,IAAIY,KAAA,GAAQ,KAAI,GAAAV,iBAAS,EAAE,SAAS,SAASR,IAAA;MAC7CkB,KAAA,CAAMT,SAAS,GAAGd,UAAA,CAAWe,GAAG;MAChCQ,KAAA,CAAMP,QAAQ,GAAG;MACjB,IAAIpB,IAAA,GAAO;QACTI,UAAA,EAAYuB,KAAA;QACZN,SAAA,EAAWM,KAAA,CAAMlB;MACnB;MACAF,QAAA,CAASe,IAAI,CAACtB,IAAA;MACdI,UAAA,CAAWK,IAAI,CAACM,MAAM,GAAGY,KAAA,CAAMlB,IAAI,CAACG,IAAI;MACxCJ,KAAA,GAAQiB,IAAA,CAAKC,GAAG,CAAClB,KAAA,EAAOC,IAAA,CAAKD,KAAK;IACpC;IAEA,OAAOR,IAAA;EACT;EAEU4B,SAAS5B,IAAiB,EAAEC,CAAS,EAAEC,CAAS,EAAc;IACtE,IAAIC,GAAA,GAAM,KAAK,CAACyB,QAAA,CAAS5B,IAAA,EAAMC,CAAA,EAAGC,CAAA;IAClCC,GAAA,CAAIC,UAAU,CAACK,IAAI,CAACM,MAAM,IAAI,GAAG;IACjC,OAAOZ,GAAA;EACT;EAEU0B,UAAU7B,IAAiB,EAAEC,CAAS,EAAEC,CAAS,EAAc;QAEnE4B,YAAA;IADJ,IAAI3B,GAAA,GAAM,KAAK,CAAC0B,SAAA,CAAU7B,IAAA,EAAMC,CAAA,EAAGC,CAAA;IACnC,KAAI4B,YAAA,GAAA9B,IAAA,CAAK+B,MAAM,cAAXD,YAAA,uBAAAA,YAAA,CAAajC,KAAK,CAACmC,UAAU,EAC/B7B,GAAA,CAAIC,UAAU,CAACC,aAAa,GAAG;IAEjC,OAAOF,GAAA;EACT;EAEU8B,sBAAA,EAAgC;IACxC,OAAO,KAAK,CAACA,qBAAA,KAA0B,GAAG;EAC5C;EAEUC,eAAelC,IAAiB,EAAE;QACnCmC,WAAA,EAAgCC,YAAA;IAAvC,OAAO,EAAAD,WAAA,GAAAnC,IAAA,CAAKH,KAAK,cAAVsC,WAAA,uBAAAA,WAAA,CAAYE,gBAAgB,OAAID,YAAA,GAAApC,IAAA,CAAKH,KAAK,cAAVuC,YAAA,uBAAAA,YAAA,CAAYE,eAAe;EACpE;EAEAC,uBAAuBtC,CAAS,EAAEC,CAAS,EAAEsC,iBAAkD,EAAc;QAEtGC,mDAAA;IADL;IACAvC,CAAA,KAAKuC,mDAAA,OAAI,CAAC5B,WAAW,CAAC6B,MAAM,CAACC,qBAAqB,CAAC,KAAI,GAAAjC,WAAG,EAAET,CAAA,EAAGC,CAAA,EAAG,GAAG,IAAI0C,IAAI,CAACC,IAAA,IAAQA,IAAA,CAAKC,IAAI,KAAK,0BAA/FL,mDAAA,uBAAAA,mDAAA,CAA6GhC,IAAI,CAACM,MAAM;IAC7H,OAAO,KAAK,CAACwB,sBAAA,CAAuBtC,CAAA,EAAGC,CAAA,EAAGsC,iBAAA;EAC5C;;;SA5EQ1C,SAAA,GAAqB;;AA6E/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
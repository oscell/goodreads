{"ast":null,"code":"import { CalendarBase as $62cd1e80f0dffb66$export$bfd52a43017368fe } from \"./CalendarBase.mjs\";\nimport { createCalendar as $7I6vM$createCalendar } from \"@internationalized/date\";\nimport { createDOMRef as $7I6vM$createDOMRef } from \"@react-spectrum/utils\";\nimport $7I6vM$react, { useMemo as $7I6vM$useMemo, useRef as $7I6vM$useRef, useImperativeHandle as $7I6vM$useImperativeHandle } from \"react\";\nimport { useLocale as $7I6vM$useLocale } from \"@react-aria/i18n\";\nimport { useProviderProps as $7I6vM$useProviderProps } from \"@react-spectrum/provider\";\nimport { useRangeCalendar as $7I6vM$useRangeCalendar } from \"@react-aria/calendar\";\nimport { useRangeCalendarState as $7I6vM$useRangeCalendarState } from \"@react-stately/calendar\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $8b1e8eddbf3b15de$var$RangeCalendar(props, ref) {\n  props = (0, $7I6vM$useProviderProps)(props);\n  let {\n    visibleMonths = 1\n  } = props;\n  visibleMonths = Math.max(visibleMonths, 1);\n  let visibleDuration = (0, $7I6vM$useMemo)(() => ({\n    months: visibleMonths\n  }), [visibleMonths]);\n  let {\n    locale: locale\n  } = (0, $7I6vM$useLocale)();\n  let state = (0, $7I6vM$useRangeCalendarState)({\n    ...props,\n    locale: locale,\n    visibleDuration: visibleDuration,\n    createCalendar: $7I6vM$createCalendar\n  });\n  let domRef = (0, $7I6vM$useRef)(null);\n  (0, $7I6vM$useImperativeHandle)(ref, () => ({\n    ...(0, $7I6vM$createDOMRef)(domRef),\n    focus() {\n      state.setFocused(true);\n    }\n  }));\n  let {\n    calendarProps: calendarProps,\n    prevButtonProps: prevButtonProps,\n    nextButtonProps: nextButtonProps,\n    errorMessageProps: errorMessageProps\n  } = (0, $7I6vM$useRangeCalendar)(props, state, domRef);\n  return /*#__PURE__*/(0, $7I6vM$react).createElement((0, $62cd1e80f0dffb66$export$bfd52a43017368fe), {\n    ...props,\n    visibleMonths: visibleMonths,\n    state: state,\n    calendarRef: domRef,\n    calendarProps: calendarProps,\n    prevButtonProps: prevButtonProps,\n    nextButtonProps: nextButtonProps,\n    errorMessageProps: errorMessageProps\n  });\n}\n/**\n * RangeCalendars display a grid of days in one or more months and allow users to select a contiguous range of dates.\n */\nconst $8b1e8eddbf3b15de$export$a4f5c8b89d277a8d = /*#__PURE__*/(0, $7I6vM$react).forwardRef($8b1e8eddbf3b15de$var$RangeCalendar);\nexport { $8b1e8eddbf3b15de$export$a4f5c8b89d277a8d as RangeCalendar };","map":{"version":3,"names":["$8b1e8eddbf3b15de$var$RangeCalendar","props","ref","$7I6vM$useProviderProps","visibleMonths","Math","max","visibleDuration","$7I6vM$useMemo","months","locale","$7I6vM$useLocale","state","$7I6vM$useRangeCalendarState","$7I6vM$createCalendar","domRef","$7I6vM$useRef","$7I6vM$useImperativeHandle","$7I6vM$createDOMRef","focus","setFocused","calendarProps","prevButtonProps","nextButtonProps","errorMessageProps","$7I6vM$useRangeCalendar","$7I6vM$react","createElement","$62cd1e80f0dffb66$export$bfd52a43017368fe","calendarRef","$8b1e8eddbf3b15de$export$a4f5c8b89d277a8d","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-spectrum/calendar/dist/packages/@react-spectrum/calendar/src/RangeCalendar.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CalendarBase} from './CalendarBase';\nimport {createCalendar} from '@internationalized/date';\nimport {createDOMRef} from '@react-spectrum/utils';\nimport {DateValue, SpectrumRangeCalendarProps} from '@react-types/calendar';\nimport {FocusableRef} from '@react-types/shared';\nimport React, {ReactElement, useImperativeHandle, useMemo, useRef} from 'react';\nimport {useLocale} from '@react-aria/i18n';\nimport {useProviderProps} from '@react-spectrum/provider';\nimport {useRangeCalendar} from '@react-aria/calendar';\nimport {useRangeCalendarState} from '@react-stately/calendar';\n\nfunction RangeCalendar<T extends DateValue>(props: SpectrumRangeCalendarProps<T>, ref: FocusableRef<HTMLElement>) {\n  props = useProviderProps(props);\n  let {visibleMonths = 1} = props;\n  visibleMonths = Math.max(visibleMonths, 1);\n  let visibleDuration = useMemo(() => ({months: visibleMonths}), [visibleMonths]);\n  let {locale} = useLocale();\n  let state = useRangeCalendarState({\n    ...props,\n    locale,\n    visibleDuration,\n    createCalendar\n  });\n\n  let domRef = useRef(null);\n  useImperativeHandle(ref, () => ({\n    ...createDOMRef(domRef),\n    focus() {\n      state.setFocused(true);\n    }\n  }));\n\n  let {calendarProps, prevButtonProps, nextButtonProps, errorMessageProps} = useRangeCalendar(props, state, domRef);\n\n  return (\n    <CalendarBase\n      {...props}\n      visibleMonths={visibleMonths}\n      state={state}\n      calendarRef={domRef}\n      calendarProps={calendarProps}\n      prevButtonProps={prevButtonProps}\n      nextButtonProps={nextButtonProps}\n      errorMessageProps={errorMessageProps} />\n  );\n}\n\n/**\n * RangeCalendars display a grid of days in one or more months and allow users to select a contiguous range of dates.\n */\nconst _RangeCalendar = React.forwardRef(RangeCalendar) as <T extends DateValue>(props: SpectrumRangeCalendarProps<T> & {ref?: FocusableRef<HTMLElement>}) => ReactElement;\nexport {_RangeCalendar as RangeCalendar};\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;AAuBA,SAASA,oCAAmCC,KAAoC,EAAEC,GAA8B;EAC9GD,KAAA,GAAQ,IAAAE,uBAAe,EAAEF,KAAA;EACzB,IAAI;IAACG,aAAA,GAAgB;EAAA,CAAE,GAAGH,KAAA;EAC1BG,aAAA,GAAgBC,IAAA,CAAKC,GAAG,CAACF,aAAA,EAAe;EACxC,IAAIG,eAAA,GAAkB,IAAAC,cAAM,EAAE,OAAO;IAACC,MAAA,EAAQL;EAAa,IAAI,CAACA,aAAA,CAAc;EAC9E,IAAI;IAAAM,MAAA,EAACA;EAAM,CAAC,GAAG,IAAAC,gBAAQ;EACvB,IAAIC,KAAA,GAAQ,IAAAC,4BAAoB,EAAE;IAChC,GAAGZ,KAAK;YACRS,MAAA;qBACAH,eAAA;oBACAO;EACF;EAEA,IAAIC,MAAA,GAAS,IAAAC,aAAK,EAAE;EACpB,IAAAC,0BAAkB,EAAEf,GAAA,EAAK,OAAO;IAC9B,GAAG,IAAAgB,mBAAW,EAAEH,MAAA,CAAO;IACvBI,MAAA;MACEP,KAAA,CAAMQ,UAAU,CAAC;IACnB;EACF;EAEA,IAAI;IAAAC,aAAA,EAACA,aAAa;IAAAC,eAAA,EAAEA,eAAe;IAAAC,eAAA,EAAEA,eAAe;IAAAC,iBAAA,EAAEA;EAAiB,CAAC,GAAG,IAAAC,uBAAe,EAAExB,KAAA,EAAOW,KAAA,EAAOG,MAAA;EAE1G,oBACE,IAAAW,YAAA,EAAAC,aAAA,EAAC,GAAAC,yCAAW;IACT,GAAG3B,KAAK;IACTG,aAAA,EAAeA,aAAA;IACfQ,KAAA,EAAOA,KAAA;IACPiB,WAAA,EAAad,MAAA;IACbM,aAAA,EAAeA,aAAA;IACfC,eAAA,EAAiBA,eAAA;IACjBC,eAAA,EAAiBA,eAAA;IACjBC,iBAAA,EAAmBA;;AAEzB;AAEA;;;AAGA,MAAMM,yCAAA,gBAAiB,IAAAJ,YAAI,EAAEK,UAAU,CAAC/B,mCAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
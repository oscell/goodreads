{"ast":null,"code":"import { filterDOMProps as $1vbRD$filterDOMProps } from \"@react-aria/utils\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nfunction $f4b273590fab9f93$export$52210f68a14655d0(props) {\n  let domProps = (0, $1vbRD$filterDOMProps)(props, {\n    labelable: true\n  });\n  let ariaOrientation;\n  // if orientation is horizontal, aria-orientation default is horizontal, so we leave it undefined\n  // if it's vertical, we need to specify it\n  if (props.orientation === 'vertical') ariaOrientation = 'vertical';\n  // hr elements implicitly have role = separator and a horizontal orientation\n  if (props.elementType !== 'hr') return {\n    separatorProps: {\n      ...domProps,\n      role: 'separator',\n      'aria-orientation': ariaOrientation\n    }\n  };\n  return {\n    separatorProps: domProps\n  };\n}\nexport { $f4b273590fab9f93$export$52210f68a14655d0 as useSeparator };","map":{"version":3,"names":["$f4b273590fab9f93$export$52210f68a14655d0","props","domProps","$1vbRD$filterDOMProps","labelable","ariaOrientation","orientation","elementType","separatorProps","role"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-aria/separator/dist/packages/@react-aria/separator/src/useSeparator.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMAttributes, DOMProps, Orientation} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\n\nexport interface SeparatorProps extends DOMProps, AriaLabelingProps {\n  /**\n   * The orientation of the separator.\n   * @default 'horizontal'\n   */\n  orientation?: Orientation,\n  /** The HTML element type that will be used to render the separator. */\n  elementType?: string\n}\n\nexport interface SeparatorAria {\n  /** Props for the separator element. */\n  separatorProps: DOMAttributes\n}\n\n/**\n * Provides the accessibility implementation for a separator.\n * A separator is a visual divider between two groups of content,\n * e.g. groups of menu items or sections of a page.\n */\nexport function useSeparator(props: SeparatorProps): SeparatorAria {\n  let domProps = filterDOMProps(props, {labelable: true});\n  let ariaOrientation;\n  // if orientation is horizontal, aria-orientation default is horizontal, so we leave it undefined\n  // if it's vertical, we need to specify it\n  if (props.orientation === 'vertical') {\n    ariaOrientation = 'vertical';\n  }\n  // hr elements implicitly have role = separator and a horizontal orientation\n  if (props.elementType !== 'hr') {\n    return {\n      separatorProps: {\n        ...domProps,\n        role: 'separator',\n        'aria-orientation': ariaOrientation\n      }\n    };\n  }\n  return {separatorProps: domProps};\n}\n"],"mappings":";;AAAA;;;;;;;;;;;AAmCO,SAASA,0CAAaC,KAAqB;EAChD,IAAIC,QAAA,GAAW,IAAAC,qBAAa,EAAEF,KAAA,EAAO;IAACG,SAAA,EAAW;EAAI;EACrD,IAAIC,eAAA;EACJ;EACA;EACA,IAAIJ,KAAA,CAAMK,WAAW,KAAK,YACxBD,eAAA,GAAkB;EAEpB;EACA,IAAIJ,KAAA,CAAMM,WAAW,KAAK,MACxB,OAAO;IACLC,cAAA,EAAgB;MACd,GAAGN,QAAQ;MACXO,IAAA,EAAM;MACN,oBAAoBJ;IACtB;EACF;EAEF,OAAO;IAACG,cAAA,EAAgBN;EAAQ;AAClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
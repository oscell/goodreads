{"ast":null,"code":"import { useContextProps as $64fa3d84918910a7$export$29f1550f4b0d4415, useRenderProps as $64fa3d84918910a7$export$4d86445c2cf5e3 } from \"./utils.mjs\";\nimport { useHover as $gZciS$useHover, useFocusRing as $gZciS$useFocusRing, mergeProps as $gZciS$mergeProps } from \"react-aria\";\nimport $gZciS$react, { createContext as $gZciS$createContext, forwardRef as $gZciS$forwardRef } from \"react\";\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $a049562f99e7db0e$export$f9c6924e160136d1 = /*#__PURE__*/(0, $gZciS$createContext)({});\nfunction $a049562f99e7db0e$var$Group(props, ref) {\n  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $a049562f99e7db0e$export$f9c6924e160136d1);\n  let {\n    isDisabled: isDisabled,\n    isInvalid: isInvalid,\n    onHoverStart: onHoverStart,\n    onHoverChange: onHoverChange,\n    onHoverEnd: onHoverEnd,\n    ...otherProps\n  } = props;\n  let {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  } = (0, $gZciS$useHover)({\n    onHoverStart: onHoverStart,\n    onHoverChange: onHoverChange,\n    onHoverEnd: onHoverEnd,\n    isDisabled: isDisabled\n  });\n  let {\n    isFocused: isFocused,\n    isFocusVisible: isFocusVisible,\n    focusProps: focusProps\n  } = (0, $gZciS$useFocusRing)({\n    within: true\n  });\n  isDisabled !== null && isDisabled !== void 0 ? isDisabled : isDisabled = !!props['aria-disabled'] && props['aria-disabled'] !== 'false';\n  isInvalid !== null && isInvalid !== void 0 ? isInvalid : isInvalid = !!props['aria-invalid'] && props['aria-invalid'] !== 'false';\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({\n    ...props,\n    values: {\n      isHovered: isHovered,\n      isFocusWithin: isFocused,\n      isFocusVisible: isFocusVisible,\n      isDisabled: isDisabled,\n      isInvalid: isInvalid\n    },\n    defaultClassName: 'react-aria-Group'\n  });\n  var _props_role, _props_slot;\n  return /*#__PURE__*/(0, $gZciS$react).createElement(\"div\", {\n    ...(0, $gZciS$mergeProps)(otherProps, focusProps, hoverProps),\n    ...renderProps,\n    ref: ref,\n    role: (_props_role = props.role) !== null && _props_role !== void 0 ? _props_role : 'group',\n    slot: (_props_slot = props.slot) !== null && _props_slot !== void 0 ? _props_slot : undefined,\n    \"data-focus-within\": isFocused || undefined,\n    \"data-hovered\": isHovered || undefined,\n    \"data-focus-visible\": isFocusVisible || undefined,\n    \"data-disabled\": isDisabled || undefined,\n    \"data-invalid\": isInvalid || undefined\n  }, renderProps.children);\n}\n/**\n * A group represents a set of related UI controls, and supports interactive states for styling.\n */\nconst $a049562f99e7db0e$export$eb2fcfdbd7ba97d4 = /*#__PURE__*/(0, $gZciS$forwardRef)($a049562f99e7db0e$var$Group);\nexport { $a049562f99e7db0e$export$f9c6924e160136d1 as GroupContext, $a049562f99e7db0e$export$eb2fcfdbd7ba97d4 as Group };","map":{"version":3,"names":["$a049562f99e7db0e$export$f9c6924e160136d1","$gZciS$createContext","$a049562f99e7db0e$var$Group","props","ref","$64fa3d84918910a7$export$29f1550f4b0d4415","isDisabled","isInvalid","onHoverStart","onHoverChange","onHoverEnd","otherProps","hoverProps","isHovered","$gZciS$useHover","isFocused","isFocusVisible","focusProps","$gZciS$useFocusRing","within","renderProps","$64fa3d84918910a7$export$4d86445c2cf5e3","values","isFocusWithin","defaultClassName","_props_role","_props_slot","$gZciS$react","createElement","$gZciS$mergeProps","role","slot","undefined","children","$a049562f99e7db0e$export$eb2fcfdbd7ba97d4","$gZciS$forwardRef"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/react-aria-components/dist/packages/react-aria-components/src/Group.tsx"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMProps, forwardRefType} from '@react-types/shared';\nimport {ContextValue, RenderProps, SlotProps, useContextProps, useRenderProps} from './utils';\nimport {HoverProps, mergeProps, useFocusRing, useHover} from 'react-aria';\nimport React, {createContext, ForwardedRef, forwardRef, HTMLAttributes} from 'react';\n\nexport interface GroupRenderProps {\n  /**\n   * Whether the group is currently hovered with a mouse.\n   * @selector [data-hovered]\n   */\n  isHovered: boolean,\n  /**\n   * Whether an element within the group is focused, either via a mouse or keyboard.\n   * @selector [data-focus-within]\n   */\n  isFocusWithin: boolean,\n  /**\n   * Whether an element within the group is keyboard focused.\n   * @selector [data-focus-visible]\n   */\n  isFocusVisible: boolean,\n  /**\n   * Whether the group is disabled.\n   * @selector [data-disabled]\n   */\n  isDisabled: boolean,\n  /**\n   * Whether the group is invalid.\n   * @selector [data-invalid]\n   */\n  isInvalid: boolean\n}\n\nexport interface GroupProps extends AriaLabelingProps, Omit<HTMLAttributes<HTMLElement>, 'children' | 'className' | 'style' | 'role' | 'slot'>, DOMProps, HoverProps, RenderProps<GroupRenderProps>, SlotProps {\n  /** Whether the group is disabled. */\n  isDisabled?: boolean,\n  /** Whether the group is invalid. */\n  isInvalid?: boolean,\n  /**\n   * An accessibility role for the group. By default, this is set to `'group'`.\n   * Use `'region'` when the contents of the group is important enough to be\n   * included in the page table of contents. Use `'presentation'` if the group\n   * is visual only and does not represent a semantic grouping of controls.\n   * @default 'group'\n   */\n  role?: 'group' | 'region' | 'presentation'\n}\n\nexport const GroupContext = createContext<ContextValue<GroupProps, HTMLDivElement>>({});\n\nfunction Group(props: GroupProps, ref: ForwardedRef<HTMLDivElement>) {\n  [props, ref] = useContextProps(props, ref, GroupContext);\n  let {isDisabled, isInvalid, onHoverStart, onHoverChange, onHoverEnd, ...otherProps} = props;\n\n  let {hoverProps, isHovered} = useHover({onHoverStart, onHoverChange, onHoverEnd, isDisabled});\n  let {isFocused, isFocusVisible, focusProps} = useFocusRing({\n    within: true\n  });\n\n  isDisabled ??= !!props['aria-disabled'] && props['aria-disabled'] !== 'false';\n  isInvalid ??= !!props['aria-invalid'] && props['aria-invalid'] !== 'false';\n  let renderProps = useRenderProps({\n    ...props,\n    values: {isHovered, isFocusWithin: isFocused, isFocusVisible, isDisabled, isInvalid},\n    defaultClassName: 'react-aria-Group'\n  });\n\n  return (\n    <div\n      {...mergeProps(otherProps, focusProps, hoverProps)}\n      {...renderProps}\n      ref={ref}\n      role={props.role ?? 'group'}\n      slot={props.slot ?? undefined}\n      data-focus-within={isFocused || undefined}\n      data-hovered={isHovered || undefined}\n      data-focus-visible={isFocusVisible || undefined}\n      data-disabled={isDisabled || undefined}\n      data-invalid={isInvalid || undefined}>\n      {renderProps.children}\n    </div>\n  );\n}\n\n/**\n * A group represents a set of related UI controls, and supports interactive states for styling.\n */\nconst _Group = /*#__PURE__*/ (forwardRef as forwardRefType)(Group);\nexport {_Group as Group};\n"],"mappings":";;;;AAAA;;;;;;;;;;;;AA4DO,MAAMA,yCAAA,gBAAe,IAAAC,oBAAY,EAA4C,CAAC;AAErF,SAASC,4BAAMC,KAAiB,EAAEC,GAAiC;EACjE,CAACD,KAAA,EAAOC,GAAA,CAAI,GAAG,IAAAC,yCAAc,EAAEF,KAAA,EAAOC,GAAA,EAAKJ,yCAAA;EAC3C,IAAI;IAAAM,UAAA,EAACA,UAAU;IAAAC,SAAA,EAAEA,SAAS;IAAAC,YAAA,EAAEA,YAAY;IAAAC,aAAA,EAAEA,aAAa;IAAAC,UAAA,EAAEA,UAAU;IAAE,GAAGC;EAAA,CAAW,GAAGR,KAAA;EAEtF,IAAI;IAAAS,UAAA,EAACA,UAAU;IAAAC,SAAA,EAAEA;EAAS,CAAC,GAAG,IAAAC,eAAO,EAAE;kBAACN,YAAA;mBAAcC,aAAA;gBAAeC,UAAA;gBAAYJ;EAAU;EAC3F,IAAI;IAAAS,SAAA,EAACA,SAAS;IAAAC,cAAA,EAAEA,cAAc;IAAAC,UAAA,EAAEA;EAAU,CAAC,GAAG,IAAAC,mBAAW,EAAE;IACzDC,MAAA,EAAQ;EACV;EAEAb,UAAA,aAAAA,UAAA,cAAAA,UAAA,GAAAA,UAAA,GAAe,CAAC,CAACH,KAAK,CAAC,gBAAgB,IAAIA,KAAK,CAAC,gBAAgB,KAAK;EACtEI,SAAA,aAAAA,SAAA,cAAAA,SAAA,GAAAA,SAAA,GAAc,CAAC,CAACJ,KAAK,CAAC,eAAe,IAAIA,KAAK,CAAC,eAAe,KAAK;EACnE,IAAIiB,WAAA,GAAc,IAAAC,uCAAa,EAAE;IAC/B,GAAGlB,KAAK;IACRmB,MAAA,EAAQ;iBAACT,SAAA;MAAWU,aAAA,EAAeR,SAAA;sBAAWC,cAAA;kBAAgBV,UAAA;iBAAYC;IAAS;IACnFiB,gBAAA,EAAkB;EACpB;MAOUC,WAAA,EACAC,WAAA;EANV,oBACE,IAAAC,YAAA,EAAAC,aAAA,CAAC;IACE,GAAG,IAAAC,iBAAS,EAAElB,UAAA,EAAYM,UAAA,EAAYL,UAAA,CAAW;IACjD,GAAGQ,WAAW;IACfhB,GAAA,EAAKA,GAAA;IACL0B,IAAA,EAAM,CAAAL,WAAA,GAAAtB,KAAA,CAAM2B,IAAI,cAAVL,WAAA,cAAAA,WAAA,GAAc;IACpBM,IAAA,EAAM,CAAAL,WAAA,GAAAvB,KAAA,CAAM4B,IAAI,cAAVL,WAAA,cAAAA,WAAA,GAAcM,SAAA;IACpB,qBAAmBjB,SAAA,IAAaiB,SAAA;IAChC,gBAAcnB,SAAA,IAAamB,SAAA;IAC3B,sBAAoBhB,cAAA,IAAkBgB,SAAA;IACtC,iBAAe1B,UAAA,IAAc0B,SAAA;IAC7B,gBAAczB,SAAA,IAAayB;KAC1BZ,WAAA,CAAYa,QAAQ;AAG3B;AAEA;;;AAGA,MAAMC,yCAAA,GAAuB,aAAC,IAAAC,iBAAS,EAAqBjC,2BAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
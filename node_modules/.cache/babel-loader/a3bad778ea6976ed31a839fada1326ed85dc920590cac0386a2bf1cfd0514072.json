{"ast":null,"code":"var _jsxFileName = \"/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/src/components/Filters/CustomToggleRefinement/CustomToggleRefinement.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useToggleRefinement } from 'react-instantsearch';\nimport \"./CustomToggleRefinement.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CustomToggleRefinement(props) {\n  _s();\n  const {\n    value,\n    refine\n  } = useToggleRefinement(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkbox-wrapper-32\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: `checkbox-${props.attribute}`,\n      checked: value.isRefined,\n      onChange: event => {\n        refine({\n          isRefined: !event.target.checked\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: `checkbox-${props.attribute}`,\n      children: props.attribute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: \"0 0 100 100\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M 10 10 L 90 90\",\n        stroke: \"#000\",\n        \"stroke-dasharray\": \"113\",\n        \"stroke-dashoffset\": \"113\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M 90 10 L 10 90\",\n        stroke: \"#000\",\n        \"stroke-dasharray\": \"113\",\n        \"stroke-dashoffset\": \"113\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomToggleRefinement, \"aEzRHSD9h44ECCnHzQYD/GiRYy0=\", false, function () {\n  return [useToggleRefinement];\n});\n_c = CustomToggleRefinement;\nvar _c;\n$RefreshReg$(_c, \"CustomToggleRefinement\");","map":{"version":3,"names":["React","useToggleRefinement","jsxDEV","_jsxDEV","CustomToggleRefinement","props","_s","value","refine","className","children","type","id","attribute","checked","isRefined","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","viewBox","xmlns","d","stroke","_c","$RefreshReg$"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/src/components/Filters/CustomToggleRefinement/CustomToggleRefinement.js"],"sourcesContent":["import React from 'react';\nimport { useToggleRefinement } from 'react-instantsearch';\nimport \"./CustomToggleRefinement.css\"\n\nexport function CustomToggleRefinement(props) {\n  const { value, refine } = useToggleRefinement(props);\n\n  return (\n    <div className=\"checkbox-wrapper-32\">\n      <input\n        type=\"checkbox\"\n        id={`checkbox-${props.attribute}`}\n        checked={value.isRefined}\n        onChange={(event) => {\n          refine({ isRefined: !event.target.checked });\n        }}\n      />\n      <label htmlFor={`checkbox-${props.attribute}`}>\n        {props.attribute}\n      </label>\n      <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M 10 10 L 90 90\" stroke=\"#000\" stroke-dasharray=\"113\" stroke-dashoffset=\"113\"></path>\n        <path d=\"M 90 10 L 10 90\" stroke=\"#000\" stroke-dasharray=\"113\" stroke-dashoffset=\"113\"></path>\n      </svg>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,OAAO,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,OAAO,SAASC,sBAAsBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC5C,MAAM;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGP,mBAAmB,CAACI,KAAK,CAAC;EAEpD,oBACEF,OAAA;IAAKM,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCP,OAAA;MACEQ,IAAI,EAAC,UAAU;MACfC,EAAE,EAAE,YAAYP,KAAK,CAACQ,SAAS,EAAG;MAClCC,OAAO,EAAEP,KAAK,CAACQ,SAAU;MACzBC,QAAQ,EAAGC,KAAK,IAAK;QACnBT,MAAM,CAAC;UAAEO,SAAS,EAAE,CAACE,KAAK,CAACC,MAAM,CAACJ;QAAQ,CAAC,CAAC;MAC9C;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFnB,OAAA;MAAOoB,OAAO,EAAE,YAAYlB,KAAK,CAACQ,SAAS,EAAG;MAAAH,QAAA,EAC3CL,KAAK,CAACQ;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACRnB,OAAA;MAAKqB,OAAO,EAAC,aAAa;MAACC,KAAK,EAAC,4BAA4B;MAAAf,QAAA,gBAC3DP,OAAA;QAAMuB,CAAC,EAAC,iBAAiB;QAACC,MAAM,EAAC,MAAM;QAAC,oBAAiB,KAAK;QAAC,qBAAkB;MAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9FnB,OAAA;QAAMuB,CAAC,EAAC,iBAAiB;QAACC,MAAM,EAAC,MAAM;QAAC,oBAAiB,KAAK;QAAC,qBAAkB;MAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3F,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CAtBeF,sBAAsB;EAAA,QACVH,mBAAmB;AAAA;AAAA2B,EAAA,GAD/BxB,sBAAsB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
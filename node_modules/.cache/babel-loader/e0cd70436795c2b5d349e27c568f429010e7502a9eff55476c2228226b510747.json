{"ast":null,"code":"import { DatePickerField as $d2bb88c82604b25f$export$34dc4cfa15ead1 } from \"./DatePickerField.mjs\";\nimport \"./styles.4bf108e6.css\";\nimport $dUbU7$styles_cssmodulejs from \"./styles_css.mjs\";\nimport { Input as $79348162c55d687f$export$f5b8910cec6cf069 } from \"./Input.mjs\";\nimport $dUbU7$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport \"./vars.6aae6db6.css\";\nimport $dUbU7$inputgroup_vars_cssmodulejs from \"./inputgroup_vars_css.mjs\";\nimport { TimeField as $f0a04554754386b6$export$5eaee2322dd727eb } from \"./TimeField.mjs\";\nimport { useFocusManagerRef as $04e96200274b03de$export$71a23a36270e4bf0, useFormatHelpText as $04e96200274b03de$export$322f4580ccd8dde6, useFormattedDateWidth as $04e96200274b03de$export$31e22e3c931fc056, useVisibleMonths as $04e96200274b03de$export$12ce2869ce471b1f } from \"./utils.mjs\";\nimport $dUbU7$spectrumiconsworkflowCalendar from \"@spectrum-icons/workflow/Calendar\";\nimport { classNames as $dUbU7$classNames } from \"@react-spectrum/utils\";\nimport { Content as $dUbU7$Content } from \"@react-spectrum/view\";\nimport { DialogTrigger as $dUbU7$DialogTrigger, Dialog as $dUbU7$Dialog } from \"@react-spectrum/dialog\";\nimport { Field as $dUbU7$Field } from \"@react-spectrum/label\";\nimport { FieldButton as $dUbU7$FieldButton } from \"@react-spectrum/button\";\nimport { Flex as $dUbU7$Flex } from \"@react-spectrum/layout\";\nimport { mergeProps as $dUbU7$mergeProps } from \"@react-aria/utils\";\nimport { RangeCalendar as $dUbU7$RangeCalendar } from \"@react-spectrum/calendar\";\nimport $dUbU7$react, { useRef as $dUbU7$useRef } from \"react\";\nimport { useDateRangePicker as $dUbU7$useDateRangePicker } from \"@react-aria/datepicker\";\nimport { useDateRangePickerState as $dUbU7$useDateRangePickerState } from \"@react-stately/datepicker\";\nimport { useFocusRing as $dUbU7$useFocusRing } from \"@react-aria/focus\";\nimport { useFormProps as $dUbU7$useFormProps } from \"@react-spectrum/form\";\nimport { useHover as $dUbU7$useHover } from \"@react-aria/interactions\";\nimport { useLocale as $dUbU7$useLocale, useLocalizedStringFormatter as $dUbU7$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nimport { useProviderProps as $dUbU7$useProviderProps } from \"@react-spectrum/provider\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $cb301300011a98f7$var$DateRangePicker(props, ref) {\n  var _state_timeRange, _state_timeRange1;\n  props = (0, $dUbU7$useProviderProps)(props);\n  props = (0, $dUbU7$useFormProps)(props);\n  let {\n    isQuiet: isQuiet,\n    isDisabled: isDisabled,\n    autoFocus: autoFocus,\n    placeholderValue: placeholderValue,\n    maxVisibleMonths = 1,\n    pageBehavior: pageBehavior\n  } = props;\n  let {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  } = (0, $dUbU7$useHover)({\n    isDisabled: isDisabled\n  });\n  let targetRef = (0, $dUbU7$useRef)(undefined);\n  let state = (0, $dUbU7$useDateRangePickerState)({\n    ...props,\n    shouldCloseOnSelect: () => !state.hasTime\n  });\n  let {\n    labelProps: labelProps,\n    groupProps: groupProps,\n    buttonProps: buttonProps,\n    dialogProps: dialogProps,\n    startFieldProps: startFieldProps,\n    endFieldProps: endFieldProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps,\n    calendarProps: calendarProps,\n    isInvalid: isInvalid,\n    validationErrors: validationErrors,\n    validationDetails: validationDetails\n  } = (0, $dUbU7$useDateRangePicker)(props, state, targetRef);\n  let {\n    isOpen: isOpen,\n    setOpen: setOpen\n  } = state;\n  let {\n    direction: direction\n  } = (0, $dUbU7$useLocale)();\n  let domRef = (0, $04e96200274b03de$export$71a23a36270e4bf0)(ref);\n  let stringFormatter = (0, $dUbU7$useLocalizedStringFormatter)((0, $parcel$interopDefault($dUbU7$intlStringsmodulejs)), '@react-spectrum/datepicker');\n  let {\n    isFocused: isFocused,\n    isFocusVisible: isFocusVisible,\n    focusProps: focusProps\n  } = (0, $dUbU7$useFocusRing)({\n    within: true,\n    isTextInput: true,\n    autoFocus: autoFocus\n  });\n  let {\n    isFocused: isFocusedButton,\n    focusProps: focusPropsButton\n  } = (0, $dUbU7$useFocusRing)({\n    within: false,\n    isTextInput: false,\n    autoFocus: autoFocus\n  });\n  let className = (0, $dUbU7$classNames)((0, $parcel$interopDefault($dUbU7$inputgroup_vars_cssmodulejs)), 'spectrum-InputGroup', {\n    'spectrum-InputGroup--quiet': isQuiet,\n    'spectrum-InputGroup--invalid': isInvalid && !isDisabled,\n    'is-disabled': isDisabled,\n    'is-hovered': isHovered,\n    'is-focused': isFocused,\n    'focus-ring': isFocusVisible && !isFocusedButton\n  });\n  let fieldClassName = (0, $dUbU7$classNames)((0, $parcel$interopDefault($dUbU7$inputgroup_vars_cssmodulejs)), 'spectrum-InputGroup-input', {\n    'is-disabled': isDisabled,\n    'is-invalid': isInvalid && !isDisabled\n  });\n  // Note: this description is intentionally not passed to useDatePicker.\n  // The format help text is unnecessary for screen reader users because each segment already has a label.\n  let description = (0, $04e96200274b03de$export$322f4580ccd8dde6)(props);\n  if (description && !props.description) descriptionProps.id = null;\n  let placeholder = placeholderValue;\n  let timePlaceholder = placeholder && 'hour' in placeholder ? placeholder : null;\n  let timeMinValue = props.minValue && 'hour' in props.minValue ? props.minValue : null;\n  let timeMaxValue = props.maxValue && 'hour' in props.maxValue ? props.maxValue : null;\n  let timeGranularity = state.granularity === 'hour' || state.granularity === 'minute' || state.granularity === 'second' ? state.granularity : null;\n  let showTimeField = !!timeGranularity;\n  let visibleMonths = (0, $04e96200274b03de$export$12ce2869ce471b1f)(maxVisibleMonths);\n  let validationState = state.validationState || (isInvalid ? 'invalid' : null);\n  // Multiplying by two for the two dates, adding one character for the dash, and then the padding around the dash\n  let approximateWidth = `calc(${(0, $04e96200274b03de$export$31e22e3c931fc056)(state) * 2 + 1}ch + 2 * var(--spectrum-global-dimension-size-100))`;\n  return /*#__PURE__*/(0, $dUbU7$react).createElement((0, $dUbU7$Field), {\n    ...props,\n    ref: domRef,\n    elementType: \"span\",\n    description: description,\n    labelProps: labelProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps,\n    validationState: validationState,\n    isInvalid: isInvalid,\n    validationErrors: validationErrors,\n    validationDetails: validationDetails,\n    wrapperClassName: (0, $dUbU7$classNames)((0, $parcel$interopDefault($dUbU7$styles_cssmodulejs)), 'react-spectrum-Datepicker-fieldWrapper')\n  }, /*#__PURE__*/(0, $dUbU7$react).createElement(\"div\", {\n    ...(0, $dUbU7$mergeProps)(groupProps, hoverProps, focusProps),\n    className: className,\n    ref: targetRef\n  }, /*#__PURE__*/(0, $dUbU7$react).createElement((0, $79348162c55d687f$export$f5b8910cec6cf069), {\n    isDisabled: isDisabled,\n    isQuiet: isQuiet,\n    validationState: validationState,\n    className: (0, $dUbU7$classNames)((0, $parcel$interopDefault($dUbU7$inputgroup_vars_cssmodulejs)), 'spectrum-InputGroup-field'),\n    inputClassName: fieldClassName,\n    disableFocusRing: true,\n    minWidth: approximateWidth\n  }, /*#__PURE__*/(0, $dUbU7$react).createElement((0, $d2bb88c82604b25f$export$34dc4cfa15ead1), {\n    ...startFieldProps,\n    \"data-testid\": \"start-date\",\n    isQuiet: props.isQuiet,\n    inputClassName: (0, $dUbU7$classNames)((0, $parcel$interopDefault($dUbU7$styles_cssmodulejs)), 'react-spectrum-Datepicker-startField')\n  }), /*#__PURE__*/(0, $dUbU7$react).createElement($cb301300011a98f7$var$DateRangeDash, null), /*#__PURE__*/(0, $dUbU7$react).createElement((0, $d2bb88c82604b25f$export$34dc4cfa15ead1), {\n    ...endFieldProps,\n    \"data-testid\": \"end-date\",\n    isQuiet: props.isQuiet,\n    inputClassName: (0, $dUbU7$classNames)((0, $parcel$interopDefault($dUbU7$inputgroup_vars_cssmodulejs)), 'spectrum-Datepicker-endField', (0, $dUbU7$classNames)((0, $parcel$interopDefault($dUbU7$styles_cssmodulejs)), 'react-spectrum-Datepicker-endField'))\n  })), /*#__PURE__*/(0, $dUbU7$react).createElement((0, $dUbU7$DialogTrigger), {\n    type: \"popover\",\n    mobileType: \"tray\",\n    placement: direction === 'rtl' ? 'bottom right' : 'bottom left',\n    targetRef: targetRef,\n    hideArrow: true,\n    isOpen: isOpen,\n    onOpenChange: setOpen,\n    shouldFlip: props.shouldFlip\n  }, /*#__PURE__*/(0, $dUbU7$react).createElement((0, $dUbU7$FieldButton), {\n    ...(0, $dUbU7$mergeProps)(buttonProps, focusPropsButton),\n    UNSAFE_className: (0, $dUbU7$classNames)((0, $parcel$interopDefault($dUbU7$inputgroup_vars_cssmodulejs)), 'spectrum-FieldButton'),\n    isQuiet: isQuiet,\n    validationState: validationState\n  }, /*#__PURE__*/(0, $dUbU7$react).createElement((0, $dUbU7$spectrumiconsworkflowCalendar), null)), /*#__PURE__*/(0, $dUbU7$react).createElement((0, $dUbU7$Dialog), {\n    UNSAFE_className: (0, $dUbU7$classNames)((0, $parcel$interopDefault($dUbU7$styles_cssmodulejs)), 'react-spectrum-Datepicker-dialog'),\n    ...dialogProps\n  }, /*#__PURE__*/(0, $dUbU7$react).createElement((0, $dUbU7$Content), null, /*#__PURE__*/(0, $dUbU7$react).createElement(\"div\", {\n    className: (0, $dUbU7$classNames)((0, $parcel$interopDefault($dUbU7$styles_cssmodulejs)), 'react-spectrum-Datepicker-dialogContent')\n  }, /*#__PURE__*/(0, $dUbU7$react).createElement((0, $dUbU7$RangeCalendar), {\n    ...calendarProps,\n    visibleMonths: visibleMonths,\n    pageBehavior: pageBehavior,\n    UNSAFE_className: (0, $dUbU7$classNames)((0, $parcel$interopDefault($dUbU7$styles_cssmodulejs)), 'react-spectrum-Datepicker-calendar', {\n      'is-invalid': validationState === 'invalid'\n    })\n  }), showTimeField && /*#__PURE__*/(0, $dUbU7$react).createElement((0, $dUbU7$Flex), {\n    gap: \"size-100\",\n    marginTop: \"size-100\",\n    UNSAFE_className: (0, $dUbU7$classNames)((0, $parcel$interopDefault($dUbU7$styles_cssmodulejs)), 'react-spectrum-Datepicker-timeFields')\n  }, /*#__PURE__*/(0, $dUbU7$react).createElement((0, $f0a04554754386b6$export$5eaee2322dd727eb), {\n    label: stringFormatter.format('startTime'),\n    value: ((_state_timeRange = state.timeRange) === null || _state_timeRange === void 0 ? void 0 : _state_timeRange.start) || null,\n    onChange: v => state.setTime('start', v),\n    placeholderValue: timePlaceholder,\n    granularity: timeGranularity,\n    minValue: timeMinValue,\n    maxValue: timeMaxValue,\n    hourCycle: props.hourCycle,\n    hideTimeZone: props.hideTimeZone,\n    flex: true\n  }), /*#__PURE__*/(0, $dUbU7$react).createElement((0, $f0a04554754386b6$export$5eaee2322dd727eb), {\n    label: stringFormatter.format('endTime'),\n    value: ((_state_timeRange1 = state.timeRange) === null || _state_timeRange1 === void 0 ? void 0 : _state_timeRange1.end) || null,\n    onChange: v => state.setTime('end', v),\n    placeholderValue: timePlaceholder,\n    granularity: timeGranularity,\n    minValue: timeMinValue,\n    maxValue: timeMaxValue,\n    hourCycle: props.hourCycle,\n    hideTimeZone: props.hideTimeZone,\n    flex: true\n  }))))))));\n}\nfunction $cb301300011a98f7$var$DateRangeDash() {\n  return /*#__PURE__*/(0, $dUbU7$react).createElement(\"div\", {\n    \"aria-hidden\": \"true\",\n    \"data-testid\": \"date-range-dash\",\n    className: (0, $dUbU7$classNames)((0, $parcel$interopDefault($dUbU7$styles_cssmodulejs)), 'react-spectrum-Datepicker-rangeDash')\n  });\n}\n/**\n * DateRangePickers combine two DateFields and a RangeCalendar popover to allow users\n * to enter or select a date and time range.\n */\nconst $cb301300011a98f7$export$17334619f3ac2224 = /*#__PURE__*/(0, $dUbU7$react).forwardRef($cb301300011a98f7$var$DateRangePicker);\nexport { $cb301300011a98f7$export$17334619f3ac2224 as DateRangePicker };","map":{"version":3,"names":["$cb301300011a98f7$var$DateRangePicker","props","ref","_state_timeRange","_state_timeRange1","$dUbU7$useProviderProps","$dUbU7$useFormProps","isQuiet","isDisabled","autoFocus","placeholderValue","maxVisibleMonths","pageBehavior","hoverProps","isHovered","$dUbU7$useHover","targetRef","$dUbU7$useRef","undefined","state","$dUbU7$useDateRangePickerState","shouldCloseOnSelect","hasTime","labelProps","groupProps","buttonProps","dialogProps","startFieldProps","endFieldProps","descriptionProps","errorMessageProps","calendarProps","isInvalid","validationErrors","validationDetails","$dUbU7$useDateRangePicker","isOpen","setOpen","direction","$dUbU7$useLocale","domRef","$04e96200274b03de$export$71a23a36270e4bf0","stringFormatter","$dUbU7$useLocalizedStringFormatter","$parcel$interopDefault","$dUbU7$intlStringsmodulejs","isFocused","isFocusVisible","focusProps","$dUbU7$useFocusRing","within","isTextInput","isFocusedButton","focusPropsButton","className","$dUbU7$classNames","$dUbU7$inputgroup_vars_cssmodulejs","fieldClassName","description","$04e96200274b03de$export$322f4580ccd8dde6","id","placeholder","timePlaceholder","timeMinValue","minValue","timeMaxValue","maxValue","timeGranularity","granularity","showTimeField","visibleMonths","$04e96200274b03de$export$12ce2869ce471b1f","validationState","approximateWidth","$04e96200274b03de$export$31e22e3c931fc056","$dUbU7$react","createElement","$dUbU7$Field","elementType","wrapperClassName","$dUbU7$styles_cssmodulejs","$dUbU7$mergeProps","$79348162c55d687f$export$f5b8910cec6cf069","inputClassName","disableFocusRing","minWidth","$d2bb88c82604b25f$export$34dc4cfa15ead1","$cb301300011a98f7$var$DateRangeDash","$dUbU7$DialogTrigger","type","mobileType","placement","hideArrow","onOpenChange","shouldFlip","$dUbU7$FieldButton","UNSAFE_className","$dUbU7$spectrumiconsworkflowCalendar","$dUbU7$Dialog","$dUbU7$Content","$dUbU7$RangeCalendar","$dUbU7$Flex","gap","marginTop","$f0a04554754386b6$export$5eaee2322dd727eb","label","format","value","timeRange","start","onChange","v","setTime","hourCycle","hideTimeZone","flex","end","$cb301300011a98f7$export$17334619f3ac2224","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-spectrum/datepicker/dist/packages/@react-spectrum/datepicker/src/DateRangePicker.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport CalendarIcon from '@spectrum-icons/workflow/Calendar';\nimport {classNames} from '@react-spectrum/utils';\nimport {Content} from '@react-spectrum/view';\nimport {DatePickerField} from './DatePickerField';\nimport datepickerStyles from './styles.css';\nimport {DateValue, SpectrumDateRangePickerProps} from '@react-types/datepicker';\nimport {Dialog, DialogTrigger} from '@react-spectrum/dialog';\nimport {Field} from '@react-spectrum/label';\nimport {FieldButton} from '@react-spectrum/button';\nimport {Flex} from '@react-spectrum/layout';\nimport {FocusableRef} from '@react-types/shared';\nimport {Input} from './Input';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {mergeProps} from '@react-aria/utils';\nimport {RangeCalendar} from '@react-spectrum/calendar';\nimport React, {ReactElement, useRef} from 'react';\nimport styles from '@adobe/spectrum-css-temp/components/inputgroup/vars.css';\nimport {TimeField} from './TimeField';\nimport {useDateRangePicker} from '@react-aria/datepicker';\nimport {useDateRangePickerState} from '@react-stately/datepicker';\nimport {useFocusManagerRef, useFormatHelpText, useFormattedDateWidth, useVisibleMonths} from './utils';\nimport {useFocusRing} from '@react-aria/focus';\nimport {useFormProps} from '@react-spectrum/form';\nimport {useHover} from '@react-aria/interactions';\nimport {useLocale, useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useProviderProps} from '@react-spectrum/provider';\n\nfunction DateRangePicker<T extends DateValue>(props: SpectrumDateRangePickerProps<T>, ref: FocusableRef<HTMLElement>) {\n  props = useProviderProps(props);\n  props = useFormProps(props);\n  let {\n    isQuiet,\n    isDisabled,\n    autoFocus,\n    placeholderValue,\n    maxVisibleMonths = 1,\n    pageBehavior\n  } = props;\n  let {hoverProps, isHovered} = useHover({isDisabled});\n  let targetRef = useRef<HTMLDivElement>(undefined);\n  let state = useDateRangePickerState({\n    ...props,\n    shouldCloseOnSelect: () => !state.hasTime\n  });\n  let {labelProps, groupProps, buttonProps, dialogProps, startFieldProps, endFieldProps, descriptionProps, errorMessageProps, calendarProps, isInvalid, validationErrors, validationDetails} = useDateRangePicker(props, state, targetRef);\n  let {isOpen, setOpen} = state;\n  let {direction} = useLocale();\n  let domRef = useFocusManagerRef(ref);\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-spectrum/datepicker');\n\n  let {isFocused, isFocusVisible, focusProps} = useFocusRing({\n    within: true,\n    isTextInput: true,\n    autoFocus\n  });\n\n  let {isFocused: isFocusedButton, focusProps: focusPropsButton} = useFocusRing({\n    within: false,\n    isTextInput: false,\n    autoFocus\n  });\n\n  let className = classNames(\n    styles,\n    'spectrum-InputGroup',\n    {\n      'spectrum-InputGroup--quiet': isQuiet,\n      'spectrum-InputGroup--invalid': isInvalid && !isDisabled,\n      'is-disabled': isDisabled,\n      'is-hovered': isHovered,\n      'is-focused': isFocused,\n      'focus-ring': isFocusVisible && !isFocusedButton\n    }\n  );\n\n  let fieldClassName = classNames(\n    styles,\n    'spectrum-InputGroup-input',\n    {\n      'is-disabled': isDisabled,\n      'is-invalid': isInvalid && !isDisabled\n    }\n  );\n\n  // Note: this description is intentionally not passed to useDatePicker.\n  // The format help text is unnecessary for screen reader users because each segment already has a label.\n  let description = useFormatHelpText(props);\n  if (description && !props.description) {\n    descriptionProps.id = null;\n  }\n\n  let placeholder: DateValue = placeholderValue;\n  let timePlaceholder = placeholder && 'hour' in placeholder ? placeholder : null;\n  let timeMinValue = props.minValue && 'hour' in props.minValue ? props.minValue : null;\n  let timeMaxValue = props.maxValue && 'hour' in props.maxValue ? props.maxValue : null;\n  let timeGranularity = state.granularity === 'hour' || state.granularity === 'minute' || state.granularity === 'second' ? state.granularity : null;\n  let showTimeField = !!timeGranularity;\n\n  let visibleMonths = useVisibleMonths(maxVisibleMonths);\n  let validationState = state.validationState || (isInvalid ? 'invalid' : null);\n\n  // Multiplying by two for the two dates, adding one character for the dash, and then the padding around the dash\n  let approximateWidth = `calc(${useFormattedDateWidth(state) * 2 + 1}ch + 2 * var(--spectrum-global-dimension-size-100))`;\n\n  return (\n    <Field\n      {...props}\n      ref={domRef}\n      elementType=\"span\"\n      description={description}\n      labelProps={labelProps}\n      descriptionProps={descriptionProps}\n      errorMessageProps={errorMessageProps}\n      validationState={validationState}\n      isInvalid={isInvalid}\n      validationErrors={validationErrors}\n      validationDetails={validationDetails}\n      wrapperClassName={classNames(datepickerStyles, 'react-spectrum-Datepicker-fieldWrapper')}>\n      <div\n        {...mergeProps(groupProps, hoverProps, focusProps)}\n        className={className}\n        ref={targetRef}>\n        <Input\n          isDisabled={isDisabled}\n          isQuiet={isQuiet}\n          validationState={validationState}\n          className={classNames(styles, 'spectrum-InputGroup-field')}\n          inputClassName={fieldClassName}\n          disableFocusRing\n          minWidth={approximateWidth}>\n          <DatePickerField\n            {...startFieldProps}\n            data-testid=\"start-date\"\n            isQuiet={props.isQuiet}\n            inputClassName={classNames(datepickerStyles, 'react-spectrum-Datepicker-startField')} />\n          <DateRangeDash />\n          <DatePickerField\n            {...endFieldProps}\n            data-testid=\"end-date\"\n            isQuiet={props.isQuiet}\n            inputClassName={classNames(\n              styles,\n              'spectrum-Datepicker-endField',\n              classNames(\n                datepickerStyles,\n                'react-spectrum-Datepicker-endField'\n              )\n            )} />\n        </Input>\n        <DialogTrigger\n          type=\"popover\"\n          mobileType=\"tray\"\n          placement={direction === 'rtl' ? 'bottom right' : 'bottom left'}\n          targetRef={targetRef}\n          hideArrow\n          isOpen={isOpen}\n          onOpenChange={setOpen}\n          shouldFlip={props.shouldFlip}>\n          <FieldButton\n            {...mergeProps(buttonProps, focusPropsButton)}\n            UNSAFE_className={classNames(styles, 'spectrum-FieldButton')}\n            isQuiet={isQuiet}\n            validationState={validationState}>\n            <CalendarIcon />\n          </FieldButton>\n          <Dialog UNSAFE_className={classNames(datepickerStyles, 'react-spectrum-Datepicker-dialog')} {...dialogProps}>\n            <Content>\n              <div className={classNames(datepickerStyles, 'react-spectrum-Datepicker-dialogContent')}>\n                <RangeCalendar\n                  {...calendarProps}\n                  visibleMonths={visibleMonths}\n                  pageBehavior={pageBehavior}\n                  UNSAFE_className={classNames(datepickerStyles, 'react-spectrum-Datepicker-calendar', {'is-invalid': validationState === 'invalid'})} />\n                {showTimeField &&\n                  <Flex gap=\"size-100\" marginTop=\"size-100\" UNSAFE_className={classNames(datepickerStyles, 'react-spectrum-Datepicker-timeFields')}>\n                    <TimeField\n                      label={stringFormatter.format('startTime')}\n                      value={state.timeRange?.start || null}\n                      onChange={v => state.setTime('start', v)}\n                      placeholderValue={timePlaceholder}\n                      granularity={timeGranularity}\n                      minValue={timeMinValue}\n                      maxValue={timeMaxValue}\n                      hourCycle={props.hourCycle}\n                      hideTimeZone={props.hideTimeZone}\n                      flex />\n                    <TimeField\n                      label={stringFormatter.format('endTime')}\n                      value={state.timeRange?.end || null}\n                      onChange={v => state.setTime('end', v)}\n                      placeholderValue={timePlaceholder}\n                      granularity={timeGranularity}\n                      minValue={timeMinValue}\n                      maxValue={timeMaxValue}\n                      hourCycle={props.hourCycle}\n                      hideTimeZone={props.hideTimeZone}\n                      flex />\n                  </Flex>\n                }\n              </div>\n            </Content>\n          </Dialog>\n        </DialogTrigger>\n      </div>\n    </Field>\n  );\n}\n\nfunction DateRangeDash() {\n  return (\n    <div\n      aria-hidden=\"true\"\n      data-testid=\"date-range-dash\"\n      className={classNames(datepickerStyles, 'react-spectrum-Datepicker-rangeDash')} />\n  );\n}\n\n/**\n * DateRangePickers combine two DateFields and a RangeCalendar popover to allow users\n * to enter or select a date and time range.\n */\nconst _DateRangePicker = React.forwardRef(DateRangePicker) as <T extends DateValue>(props: SpectrumDateRangePickerProps<T> & {ref?: FocusableRef<HTMLElement>}) => ReactElement;\nexport {_DateRangePicker as DateRangePicker};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
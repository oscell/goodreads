{"ast":null,"code":"import { createFocusManager as $6SCDv$createFocusManager } from \"@react-aria/focus\";\nimport { useLayoutEffect as $6SCDv$useLayoutEffect, filterDOMProps as $6SCDv$filterDOMProps } from \"@react-aria/utils\";\nimport { useLocale as $6SCDv$useLocale } from \"@react-aria/i18n\";\nimport { useState as $6SCDv$useState } from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $304ac34015d4535d$var$BUTTON_GROUP_ROLES = {\n  'none': 'toolbar',\n  'single': 'radiogroup',\n  'multiple': 'toolbar'\n};\nfunction $304ac34015d4535d$export$f4bf8d43c16de704(props, state, ref) {\n  let {\n    isDisabled: isDisabled,\n    orientation = 'horizontal'\n  } = props;\n  let [isInToolbar, setInToolbar] = (0, $6SCDv$useState)(false);\n  (0, $6SCDv$useLayoutEffect)(() => {\n    var _ref_current_parentElement;\n    setInToolbar(!!(ref.current && ((_ref_current_parentElement = ref.current.parentElement) === null || _ref_current_parentElement === void 0 ? void 0 : _ref_current_parentElement.closest('[role=\"toolbar\"]'))));\n  }, [ref]);\n  let allKeys = [...state.collection.getKeys()];\n  if (!allKeys.some(key => !state.disabledKeys.has(key))) isDisabled = true;\n  let {\n    direction: direction\n  } = (0, $6SCDv$useLocale)();\n  let focusManager = (0, $6SCDv$createFocusManager)(ref);\n  let flipDirection = direction === 'rtl' && orientation === 'horizontal';\n  let onKeyDown = e => {\n    if (!e.currentTarget.contains(e.target)) return;\n    switch (e.key) {\n      case 'ArrowRight':\n      case 'ArrowDown':\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.key === 'ArrowRight' && flipDirection) focusManager.focusPrevious({\n          wrap: true\n        });else focusManager.focusNext({\n          wrap: true\n        });\n        break;\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.key === 'ArrowLeft' && flipDirection) focusManager.focusNext({\n          wrap: true\n        });else focusManager.focusPrevious({\n          wrap: true\n        });\n        break;\n    }\n  };\n  let role = $304ac34015d4535d$var$BUTTON_GROUP_ROLES[state.selectionManager.selectionMode];\n  if (isInToolbar && role === 'toolbar') role = 'group';\n  return {\n    actionGroupProps: {\n      ...(0, $6SCDv$filterDOMProps)(props, {\n        labelable: true\n      }),\n      role: role,\n      'aria-orientation': role === 'toolbar' ? orientation : undefined,\n      'aria-disabled': isDisabled,\n      onKeyDown: onKeyDown\n    }\n  };\n}\nexport { $304ac34015d4535d$export$f4bf8d43c16de704 as useActionGroup };","map":{"version":3,"names":["$304ac34015d4535d$var$BUTTON_GROUP_ROLES","$304ac34015d4535d$export$f4bf8d43c16de704","props","state","ref","isDisabled","orientation","isInToolbar","setInToolbar","$6SCDv$useState","$6SCDv$useLayoutEffect","_ref_current_parentElement","current","parentElement","closest","allKeys","collection","getKeys","some","key","disabledKeys","has","direction","$6SCDv$useLocale","focusManager","$6SCDv$createFocusManager","flipDirection","onKeyDown","e","currentTarget","contains","target","preventDefault","stopPropagation","focusPrevious","wrap","focusNext","role","selectionManager","selectionMode","actionGroupProps","$6SCDv$filterDOMProps","labelable","undefined"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-aria/actiongroup/dist/packages/@react-aria/actiongroup/src/useActionGroup.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaActionGroupProps} from '@react-types/actiongroup';\nimport {createFocusManager} from '@react-aria/focus';\nimport {DOMAttributes, FocusableElement, Orientation, RefObject} from '@react-types/shared';\nimport {filterDOMProps, useLayoutEffect} from '@react-aria/utils';\nimport {ListState} from '@react-stately/list';\nimport {useLocale} from '@react-aria/i18n';\nimport {useState} from 'react';\n\nconst BUTTON_GROUP_ROLES = {\n  'none': 'toolbar',\n  'single': 'radiogroup',\n  'multiple': 'toolbar'\n};\n\nexport interface ActionGroupAria {\n  actionGroupProps: DOMAttributes\n}\n\nexport function useActionGroup<T>(props: AriaActionGroupProps<T>, state: ListState<T>, ref: RefObject<FocusableElement | null>): ActionGroupAria {\n  let {\n    isDisabled,\n    orientation = 'horizontal' as Orientation\n  } = props;\n\n  let [isInToolbar, setInToolbar] = useState(false);\n  useLayoutEffect(() => {\n    setInToolbar(!!(ref.current && ref.current.parentElement?.closest('[role=\"toolbar\"]')));\n  }, [ref]);\n\n  let allKeys = [...state.collection.getKeys()];\n  if (!allKeys.some(key => !state.disabledKeys.has(key))) {\n    isDisabled = true;\n  }\n\n  let {direction} = useLocale();\n  let focusManager = createFocusManager(ref);\n  let flipDirection = direction === 'rtl' && orientation === 'horizontal';\n  let onKeyDown = (e) => {\n    if (!e.currentTarget.contains(e.target)) {\n      return;\n    }\n\n    switch (e.key) {\n      case 'ArrowRight':\n      case 'ArrowDown':\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.key === 'ArrowRight' && flipDirection) {\n          focusManager.focusPrevious({wrap: true});\n        } else {\n          focusManager.focusNext({wrap: true});\n        }\n        break;\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.key === 'ArrowLeft' && flipDirection) {\n          focusManager.focusNext({wrap: true});\n        } else {\n          focusManager.focusPrevious({wrap: true});\n        }\n        break;\n    }\n  };\n\n  let role: string | undefined = BUTTON_GROUP_ROLES[state.selectionManager.selectionMode];\n  if (isInToolbar && role === 'toolbar') {\n    role = 'group';\n  }\n  return {\n    actionGroupProps: {\n      ...filterDOMProps(props, {labelable: true}),\n      role,\n      'aria-orientation': role === 'toolbar' ? orientation : undefined,\n      'aria-disabled': isDisabled,\n      onKeyDown\n    }\n  };\n}\n"],"mappings":";;;;;AAAA;;;;;;;;;;;;AAoBA,MAAMA,wCAAA,GAAqB;EACzB,QAAQ;EACR,UAAU;EACV,YAAY;AACd;AAMO,SAASC,0CAAkBC,KAA8B,EAAEC,KAAmB,EAAEC,GAAuC;EAC5H,IAAI;IAAAC,UAAA,EACFA,UAAU;IACVC,WAAA,GAAc;EAAA,CACf,GAAGJ,KAAA;EAEJ,IAAI,CAACK,WAAA,EAAaC,YAAA,CAAa,GAAG,IAAAC,eAAO,EAAE;EAC3C,IAAAC,sBAAc,EAAE;QACiBC,0BAAA;IAA/BH,YAAA,CAAa,CAAC,EAAEJ,GAAA,CAAIQ,OAAO,MAAID,0BAAA,GAAAP,GAAA,CAAIQ,OAAO,CAACC,aAAa,cAAzBF,0BAAA,uBAAAA,0BAAA,CAA2BG,OAAO,CAAC,oBAAkB;EACtF,GAAG,CAACV,GAAA,CAAI;EAER,IAAIW,OAAA,GAAU,C,GAAIZ,KAAA,CAAMa,UAAU,CAACC,OAAO,GAAG;EAC7C,IAAI,CAACF,OAAA,CAAQG,IAAI,CAACC,GAAA,IAAO,CAAChB,KAAA,CAAMiB,YAAY,CAACC,GAAG,CAACF,GAAA,IAC/Cd,UAAA,GAAa;EAGf,IAAI;IAAAiB,SAAA,EAACA;EAAS,CAAC,GAAG,IAAAC,gBAAQ;EAC1B,IAAIC,YAAA,GAAe,IAAAC,yBAAiB,EAAErB,GAAA;EACtC,IAAIsB,aAAA,GAAgBJ,SAAA,KAAc,SAAShB,WAAA,KAAgB;EAC3D,IAAIqB,SAAA,GAAaC,CAAA;IACf,IAAI,CAACA,CAAA,CAAEC,aAAa,CAACC,QAAQ,CAACF,CAAA,CAAEG,MAAM,GACpC;IAGF,QAAQH,CAAA,CAAET,GAAG;MACX,KAAK;MACL,KAAK;QACHS,CAAA,CAAEI,cAAc;QAChBJ,CAAA,CAAEK,eAAe;QACjB,IAAIL,CAAA,CAAET,GAAG,KAAK,gBAAgBO,aAAA,EAC5BF,YAAA,CAAaU,aAAa,CAAC;UAACC,IAAA,EAAM;QAAI,QAEtCX,YAAA,CAAaY,SAAS,CAAC;UAACD,IAAA,EAAM;QAAI;QAEpC;MACF,KAAK;MACL,KAAK;QACHP,CAAA,CAAEI,cAAc;QAChBJ,CAAA,CAAEK,eAAe;QACjB,IAAIL,CAAA,CAAET,GAAG,KAAK,eAAeO,aAAA,EAC3BF,YAAA,CAAaY,SAAS,CAAC;UAACD,IAAA,EAAM;QAAI,QAElCX,YAAA,CAAaU,aAAa,CAAC;UAACC,IAAA,EAAM;QAAI;QAExC;IACJ;EACF;EAEA,IAAIE,IAAA,GAA2BrC,wCAAkB,CAACG,KAAA,CAAMmC,gBAAgB,CAACC,aAAa,CAAC;EACvF,IAAIhC,WAAA,IAAe8B,IAAA,KAAS,WAC1BA,IAAA,GAAO;EAET,OAAO;IACLG,gBAAA,EAAkB;MAChB,GAAG,IAAAC,qBAAa,EAAEvC,KAAA,EAAO;QAACwC,SAAA,EAAW;MAAI,EAAE;YAC3CL,IAAA;MACA,oBAAoBA,IAAA,KAAS,YAAY/B,WAAA,GAAcqC,SAAA;MACvD,iBAAiBtC,UAAA;iBACjBsB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
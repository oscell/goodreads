{"ast":null,"code":"import $kaboj$react from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nfunction $bde65b0159e7c06e$export$a5f5a6912b18861c(children) {\n  let element;\n  if (typeof children === 'string') element = /*#__PURE__*/(0, $kaboj$react).createElement(\"span\", null, children);else element = (0, $kaboj$react).Children.only(children);\n  return element;\n}\nexport { $bde65b0159e7c06e$export$a5f5a6912b18861c as getWrappedElement };","map":{"version":3,"names":["$bde65b0159e7c06e$export$a5f5a6912b18861c","children","element","$kaboj$react","createElement","Children","only"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-spectrum/utils/dist/packages/@react-spectrum/utils/src/getWrappedElement.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, {JSXElementConstructor, ReactElement, ReactNode} from 'react';\n\nexport function getWrappedElement(children: string | ReactElement | ReactNode): ReactElement<any, JSXElementConstructor<any>> {\n  let element;\n  if (typeof children === 'string') {\n    element = <span>{children}</span>;\n  } else {\n    element = React.Children.only(children);\n  }\n  return element;\n}\n"],"mappings":";;AAAA;;;;;;;;;;;AAcO,SAASA,0CAAkBC,QAA2C;EAC3E,IAAIC,OAAA;EACJ,IAAI,OAAOD,QAAA,KAAa,UACtBC,OAAA,gBAAU,IAAAC,YAAA,EAAAC,aAAA,CAAC,cAAMH,QAAA,OAEjBC,OAAA,GAAU,IAAAC,YAAI,EAAEE,QAAQ,CAACC,IAAI,CAACL,QAAA;EAEhC,OAAOC,OAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
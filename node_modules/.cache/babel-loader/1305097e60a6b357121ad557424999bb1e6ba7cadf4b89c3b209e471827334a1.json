{"ast":null,"code":"import { baseStyleProps as $2XVCg$baseStyleProps, passthroughStyle as $2XVCg$passthroughStyle, dimensionValue as $2XVCg$dimensionValue, useStyleProps as $2XVCg$useStyleProps, useDOMRef as $2XVCg$useDOMRef } from \"@react-spectrum/utils\";\nimport { filterDOMProps as $2XVCg$filterDOMProps } from \"@react-aria/utils\";\nimport $2XVCg$react, { forwardRef as $2XVCg$forwardRef } from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $994c48bfb00b620b$var$gridStyleProps = {\n  ...(0, $2XVCg$baseStyleProps),\n  autoFlow: ['gridAutoFlow', (0, $2XVCg$passthroughStyle)],\n  autoColumns: ['gridAutoColumns', $994c48bfb00b620b$var$gridDimensionValue],\n  autoRows: ['gridAutoRows', $994c48bfb00b620b$var$gridDimensionValue],\n  areas: ['gridTemplateAreas', $994c48bfb00b620b$var$gridTemplateAreasValue],\n  columns: ['gridTemplateColumns', $994c48bfb00b620b$var$gridTemplateValue],\n  rows: ['gridTemplateRows', $994c48bfb00b620b$var$gridTemplateValue],\n  gap: ['gap', (0, $2XVCg$dimensionValue)],\n  rowGap: ['rowGap', (0, $2XVCg$dimensionValue)],\n  columnGap: ['columnGap', (0, $2XVCg$dimensionValue)],\n  justifyItems: ['justifyItems', (0, $2XVCg$passthroughStyle)],\n  justifyContent: ['justifyContent', (0, $2XVCg$passthroughStyle)],\n  alignItems: ['alignItems', (0, $2XVCg$passthroughStyle)],\n  alignContent: ['alignContent', (0, $2XVCg$passthroughStyle)]\n};\nfunction $994c48bfb00b620b$var$Grid(props, ref) {\n  let {\n    children: children,\n    ...otherProps\n  } = props;\n  let {\n    styleProps: styleProps\n  } = (0, $2XVCg$useStyleProps)(otherProps, $994c48bfb00b620b$var$gridStyleProps);\n  styleProps.style.display = 'grid'; // inline-grid?\n  let domRef = (0, $2XVCg$useDOMRef)(ref);\n  return /*#__PURE__*/(0, $2XVCg$react).createElement(\"div\", {\n    ...(0, $2XVCg$filterDOMProps)(otherProps),\n    ...styleProps,\n    ref: domRef\n  }, children);\n}\nfunction $994c48bfb00b620b$export$76d90c956114f2c2(count, repeat) {\n  return `repeat(${count}, ${$994c48bfb00b620b$var$gridTemplateValue(repeat)})`;\n}\nfunction $994c48bfb00b620b$export$9c1b655deaca4988(min, max) {\n  return `minmax(${$994c48bfb00b620b$var$gridDimensionValue(min)}, ${$994c48bfb00b620b$var$gridDimensionValue(max)})`;\n}\nfunction $994c48bfb00b620b$export$2f0b47b0911ce698(dimension) {\n  return `fit-content(${$994c48bfb00b620b$var$gridDimensionValue(dimension)})`;\n}\nfunction $994c48bfb00b620b$var$gridTemplateAreasValue(value) {\n  return value.map(v => `\"${v}\"`).join('\\n');\n}\nfunction $994c48bfb00b620b$var$gridDimensionValue(value) {\n  if (/^max-content|min-content|minmax|auto|fit-content|repeat|subgrid/.test(value)) return value;\n  return (0, $2XVCg$dimensionValue)(value);\n}\nfunction $994c48bfb00b620b$var$gridTemplateValue(value) {\n  if (Array.isArray(value)) return value.map($994c48bfb00b620b$var$gridDimensionValue).join(' ');\n  return $994c48bfb00b620b$var$gridDimensionValue(value);\n}\n/**\n * A layout container using CSS grid. Supports Spectrum dimensions as values to\n * ensure consistent and adaptive sizing and spacing.\n */\nconst $994c48bfb00b620b$export$ef2184bd89960b14 = /*#__PURE__*/(0, $2XVCg$forwardRef)($994c48bfb00b620b$var$Grid);\nexport { $994c48bfb00b620b$export$76d90c956114f2c2 as repeat, $994c48bfb00b620b$export$9c1b655deaca4988 as minmax, $994c48bfb00b620b$export$2f0b47b0911ce698 as fitContent, $994c48bfb00b620b$export$ef2184bd89960b14 as Grid };","map":{"version":3,"names":["$994c48bfb00b620b$var$gridStyleProps","$2XVCg$baseStyleProps","autoFlow","$2XVCg$passthroughStyle","autoColumns","$994c48bfb00b620b$var$gridDimensionValue","autoRows","areas","$994c48bfb00b620b$var$gridTemplateAreasValue","columns","$994c48bfb00b620b$var$gridTemplateValue","rows","gap","$2XVCg$dimensionValue","rowGap","columnGap","justifyItems","justifyContent","alignItems","alignContent","$994c48bfb00b620b$var$Grid","props","ref","children","otherProps","styleProps","$2XVCg$useStyleProps","style","display","domRef","$2XVCg$useDOMRef","$2XVCg$react","createElement","$2XVCg$filterDOMProps","$994c48bfb00b620b$export$76d90c956114f2c2","count","repeat","$994c48bfb00b620b$export$9c1b655deaca4988","min","max","$994c48bfb00b620b$export$2f0b47b0911ce698","dimension","value","map","v","join","test","Array","isArray","$994c48bfb00b620b$export$ef2184bd89960b14","$2XVCg$forwardRef"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-spectrum/layout/dist/packages/@react-spectrum/layout/src/Grid.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n  baseStyleProps,\n  dimensionValue,\n  passthroughStyle,\n  StyleHandlers,\n  useDOMRef,\n  useStyleProps\n} from '@react-spectrum/utils';\nimport {DimensionValue, DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {GridProps} from '@react-types/layout';\nimport React, {forwardRef} from 'react';\n\nconst gridStyleProps: StyleHandlers = {\n  ...baseStyleProps,\n  autoFlow: ['gridAutoFlow', passthroughStyle],\n  autoColumns: ['gridAutoColumns', gridDimensionValue],\n  autoRows: ['gridAutoRows', gridDimensionValue],\n  areas: ['gridTemplateAreas', gridTemplateAreasValue],\n  columns: ['gridTemplateColumns', gridTemplateValue],\n  rows: ['gridTemplateRows', gridTemplateValue],\n  gap: ['gap', dimensionValue],\n  rowGap: ['rowGap', dimensionValue],\n  columnGap: ['columnGap', dimensionValue],\n  justifyItems: ['justifyItems', passthroughStyle],\n  justifyContent: ['justifyContent', passthroughStyle],\n  alignItems: ['alignItems', passthroughStyle],\n  alignContent: ['alignContent', passthroughStyle]\n};\n\nfunction Grid(props: GridProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    children,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps, gridStyleProps);\n  styleProps.style.display = 'grid'; // inline-grid?\n  let domRef = useDOMRef(ref);\n\n  return (\n    <div {...filterDOMProps(otherProps)} {...styleProps} ref={domRef}>\n      {children}\n    </div>\n  );\n}\n\n/**\n * Can be used to make a repeating fragment of the columns or rows list.\n * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/repeat).\n * @param count - The number of times to repeat the fragment.\n * @param repeat - The fragment to repeat.\n */\nexport function repeat(count: number | 'auto-fill' | 'auto-fit', repeat: DimensionValue | DimensionValue[]): string {\n  return `repeat(${count}, ${gridTemplateValue(repeat)})`;\n}\n\n/**\n * Defines a size range greater than or equal to min and less than or equal to max.\n * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/minmax).\n * @param min - The minimum size.\n * @param max - The maximum size.\n */\nexport function minmax(min: DimensionValue, max: DimensionValue): string {\n  return `minmax(${gridDimensionValue(min)}, ${gridDimensionValue(max)})`;\n}\n\n/**\n * Clamps a given size to an available size.\n * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/fit-content).\n * @param dimension - The size to clamp.\n */\nexport function fitContent(dimension: DimensionValue): string {\n  return `fit-content(${gridDimensionValue(dimension)})`;\n}\n\nfunction gridTemplateAreasValue(value) {\n  return value.map(v => `\"${v}\"`).join('\\n');\n}\n\nfunction gridDimensionValue(value) {\n  if (/^max-content|min-content|minmax|auto|fit-content|repeat|subgrid/.test(value)) {\n    return value;\n  }\n\n  return dimensionValue(value);\n}\n\nfunction gridTemplateValue(value) {\n  if (Array.isArray(value)) {\n    return value.map(gridDimensionValue).join(' ');\n  }\n\n  return gridDimensionValue(value);\n}\n\n/**\n * A layout container using CSS grid. Supports Spectrum dimensions as values to\n * ensure consistent and adaptive sizing and spacing.\n */\nconst _Grid = forwardRef(Grid);\nexport {_Grid as Grid};\n"],"mappings":";;;;AAAA;;;;;;;;;;;;AAyBA,MAAMA,oCAAA,GAAgC;EACpC,IAAG,GAAAC,qBAAa,CAAC;EACjBC,QAAA,EAAU,CAAC,iBAAgB,GAAAC,uBAAe,EAAE;EAC5CC,WAAA,EAAa,CAAC,mBAAmBC,wCAAA,CAAmB;EACpDC,QAAA,EAAU,CAAC,gBAAgBD,wCAAA,CAAmB;EAC9CE,KAAA,EAAO,CAAC,qBAAqBC,4CAAA,CAAuB;EACpDC,OAAA,EAAS,CAAC,uBAAuBC,uCAAA,CAAkB;EACnDC,IAAA,EAAM,CAAC,oBAAoBD,uCAAA,CAAkB;EAC7CE,GAAA,EAAK,CAAC,QAAO,GAAAC,qBAAa,EAAE;EAC5BC,MAAA,EAAQ,CAAC,WAAU,GAAAD,qBAAa,EAAE;EAClCE,SAAA,EAAW,CAAC,cAAa,GAAAF,qBAAa,EAAE;EACxCG,YAAA,EAAc,CAAC,iBAAgB,GAAAb,uBAAe,EAAE;EAChDc,cAAA,EAAgB,CAAC,mBAAkB,GAAAd,uBAAe,EAAE;EACpDe,UAAA,EAAY,CAAC,eAAc,GAAAf,uBAAe,EAAE;EAC5CgB,YAAA,EAAc,CAAC,iBAAgB,GAAAhB,uBAAe;AAChD;AAEA,SAASiB,2BAAKC,KAAgB,EAAEC,GAA2B;EACzD,IAAI;IAAAC,QAAA,EACFA,QAAQ;IACR,GAAGC;EAAA,CACJ,GAAGH,KAAA;EACJ,IAAI;IAAAI,UAAA,EAACA;EAAU,CAAC,GAAG,IAAAC,oBAAY,EAAEF,UAAA,EAAYxB,oCAAA;EAC7CyB,UAAA,CAAWE,KAAK,CAACC,OAAO,GAAG,QAAQ;EACnC,IAAIC,MAAA,GAAS,IAAAC,gBAAQ,EAAER,GAAA;EAEvB,oBACE,IAAAS,YAAA,EAAAC,aAAA,CAAC;IAAK,GAAG,IAAAC,qBAAa,EAAET,UAAA,CAAW;IAAG,GAAGC,UAAU;IAAEH,GAAA,EAAKO;KACvDN,QAAA;AAGP;AAQO,SAASW,0CAAOC,KAAwC,EAAEC,MAAyC;EACxG,OAAO,UAAUD,KAAA,KAAUzB,uCAAA,CAAkB0B,MAAA,IAAU;AACzD;AAQO,SAASC,0CAAOC,GAAmB,EAAEC,GAAmB;EAC7D,OAAO,UAAUlC,wCAAA,CAAmBiC,GAAA,MAASjC,wCAAA,CAAmBkC,GAAA,IAAO;AACzE;AAOO,SAASC,0CAAWC,SAAyB;EAClD,OAAO,eAAepC,wCAAA,CAAmBoC,SAAA,IAAa;AACxD;AAEA,SAASjC,6CAAuBkC,KAAK;EACnC,OAAOA,KAAA,CAAMC,GAAG,CAACC,CAAA,IAAK,IAAIA,CAAA,GAAI,EAAEC,IAAI,CAAC;AACvC;AAEA,SAASxC,yCAAmBqC,KAAK;EAC/B,IAAI,kEAAkEI,IAAI,CAACJ,KAAA,GACzE,OAAOA,KAAA;EAGT,OAAO,IAAA7B,qBAAa,EAAE6B,KAAA;AACxB;AAEA,SAAShC,wCAAkBgC,KAAK;EAC9B,IAAIK,KAAA,CAAMC,OAAO,CAACN,KAAA,GAChB,OAAOA,KAAA,CAAMC,GAAG,CAACtC,wCAAA,EAAoBwC,IAAI,CAAC;EAG5C,OAAOxC,wCAAA,CAAmBqC,KAAA;AAC5B;AAEA;;;;AAIA,MAAMO,yCAAA,gBAAQ,IAAAC,iBAAS,EAAE9B,0BAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
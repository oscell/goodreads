{"ast":null,"code":"import { alignCenter as $f62d864046160412$export$f4a51ff076cc9a09, alignEnd as $f62d864046160412$export$530edbfc915b2b04, alignStart as $f62d864046160412$export$144a00ba6044eb9, constrainStart as $f62d864046160412$export$5bb865b12696a77d, constrainValue as $f62d864046160412$export$4f5203c0d889109e, isInvalid as $f62d864046160412$export$eac50920cf2fd59a, previousAvailableDate as $f62d864046160412$export$a1d3911297b952d7 } from \"./utils.mjs\";\nimport { DateFormatter as $7G4ZY$DateFormatter, toCalendar as $7G4ZY$toCalendar, toCalendarDate as $7G4ZY$toCalendarDate, today as $7G4ZY$today, GregorianCalendar as $7G4ZY$GregorianCalendar, startOfWeek as $7G4ZY$startOfWeek, startOfMonth as $7G4ZY$startOfMonth, endOfWeek as $7G4ZY$endOfWeek, endOfMonth as $7G4ZY$endOfMonth, isSameDay as $7G4ZY$isSameDay, getDayOfWeek as $7G4ZY$getDayOfWeek } from \"@internationalized/date\";\nimport { useControlledState as $7G4ZY$useControlledState } from \"@react-stately/utils\";\nimport { useMemo as $7G4ZY$useMemo, useState as $7G4ZY$useState } from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $131cf43a05231e1e$export$6d095e787d2b5e1f(props) {\n  let defaultFormatter = (0, $7G4ZY$useMemo)(() => new (0, $7G4ZY$DateFormatter)(props.locale), [props.locale]);\n  let resolvedOptions = (0, $7G4ZY$useMemo)(() => defaultFormatter.resolvedOptions(), [defaultFormatter]);\n  let {\n    locale: locale,\n    createCalendar: createCalendar,\n    visibleDuration = {\n      months: 1\n    },\n    minValue: minValue,\n    maxValue: maxValue,\n    selectionAlignment: selectionAlignment,\n    isDateUnavailable: isDateUnavailable,\n    pageBehavior = 'visible'\n  } = props;\n  let calendar = (0, $7G4ZY$useMemo)(() => createCalendar(resolvedOptions.calendar), [createCalendar, resolvedOptions.calendar]);\n  var _props_defaultValue;\n  let [value, setControlledValue] = (0, $7G4ZY$useControlledState)(props.value, (_props_defaultValue = props.defaultValue) !== null && _props_defaultValue !== void 0 ? _props_defaultValue : null, props.onChange);\n  let calendarDateValue = (0, $7G4ZY$useMemo)(() => value ? (0, $7G4ZY$toCalendar)((0, $7G4ZY$toCalendarDate)(value), calendar) : null, [value, calendar]);\n  let timeZone = (0, $7G4ZY$useMemo)(() => value && 'timeZone' in value ? value.timeZone : resolvedOptions.timeZone, [value, resolvedOptions.timeZone]);\n  let focusedCalendarDate = (0, $7G4ZY$useMemo)(() => props.focusedValue ? (0, $f62d864046160412$export$4f5203c0d889109e)((0, $7G4ZY$toCalendar)((0, $7G4ZY$toCalendarDate)(props.focusedValue), calendar), minValue, maxValue) : undefined, [props.focusedValue, calendar, minValue, maxValue]);\n  let defaultFocusedCalendarDate = (0, $7G4ZY$useMemo)(() => (0, $f62d864046160412$export$4f5203c0d889109e)(props.defaultFocusedValue ? (0, $7G4ZY$toCalendar)((0, $7G4ZY$toCalendarDate)(props.defaultFocusedValue), calendar) : calendarDateValue || (0, $7G4ZY$toCalendar)((0, $7G4ZY$today)(timeZone), calendar), minValue, maxValue), [props.defaultFocusedValue, calendarDateValue, timeZone, calendar, minValue, maxValue]);\n  let [focusedDate, setFocusedDate] = (0, $7G4ZY$useControlledState)(focusedCalendarDate, defaultFocusedCalendarDate, props.onFocusChange);\n  let [startDate, setStartDate] = (0, $7G4ZY$useState)(() => {\n    switch (selectionAlignment) {\n      case 'start':\n        return (0, $f62d864046160412$export$144a00ba6044eb9)(focusedDate, visibleDuration, locale, minValue, maxValue);\n      case 'end':\n        return (0, $f62d864046160412$export$530edbfc915b2b04)(focusedDate, visibleDuration, locale, minValue, maxValue);\n      case 'center':\n      default:\n        return (0, $f62d864046160412$export$f4a51ff076cc9a09)(focusedDate, visibleDuration, locale, minValue, maxValue);\n    }\n  });\n  let [isFocused, setFocused] = (0, $7G4ZY$useState)(props.autoFocus || false);\n  let endDate = (0, $7G4ZY$useMemo)(() => {\n    let duration = {\n      ...visibleDuration\n    };\n    if (duration.days) duration.days--;else duration.days = -1;\n    return startDate.add(duration);\n  }, [startDate, visibleDuration]);\n  // Reset focused date and visible range when calendar changes.\n  let [lastCalendarIdentifier, setLastCalendarIdentifier] = (0, $7G4ZY$useState)(calendar.identifier);\n  if (calendar.identifier !== lastCalendarIdentifier) {\n    let newFocusedDate = (0, $7G4ZY$toCalendar)(focusedDate, calendar);\n    setStartDate((0, $f62d864046160412$export$f4a51ff076cc9a09)(newFocusedDate, visibleDuration, locale, minValue, maxValue));\n    setFocusedDate(newFocusedDate);\n    setLastCalendarIdentifier(calendar.identifier);\n  }\n  if ((0, $f62d864046160412$export$eac50920cf2fd59a)(focusedDate, minValue, maxValue))\n    // If the focused date was moved to an invalid value, it can't be focused, so constrain it.\n    setFocusedDate((0, $f62d864046160412$export$4f5203c0d889109e)(focusedDate, minValue, maxValue));else if (focusedDate.compare(startDate) < 0) setStartDate((0, $f62d864046160412$export$530edbfc915b2b04)(focusedDate, visibleDuration, locale, minValue, maxValue));else if (focusedDate.compare(endDate) > 0) setStartDate((0, $f62d864046160412$export$144a00ba6044eb9)(focusedDate, visibleDuration, locale, minValue, maxValue));\n  // Sets focus to a specific cell date\n  function focusCell(date) {\n    date = (0, $f62d864046160412$export$4f5203c0d889109e)(date, minValue, maxValue);\n    setFocusedDate(date);\n  }\n  function setValue(newValue) {\n    if (!props.isDisabled && !props.isReadOnly) {\n      let localValue = newValue;\n      if (localValue === null) {\n        setControlledValue(null);\n        return;\n      }\n      localValue = (0, $f62d864046160412$export$4f5203c0d889109e)(localValue, minValue, maxValue);\n      localValue = (0, $f62d864046160412$export$a1d3911297b952d7)(localValue, startDate, isDateUnavailable);\n      if (!localValue) return;\n      // The display calendar should not have any effect on the emitted value.\n      // Emit dates in the same calendar as the original value, if any, otherwise gregorian.\n      localValue = (0, $7G4ZY$toCalendar)(localValue, (value === null || value === void 0 ? void 0 : value.calendar) || new (0, $7G4ZY$GregorianCalendar)());\n      // Preserve time if the input value had one.\n      if (value && 'hour' in value) setControlledValue(value.set(localValue));else setControlledValue(localValue);\n    }\n  }\n  let isUnavailable = (0, $7G4ZY$useMemo)(() => {\n    if (!calendarDateValue) return false;\n    if (isDateUnavailable && isDateUnavailable(calendarDateValue)) return true;\n    return (0, $f62d864046160412$export$eac50920cf2fd59a)(calendarDateValue, minValue, maxValue);\n  }, [calendarDateValue, isDateUnavailable, minValue, maxValue]);\n  let isValueInvalid = props.isInvalid || props.validationState === 'invalid' || isUnavailable;\n  let validationState = isValueInvalid ? 'invalid' : null;\n  let pageDuration = (0, $7G4ZY$useMemo)(() => {\n    if (pageBehavior === 'visible') return visibleDuration;\n    return $131cf43a05231e1e$var$unitDuration(visibleDuration);\n  }, [pageBehavior, visibleDuration]);\n  var _props_isDisabled, _props_isReadOnly;\n  return {\n    isDisabled: (_props_isDisabled = props.isDisabled) !== null && _props_isDisabled !== void 0 ? _props_isDisabled : false,\n    isReadOnly: (_props_isReadOnly = props.isReadOnly) !== null && _props_isReadOnly !== void 0 ? _props_isReadOnly : false,\n    value: calendarDateValue,\n    setValue: setValue,\n    visibleRange: {\n      start: startDate,\n      end: endDate\n    },\n    minValue: minValue,\n    maxValue: maxValue,\n    focusedDate: focusedDate,\n    timeZone: timeZone,\n    validationState: validationState,\n    isValueInvalid: isValueInvalid,\n    setFocusedDate(date) {\n      focusCell(date);\n      setFocused(true);\n    },\n    focusNextDay() {\n      focusCell(focusedDate.add({\n        days: 1\n      }));\n    },\n    focusPreviousDay() {\n      focusCell(focusedDate.subtract({\n        days: 1\n      }));\n    },\n    focusNextRow() {\n      if (visibleDuration.days) this.focusNextPage();else if (visibleDuration.weeks || visibleDuration.months || visibleDuration.years) focusCell(focusedDate.add({\n        weeks: 1\n      }));\n    },\n    focusPreviousRow() {\n      if (visibleDuration.days) this.focusPreviousPage();else if (visibleDuration.weeks || visibleDuration.months || visibleDuration.years) focusCell(focusedDate.subtract({\n        weeks: 1\n      }));\n    },\n    focusNextPage() {\n      let start = startDate.add(pageDuration);\n      setFocusedDate((0, $f62d864046160412$export$4f5203c0d889109e)(focusedDate.add(pageDuration), minValue, maxValue));\n      setStartDate((0, $f62d864046160412$export$144a00ba6044eb9)((0, $f62d864046160412$export$5bb865b12696a77d)(focusedDate, start, pageDuration, locale, minValue, maxValue), pageDuration, locale));\n    },\n    focusPreviousPage() {\n      let start = startDate.subtract(pageDuration);\n      setFocusedDate((0, $f62d864046160412$export$4f5203c0d889109e)(focusedDate.subtract(pageDuration), minValue, maxValue));\n      setStartDate((0, $f62d864046160412$export$144a00ba6044eb9)((0, $f62d864046160412$export$5bb865b12696a77d)(focusedDate, start, pageDuration, locale, minValue, maxValue), pageDuration, locale));\n    },\n    focusSectionStart() {\n      if (visibleDuration.days) focusCell(startDate);else if (visibleDuration.weeks) focusCell((0, $7G4ZY$startOfWeek)(focusedDate, locale));else if (visibleDuration.months || visibleDuration.years) focusCell((0, $7G4ZY$startOfMonth)(focusedDate));\n    },\n    focusSectionEnd() {\n      if (visibleDuration.days) focusCell(endDate);else if (visibleDuration.weeks) focusCell((0, $7G4ZY$endOfWeek)(focusedDate, locale));else if (visibleDuration.months || visibleDuration.years) focusCell((0, $7G4ZY$endOfMonth)(focusedDate));\n    },\n    focusNextSection(larger) {\n      if (!larger && !visibleDuration.days) {\n        focusCell(focusedDate.add($131cf43a05231e1e$var$unitDuration(visibleDuration)));\n        return;\n      }\n      if (visibleDuration.days) this.focusNextPage();else if (visibleDuration.weeks) focusCell(focusedDate.add({\n        months: 1\n      }));else if (visibleDuration.months || visibleDuration.years) focusCell(focusedDate.add({\n        years: 1\n      }));\n    },\n    focusPreviousSection(larger) {\n      if (!larger && !visibleDuration.days) {\n        focusCell(focusedDate.subtract($131cf43a05231e1e$var$unitDuration(visibleDuration)));\n        return;\n      }\n      if (visibleDuration.days) this.focusPreviousPage();else if (visibleDuration.weeks) focusCell(focusedDate.subtract({\n        months: 1\n      }));else if (visibleDuration.months || visibleDuration.years) focusCell(focusedDate.subtract({\n        years: 1\n      }));\n    },\n    selectFocusedDate() {\n      setValue(focusedDate);\n    },\n    selectDate(date) {\n      setValue(date);\n    },\n    isFocused: isFocused,\n    setFocused: setFocused,\n    isInvalid(date) {\n      return (0, $f62d864046160412$export$eac50920cf2fd59a)(date, minValue, maxValue);\n    },\n    isSelected(date) {\n      return calendarDateValue != null && (0, $7G4ZY$isSameDay)(date, calendarDateValue) && !this.isCellDisabled(date) && !this.isCellUnavailable(date);\n    },\n    isCellFocused(date) {\n      return isFocused && focusedDate && (0, $7G4ZY$isSameDay)(date, focusedDate);\n    },\n    isCellDisabled(date) {\n      return props.isDisabled || date.compare(startDate) < 0 || date.compare(endDate) > 0 || this.isInvalid(date);\n    },\n    isCellUnavailable(date) {\n      return props.isDateUnavailable ? props.isDateUnavailable(date) : false;\n    },\n    isPreviousVisibleRangeInvalid() {\n      let prev = startDate.subtract({\n        days: 1\n      });\n      return (0, $7G4ZY$isSameDay)(prev, startDate) || this.isInvalid(prev);\n    },\n    isNextVisibleRangeInvalid() {\n      // Adding may return the same date if we reached the end of time\n      // according to the calendar system (e.g. 9999-12-31).\n      let next = endDate.add({\n        days: 1\n      });\n      return (0, $7G4ZY$isSameDay)(next, endDate) || this.isInvalid(next);\n    },\n    getDatesInWeek(weekIndex, from = startDate) {\n      // let date = startOfWeek(from, locale);\n      let date = from.add({\n        weeks: weekIndex\n      });\n      let dates = [];\n      date = (0, $7G4ZY$startOfWeek)(date, locale);\n      // startOfWeek will clamp dates within the calendar system's valid range, which may\n      // start in the middle of a week. In this case, add null placeholders.\n      let dayOfWeek = (0, $7G4ZY$getDayOfWeek)(date, locale);\n      for (let i = 0; i < dayOfWeek; i++) dates.push(null);\n      while (dates.length < 7) {\n        dates.push(date);\n        let nextDate = date.add({\n          days: 1\n        });\n        if ((0, $7G4ZY$isSameDay)(date, nextDate)) break;\n        date = nextDate;\n      }\n      // Add null placeholders if at the end of the calendar system.\n      while (dates.length < 7) dates.push(null);\n      return dates;\n    }\n  };\n}\nfunction $131cf43a05231e1e$var$unitDuration(duration) {\n  let unit = {\n    ...duration\n  };\n  for (let key in duration) unit[key] = 1;\n  return unit;\n}\nexport { $131cf43a05231e1e$export$6d095e787d2b5e1f as useCalendarState };","map":{"version":3,"names":["$131cf43a05231e1e$export$6d095e787d2b5e1f","props","defaultFormatter","$7G4ZY$useMemo","$7G4ZY$DateFormatter","locale","resolvedOptions","createCalendar","visibleDuration","months","minValue","maxValue","selectionAlignment","isDateUnavailable","pageBehavior","calendar","_props_defaultValue","value","setControlledValue","$7G4ZY$useControlledState","defaultValue","onChange","calendarDateValue","$7G4ZY$toCalendar","$7G4ZY$toCalendarDate","timeZone","focusedCalendarDate","focusedValue","$f62d864046160412$export$4f5203c0d889109e","undefined","defaultFocusedCalendarDate","defaultFocusedValue","$7G4ZY$today","focusedDate","setFocusedDate","onFocusChange","startDate","setStartDate","$7G4ZY$useState","$f62d864046160412$export$144a00ba6044eb9","$f62d864046160412$export$530edbfc915b2b04","$f62d864046160412$export$f4a51ff076cc9a09","isFocused","setFocused","autoFocus","endDate","duration","days","add","lastCalendarIdentifier","setLastCalendarIdentifier","identifier","newFocusedDate","$f62d864046160412$export$eac50920cf2fd59a","compare","focusCell","date","setValue","newValue","isDisabled","isReadOnly","localValue","$f62d864046160412$export$a1d3911297b952d7","$7G4ZY$GregorianCalendar","set","isUnavailable","isValueInvalid","isInvalid","validationState","pageDuration","$131cf43a05231e1e$var$unitDuration","_props_isDisabled","_props_isReadOnly","visibleRange","start","end","focusNextDay","focusPreviousDay","subtract","focusNextRow","focusNextPage","weeks","years","focusPreviousRow","focusPreviousPage","$f62d864046160412$export$5bb865b12696a77d","focusSectionStart","$7G4ZY$startOfWeek","$7G4ZY$startOfMonth","focusSectionEnd","$7G4ZY$endOfWeek","$7G4ZY$endOfMonth","focusNextSection","larger","focusPreviousSection","selectFocusedDate","selectDate","isSelected","$7G4ZY$isSameDay","isCellDisabled","isCellUnavailable","isCellFocused","isPreviousVisibleRangeInvalid","prev","isNextVisibleRangeInvalid","next","getDatesInWeek","weekIndex","from","dates","dayOfWeek","$7G4ZY$getDayOfWeek","i","push","length","nextDate","unit","key"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-stately/calendar/dist/packages/@react-stately/calendar/src/useCalendarState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {alignCenter, alignEnd, alignStart, constrainStart, constrainValue, isInvalid, previousAvailableDate} from './utils';\nimport {\n  Calendar,\n  CalendarDate,\n  DateDuration,\n  DateFormatter,\n  endOfMonth,\n  endOfWeek,\n  getDayOfWeek,\n  GregorianCalendar,\n  isSameDay,\n  startOfMonth,\n  startOfWeek,\n  toCalendar,\n  toCalendarDate,\n  today\n} from '@internationalized/date';\nimport {CalendarProps, DateValue, MappedDateValue} from '@react-types/calendar';\nimport {CalendarState} from './types';\nimport {useControlledState} from '@react-stately/utils';\nimport {useMemo, useState} from 'react';\nimport {ValidationState} from '@react-types/shared';\n\nexport interface CalendarStateOptions<T extends DateValue = DateValue> extends CalendarProps<T> {\n  /** The locale to display and edit the value according to. */\n  locale: string,\n  /**\n   * A function that creates a [Calendar](../internationalized/date/Calendar.html)\n   * object for a given calendar identifier. Such a function may be imported from the\n   * `@internationalized/date` package, or manually implemented to include support for\n   * only certain calendars.\n   */\n  createCalendar: (name: string) => Calendar,\n  /**\n   * The amount of days that will be displayed at once. This affects how pagination works.\n   * @default {months: 1}\n   */\n  visibleDuration?: DateDuration,\n  /** Determines how to align the initial selection relative to the visible date range. */\n  selectionAlignment?: 'start' | 'center' | 'end'\n}\n/**\n * Provides state management for a calendar component.\n * A calendar displays one or more date grids and allows users to select a single date.\n */\nexport function useCalendarState<T extends DateValue = DateValue>(props: CalendarStateOptions<T>): CalendarState {\n  let defaultFormatter = useMemo(() => new DateFormatter(props.locale), [props.locale]);\n  let resolvedOptions = useMemo(() => defaultFormatter.resolvedOptions(), [defaultFormatter]);\n  let {\n    locale,\n    createCalendar,\n    visibleDuration = {months: 1},\n    minValue,\n    maxValue,\n    selectionAlignment,\n    isDateUnavailable,\n    pageBehavior = 'visible'\n  } = props;\n  let calendar = useMemo(() => createCalendar(resolvedOptions.calendar), [createCalendar, resolvedOptions.calendar]);\n\n  let [value, setControlledValue] = useControlledState<DateValue | null, MappedDateValue<T>>(props.value!, props.defaultValue ?? null!, props.onChange);\n  let calendarDateValue = useMemo(() => value ? toCalendar(toCalendarDate(value), calendar) : null, [value, calendar]);\n  let timeZone = useMemo(() => value && 'timeZone' in value ? value.timeZone : resolvedOptions.timeZone, [value, resolvedOptions.timeZone]);\n  let focusedCalendarDate = useMemo(() => (\n    props.focusedValue\n      ? constrainValue(toCalendar(toCalendarDate(props.focusedValue), calendar), minValue, maxValue)\n      : undefined\n  ), [props.focusedValue, calendar, minValue, maxValue]);\n  let defaultFocusedCalendarDate = useMemo(() => (\n    constrainValue(\n      props.defaultFocusedValue\n        ? toCalendar(toCalendarDate(props.defaultFocusedValue), calendar)\n        : calendarDateValue || toCalendar(today(timeZone), calendar),\n      minValue,\n      maxValue\n    )\n  ), [props.defaultFocusedValue, calendarDateValue, timeZone, calendar, minValue, maxValue]);\n  let [focusedDate, setFocusedDate] = useControlledState(focusedCalendarDate, defaultFocusedCalendarDate, props.onFocusChange);\n  let [startDate, setStartDate] = useState(() => {\n    switch (selectionAlignment) {\n      case 'start':\n        return alignStart(focusedDate, visibleDuration, locale, minValue, maxValue);\n      case 'end':\n        return alignEnd(focusedDate, visibleDuration, locale, minValue, maxValue);\n      case 'center':\n      default:\n        return alignCenter(focusedDate, visibleDuration, locale, minValue, maxValue);\n    }\n  });\n  let [isFocused, setFocused] = useState(props.autoFocus || false);\n\n  let endDate = useMemo(() => {\n    let duration = {...visibleDuration};\n    if (duration.days) {\n      duration.days--;\n    } else {\n      duration.days = -1;\n    }\n    return startDate.add(duration);\n  }, [startDate, visibleDuration]);\n\n  // Reset focused date and visible range when calendar changes.\n  let [lastCalendarIdentifier, setLastCalendarIdentifier] = useState(calendar.identifier);\n  if (calendar.identifier !== lastCalendarIdentifier) {\n    let newFocusedDate = toCalendar(focusedDate, calendar);\n    setStartDate(alignCenter(newFocusedDate, visibleDuration, locale, minValue, maxValue));\n    setFocusedDate(newFocusedDate);\n    setLastCalendarIdentifier(calendar.identifier);\n  }\n\n  if (isInvalid(focusedDate, minValue, maxValue)) {\n    // If the focused date was moved to an invalid value, it can't be focused, so constrain it.\n    setFocusedDate(constrainValue(focusedDate, minValue, maxValue));\n  } else if (focusedDate.compare(startDate) < 0) {\n    setStartDate(alignEnd(focusedDate, visibleDuration, locale, minValue, maxValue));\n  } else if (focusedDate.compare(endDate) > 0) {\n    setStartDate(alignStart(focusedDate, visibleDuration, locale, minValue, maxValue));\n  }\n\n  // Sets focus to a specific cell date\n  function focusCell(date: CalendarDate) {\n    date = constrainValue(date, minValue, maxValue);\n    setFocusedDate(date);\n  }\n\n  function setValue(newValue: CalendarDate | null) {\n    if (!props.isDisabled && !props.isReadOnly) {\n      let localValue = newValue;\n      if (localValue === null) {\n        setControlledValue(null);\n        return;\n      }\n      localValue = constrainValue(localValue, minValue, maxValue);\n      localValue = previousAvailableDate(localValue, startDate, isDateUnavailable);\n      if (!localValue) {\n        return;\n      }\n\n      // The display calendar should not have any effect on the emitted value.\n      // Emit dates in the same calendar as the original value, if any, otherwise gregorian.\n      localValue = toCalendar(localValue, value?.calendar || new GregorianCalendar());\n\n      // Preserve time if the input value had one.\n      if (value && 'hour' in value) {\n        setControlledValue(value.set(localValue));\n      } else {\n        setControlledValue(localValue);\n      }\n    }\n  }\n\n  let isUnavailable = useMemo(() => {\n    if (!calendarDateValue) {\n      return false;\n    }\n\n    if (isDateUnavailable && isDateUnavailable(calendarDateValue)) {\n      return true;\n    }\n\n    return isInvalid(calendarDateValue, minValue, maxValue);\n  }, [calendarDateValue, isDateUnavailable, minValue, maxValue]);\n  let isValueInvalid = props.isInvalid || props.validationState === 'invalid' || isUnavailable;\n  let validationState: ValidationState | null = isValueInvalid ? 'invalid' : null;\n\n  let pageDuration = useMemo(() => {\n    if (pageBehavior === 'visible') {\n      return visibleDuration;\n    }\n\n    return unitDuration(visibleDuration);\n  }, [pageBehavior, visibleDuration]);\n\n  return {\n    isDisabled: props.isDisabled ?? false,\n    isReadOnly: props.isReadOnly ?? false,\n    value: calendarDateValue,\n    setValue,\n    visibleRange: {\n      start: startDate,\n      end: endDate\n    },\n    minValue,\n    maxValue,\n    focusedDate,\n    timeZone,\n    validationState,\n    isValueInvalid,\n    setFocusedDate(date) {\n      focusCell(date);\n      setFocused(true);\n    },\n    focusNextDay() {\n      focusCell(focusedDate.add({days: 1}));\n    },\n    focusPreviousDay() {\n      focusCell(focusedDate.subtract({days: 1}));\n    },\n    focusNextRow() {\n      if (visibleDuration.days) {\n        this.focusNextPage();\n      } else if (visibleDuration.weeks || visibleDuration.months || visibleDuration.years) {\n        focusCell(focusedDate.add({weeks: 1}));\n      }\n    },\n    focusPreviousRow() {\n      if (visibleDuration.days) {\n        this.focusPreviousPage();\n      } else if (visibleDuration.weeks || visibleDuration.months || visibleDuration.years) {\n        focusCell(focusedDate.subtract({weeks: 1}));\n      }\n    },\n    focusNextPage() {\n      let start = startDate.add(pageDuration);\n      setFocusedDate(constrainValue(focusedDate.add(pageDuration), minValue, maxValue));\n      setStartDate(\n        alignStart(\n          constrainStart(focusedDate, start, pageDuration, locale, minValue, maxValue),\n          pageDuration,\n          locale\n        )\n      );\n    },\n    focusPreviousPage() {\n      let start = startDate.subtract(pageDuration);\n      setFocusedDate(constrainValue(focusedDate.subtract(pageDuration), minValue, maxValue));\n      setStartDate(\n        alignStart(\n          constrainStart(focusedDate, start, pageDuration, locale, minValue, maxValue),\n          pageDuration,\n          locale\n        )\n      );\n    },\n    focusSectionStart() {\n      if (visibleDuration.days) {\n        focusCell(startDate);\n      } else if (visibleDuration.weeks) {\n        focusCell(startOfWeek(focusedDate, locale));\n      } else if (visibleDuration.months || visibleDuration.years) {\n        focusCell(startOfMonth(focusedDate));\n      }\n    },\n    focusSectionEnd() {\n      if (visibleDuration.days) {\n        focusCell(endDate);\n      } else if (visibleDuration.weeks) {\n        focusCell(endOfWeek(focusedDate, locale));\n      } else if (visibleDuration.months || visibleDuration.years) {\n        focusCell(endOfMonth(focusedDate));\n      }\n    },\n    focusNextSection(larger) {\n      if (!larger && !visibleDuration.days) {\n        focusCell(focusedDate.add(unitDuration(visibleDuration)));\n        return;\n      }\n\n      if (visibleDuration.days) {\n        this.focusNextPage();\n      } else if (visibleDuration.weeks) {\n        focusCell(focusedDate.add({months: 1}));\n      } else if (visibleDuration.months || visibleDuration.years) {\n        focusCell(focusedDate.add({years: 1}));\n      }\n    },\n    focusPreviousSection(larger) {\n      if (!larger && !visibleDuration.days) {\n        focusCell(focusedDate.subtract(unitDuration(visibleDuration)));\n        return;\n      }\n\n      if (visibleDuration.days) {\n        this.focusPreviousPage();\n      } else if (visibleDuration.weeks) {\n        focusCell(focusedDate.subtract({months: 1}));\n      } else if (visibleDuration.months || visibleDuration.years) {\n        focusCell(focusedDate.subtract({years: 1}));\n      }\n    },\n    selectFocusedDate() {\n      setValue(focusedDate);\n    },\n    selectDate(date) {\n      setValue(date);\n    },\n    isFocused,\n    setFocused,\n    isInvalid(date) {\n      return isInvalid(date, minValue, maxValue);\n    },\n    isSelected(date) {\n      return calendarDateValue != null && isSameDay(date, calendarDateValue) && !this.isCellDisabled(date) && !this.isCellUnavailable(date);\n    },\n    isCellFocused(date) {\n      return isFocused && focusedDate && isSameDay(date, focusedDate);\n    },\n    isCellDisabled(date) {\n      return props.isDisabled || date.compare(startDate) < 0 || date.compare(endDate) > 0 || this.isInvalid(date);\n    },\n    isCellUnavailable(date) {\n      return props.isDateUnavailable ? props.isDateUnavailable(date) : false;\n    },\n    isPreviousVisibleRangeInvalid() {\n      let prev = startDate.subtract({days: 1});\n      return isSameDay(prev, startDate) || this.isInvalid(prev);\n    },\n    isNextVisibleRangeInvalid() {\n      // Adding may return the same date if we reached the end of time\n      // according to the calendar system (e.g. 9999-12-31).\n      let next = endDate.add({days: 1});\n      return isSameDay(next, endDate) || this.isInvalid(next);\n    },\n    getDatesInWeek(weekIndex, from = startDate) {\n      // let date = startOfWeek(from, locale);\n      let date = from.add({weeks: weekIndex});\n      let dates: (CalendarDate | null)[] = [];\n\n      date = startOfWeek(date, locale);\n\n      // startOfWeek will clamp dates within the calendar system's valid range, which may\n      // start in the middle of a week. In this case, add null placeholders.\n      let dayOfWeek = getDayOfWeek(date, locale);\n      for (let i = 0; i < dayOfWeek; i++) {\n        dates.push(null);\n      }\n\n      while (dates.length < 7) {\n        dates.push(date);\n        let nextDate = date.add({days: 1});\n        if (isSameDay(date, nextDate)) {\n          // If the next day is the same, we have hit the end of the calendar system.\n          break;\n        }\n        date = nextDate;\n      }\n\n      // Add null placeholders if at the end of the calendar system.\n      while (dates.length < 7) {\n        dates.push(null);\n      }\n\n      return dates;\n    }\n  };\n}\n\nfunction unitDuration(duration: DateDuration) {\n  let unit = {...duration};\n  for (let key in duration) {\n    unit[key] = 1;\n  }\n  return unit;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { ColorAreaContext as $4e85f108e88277b8$export$ebe63fadcdce34ed, ColorFieldContext as $4e85f108e88277b8$export$44644b8a16031b5b, ColorSliderContext as $4e85f108e88277b8$export$717b2c0a523a0b53, ColorWheelContext as $4e85f108e88277b8$export$265015d6dc85bf21 } from \"./RSPContexts.mjs\";\nimport { ColorSwatchContext as $251c695a52d94a8d$export$83cc445538396800 } from \"./ColorSwatch.mjs\";\nimport { ColorSwatchPickerContext as $0bb41941cfe72bd4$export$7214f50881fc1eaf } from \"./ColorSwatchPicker.mjs\";\nimport { Provider as $64fa3d84918910a7$export$2881499e37b75b9a, useRenderProps as $64fa3d84918910a7$export$4d86445c2cf5e3, useSlottedContext as $64fa3d84918910a7$export$fabf2dc03a41866e } from \"./utils.mjs\";\nimport { useColorPickerState as $arEth$useColorPickerState } from \"@react-stately/color\";\nimport { mergeProps as $arEth$mergeProps } from \"react-aria\";\nimport $arEth$react, { createContext as $arEth$createContext } from \"react\";\n\n/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $2637d3f5efb23186$export$cfac98503b32f6d6 = /*#__PURE__*/(0, $arEth$createContext)(null);\nconst $2637d3f5efb23186$export$2c14261be40a385f = /*#__PURE__*/(0, $arEth$createContext)(null);\nfunction $2637d3f5efb23186$export$9feb1bc2e5f1ccb3(props) {\n  let ctx = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)($2637d3f5efb23186$export$cfac98503b32f6d6, props.slot);\n  props = (0, $arEth$mergeProps)(ctx, props);\n  let state = (0, $arEth$useColorPickerState)(props);\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({\n    ...props,\n    values: {\n      color: state.color\n    }\n  });\n  return /*#__PURE__*/(0, $arEth$react).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {\n    values: [[$2637d3f5efb23186$export$2c14261be40a385f, state], [(0, $4e85f108e88277b8$export$717b2c0a523a0b53), {\n      value: state.color,\n      onChange: state.setColor\n    }], [(0, $4e85f108e88277b8$export$ebe63fadcdce34ed), {\n      value: state.color,\n      onChange: state.setColor\n    }], [(0, $4e85f108e88277b8$export$265015d6dc85bf21), {\n      value: state.color,\n      onChange: state.setColor\n    }], [(0, $4e85f108e88277b8$export$44644b8a16031b5b), {\n      value: state.color,\n      onChange: state.setColor\n    }], [(0, $251c695a52d94a8d$export$83cc445538396800), {\n      color: state.color\n    }], [(0, $0bb41941cfe72bd4$export$7214f50881fc1eaf), {\n      value: state.color,\n      onChange: state.setColor\n    }]]\n  }, renderProps.children);\n}\nexport { $2637d3f5efb23186$export$cfac98503b32f6d6 as ColorPickerContext, $2637d3f5efb23186$export$2c14261be40a385f as ColorPickerStateContext, $2637d3f5efb23186$export$9feb1bc2e5f1ccb3 as ColorPicker };","map":{"version":3,"names":["$2637d3f5efb23186$export$cfac98503b32f6d6","$arEth$createContext","$2637d3f5efb23186$export$2c14261be40a385f","$2637d3f5efb23186$export$9feb1bc2e5f1ccb3","props","ctx","$64fa3d84918910a7$export$fabf2dc03a41866e","slot","$arEth$mergeProps","state","$arEth$useColorPickerState","renderProps","$64fa3d84918910a7$export$4d86445c2cf5e3","values","color","$arEth$react","createElement","$64fa3d84918910a7$export$2881499e37b75b9a","$4e85f108e88277b8$export$717b2c0a523a0b53","value","onChange","setColor","$4e85f108e88277b8$export$ebe63fadcdce34ed","$4e85f108e88277b8$export$265015d6dc85bf21","$4e85f108e88277b8$export$44644b8a16031b5b","$251c695a52d94a8d$export$83cc445538396800","$0bb41941cfe72bd4$export$7214f50881fc1eaf","children"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/react-aria-components/dist/packages/react-aria-components/src/ColorPicker.tsx"],"sourcesContent":["/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Color} from '@react-types/color';\nimport {ColorAreaContext, ColorFieldContext, ColorSliderContext, ColorWheelContext} from './RSPContexts';\nimport {ColorPickerState, ColorPickerProps as StatelyColorPickerProps, useColorPickerState} from '@react-stately/color';\nimport {ColorSwatchContext} from './ColorSwatch';\nimport {ColorSwatchPickerContext} from './ColorSwatchPicker';\nimport {mergeProps} from 'react-aria';\nimport {Provider, RenderProps, SlotProps, SlottedContextValue, useRenderProps, useSlottedContext} from './utils';\nimport React, {createContext} from 'react';\n\nexport interface ColorPickerRenderProps {\n  /** The currently selected color. */\n  color: Color\n}\n\nexport interface ColorPickerProps extends StatelyColorPickerProps, SlotProps, Pick<RenderProps<ColorPickerRenderProps>, 'children'> {}\n\nexport const ColorPickerContext = createContext<SlottedContextValue<ColorPickerProps>>(null);\nexport const ColorPickerStateContext = createContext<ColorPickerState | null>(null);\n\n/**\n * A ColorPicker synchronizes a color value between multiple React Aria color components.\n * It simplifies building color pickers with customizable layouts via composition.\n */\nexport function ColorPicker(props: ColorPickerProps) {\n  let ctx = useSlottedContext(ColorPickerContext, props.slot);\n  props = mergeProps(ctx, props);\n  let state = useColorPickerState(props);\n  let renderProps = useRenderProps({\n    ...props,\n    values: {\n      color: state.color\n    }\n  });\n\n  return (\n    <Provider\n      values={[\n        [ColorPickerStateContext, state],\n        [ColorSliderContext, {value: state.color, onChange: state.setColor}],\n        [ColorAreaContext, {value: state.color, onChange: state.setColor}],\n        [ColorWheelContext, {value: state.color, onChange: state.setColor}],\n        [ColorFieldContext, {value: state.color, onChange: state.setColor}],\n        [ColorSwatchContext, {color: state.color}],\n        [ColorSwatchPickerContext, {value: state.color, onChange: state.setColor}]\n      ]}>\n      {renderProps.children}\n    </Provider>\n  );\n}\n"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;AA4BO,MAAMA,yCAAA,gBAAqB,IAAAC,oBAAY,EAAyC;AAChF,MAAMC,yCAAA,gBAA0B,IAAAD,oBAAY,EAA2B;AAMvE,SAASE,0CAAYC,KAAuB;EACjD,IAAIC,GAAA,GAAM,IAAAC,yCAAgB,EAAEN,yCAAA,EAAoBI,KAAA,CAAMG,IAAI;EAC1DH,KAAA,GAAQ,IAAAI,iBAAS,EAAEH,GAAA,EAAKD,KAAA;EACxB,IAAIK,KAAA,GAAQ,IAAAC,0BAAkB,EAAEN,KAAA;EAChC,IAAIO,WAAA,GAAc,IAAAC,uCAAa,EAAE;IAC/B,GAAGR,KAAK;IACRS,MAAA,EAAQ;MACNC,KAAA,EAAOL,KAAA,CAAMK;IACf;EACF;EAEA,oBACE,IAAAC,YAAA,EAAAC,aAAA,EAAC,GAAAC,yCAAO;IACNJ,MAAA,EAAQ,CACN,CAACX,yCAAA,EAAyBO,KAAA,CAAM,EAChC,EAAC,GAAAS,yCAAiB,GAAG;MAACC,KAAA,EAAOV,KAAA,CAAMK,KAAK;MAAEM,QAAA,EAAUX,KAAA,CAAMY;IAAQ,EAAE,EACpE,EAAC,GAAAC,yCAAe,GAAG;MAACH,KAAA,EAAOV,KAAA,CAAMK,KAAK;MAAEM,QAAA,EAAUX,KAAA,CAAMY;IAAQ,EAAE,EAClE,EAAC,GAAAE,yCAAgB,GAAG;MAACJ,KAAA,EAAOV,KAAA,CAAMK,KAAK;MAAEM,QAAA,EAAUX,KAAA,CAAMY;IAAQ,EAAE,EACnE,EAAC,GAAAG,yCAAgB,GAAG;MAACL,KAAA,EAAOV,KAAA,CAAMK,KAAK;MAAEM,QAAA,EAAUX,KAAA,CAAMY;IAAQ,EAAE,EACnE,EAAC,GAAAI,yCAAiB,GAAG;MAACX,KAAA,EAAOL,KAAA,CAAMK;IAAK,EAAE,EAC1C,EAAC,GAAAY,yCAAuB,GAAG;MAACP,KAAA,EAAOV,KAAA,CAAMK,KAAK;MAAEM,QAAA,EAAUX,KAAA,CAAMY;IAAQ,EAAE;KAE3EV,WAAA,CAAYgB,QAAQ;AAG3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
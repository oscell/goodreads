{"ast":null,"code":"import { ColorThumb as $3a90e89d07d7bbd5$export$a3cc47cee1c1ccc } from \"./ColorThumb.mjs\";\nimport \"./vars.27a9fa37.css\";\nimport $bv4AR$colorwheel_vars_cssmodulejs from \"./colorwheel_vars_css.mjs\";\nimport { useFocusableRef as $bv4AR$useFocusableRef, dimensionValue as $bv4AR$dimensionValue, useStyleProps as $bv4AR$useStyleProps, classNames as $bv4AR$classNames } from \"@react-spectrum/utils\";\nimport { useContextProps as $bv4AR$useContextProps, ColorWheelContext as $bv4AR$ColorWheelContext } from \"react-aria-components\";\nimport $bv4AR$react, { useRef as $bv4AR$useRef, useState as $bv4AR$useState, useCallback as $bv4AR$useCallback, useEffect as $bv4AR$useEffect } from \"react\";\nimport { useColorWheel as $bv4AR$useColorWheel } from \"@react-aria/color\";\nimport { useColorWheelState as $bv4AR$useColorWheelState } from \"@react-stately/color\";\nimport { useFocusRing as $bv4AR$useFocusRing } from \"@react-aria/focus\";\nimport { useProviderProps as $bv4AR$useProviderProps } from \"@react-spectrum/provider\";\nimport { useResizeObserver as $bv4AR$useResizeObserver } from \"@react-aria/utils\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $3aac1c27203f04b5$var$WHEEL_THICKNESS = 24;\nfunction $3aac1c27203f04b5$var$ColorWheel(props, ref) {\n  props = (0, $bv4AR$useProviderProps)(props);\n  let inputRef = (0, $bv4AR$useRef)(null);\n  let containerRef = (0, $bv4AR$useFocusableRef)(ref, inputRef);\n  [props, containerRef] = (0, $bv4AR$useContextProps)(props, containerRef, (0, $bv4AR$ColorWheelContext));\n  let {\n    isDisabled: isDisabled\n  } = props;\n  let size = props.size && (0, $bv4AR$dimensionValue)(props.size);\n  let {\n    styleProps: styleProps\n  } = (0, $bv4AR$useStyleProps)(props);\n  let [wheelRadius, setWheelRadius] = (0, $bv4AR$useState)(0);\n  let [wheelThickness, setWheelThickness] = (0, $bv4AR$useState)($3aac1c27203f04b5$var$WHEEL_THICKNESS);\n  let resizeHandler = (0, $bv4AR$useCallback)(() => {\n    if (containerRef.current) {\n      setWheelRadius(containerRef.current.offsetWidth / 2);\n      let thickness = window.getComputedStyle(containerRef.current).getPropertyValue('--spectrum-colorwheel-track-thickness');\n      if (thickness) setWheelThickness(parseInt(thickness, 10));\n    }\n  }, [containerRef, setWheelRadius, setWheelThickness]);\n  (0, $bv4AR$useEffect)(() => {\n    // the size observer's fallback to the window resize event doesn't fire on mount\n    if (wheelRadius === 0) resizeHandler();\n  }, [wheelRadius, resizeHandler]);\n  (0, $bv4AR$useResizeObserver)({\n    ref: containerRef,\n    onResize: resizeHandler\n  });\n  let state = (0, $bv4AR$useColorWheelState)(props);\n  let {\n    trackProps: trackProps,\n    inputProps: inputProps,\n    thumbProps: thumbProps\n  } = (0, $bv4AR$useColorWheel)({\n    ...props,\n    innerRadius: wheelRadius - wheelThickness,\n    outerRadius: wheelRadius\n  }, state, inputRef);\n  let {\n    focusProps: focusProps,\n    isFocusVisible: isFocusVisible\n  } = (0, $bv4AR$useFocusRing)();\n  return /*#__PURE__*/(0, $bv4AR$react).createElement(\"div\", {\n    className: (0, $bv4AR$classNames)((0, $parcel$interopDefault($bv4AR$colorwheel_vars_cssmodulejs)), 'spectrum-ColorWheel', {\n      'is-disabled': isDisabled\n    }, styleProps.className),\n    ref: containerRef,\n    style: {\n      ...styleProps.style,\n      // Workaround around https://github.com/adobe/spectrum-css/issues/1032\n      // @ts-ignore\n      'width': size,\n      'height': size\n    }\n  }, /*#__PURE__*/(0, $bv4AR$react).createElement(\"div\", {\n    ...trackProps,\n    className: (0, $bv4AR$classNames)((0, $parcel$interopDefault($bv4AR$colorwheel_vars_cssmodulejs)), 'spectrum-ColorWheel-gradient')\n  }), /*#__PURE__*/(0, $bv4AR$react).createElement((0, $3a90e89d07d7bbd5$export$a3cc47cee1c1ccc), {\n    value: state.getDisplayColor(),\n    isFocused: isFocusVisible,\n    isDisabled: isDisabled,\n    isDragging: state.isDragging,\n    containerRef: containerRef,\n    className: (0, $bv4AR$classNames)((0, $parcel$interopDefault($bv4AR$colorwheel_vars_cssmodulejs)), 'spectrum-ColorWheel-handle'),\n    ...thumbProps\n  }, /*#__PURE__*/(0, $bv4AR$react).createElement(\"input\", {\n    ...focusProps,\n    className: (0, $bv4AR$classNames)((0, $parcel$interopDefault($bv4AR$colorwheel_vars_cssmodulejs)), 'spectrum-ColorWheel-slider'),\n    ...inputProps,\n    ref: inputRef\n  })));\n}\n/**\n * ColorWheels allow users to adjust the hue of an HSL or HSB color value on a circular track.\n */\nlet $3aac1c27203f04b5$export$f80663f808113381 = /*#__PURE__*/(0, $bv4AR$react).forwardRef($3aac1c27203f04b5$var$ColorWheel);\nexport { $3aac1c27203f04b5$export$f80663f808113381 as ColorWheel };","map":{"version":3,"names":["$3aac1c27203f04b5$var$WHEEL_THICKNESS","$3aac1c27203f04b5$var$ColorWheel","props","ref","$bv4AR$useProviderProps","inputRef","$bv4AR$useRef","containerRef","$bv4AR$useFocusableRef","$bv4AR$useContextProps","$bv4AR$ColorWheelContext","isDisabled","size","$bv4AR$dimensionValue","styleProps","$bv4AR$useStyleProps","wheelRadius","setWheelRadius","$bv4AR$useState","wheelThickness","setWheelThickness","resizeHandler","$bv4AR$useCallback","current","offsetWidth","thickness","window","getComputedStyle","getPropertyValue","parseInt","$bv4AR$useEffect","$bv4AR$useResizeObserver","onResize","state","$bv4AR$useColorWheelState","trackProps","inputProps","thumbProps","$bv4AR$useColorWheel","innerRadius","outerRadius","focusProps","isFocusVisible","$bv4AR$useFocusRing","$bv4AR$react","createElement","className","$bv4AR$classNames","$parcel$interopDefault","$bv4AR$colorwheel_vars_cssmodulejs","style","$3a90e89d07d7bbd5$export$a3cc47cee1c1ccc","value","getDisplayColor","isFocused","isDragging","$3aac1c27203f04b5$export$f80663f808113381","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-spectrum/color/dist/packages/@react-spectrum/color/src/ColorWheel.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, dimensionValue, useFocusableRef, useStyleProps} from '@react-spectrum/utils';\nimport {ColorThumb} from './ColorThumb';\nimport {ColorWheelContext, useContextProps} from 'react-aria-components';\nimport {FocusableRef} from '@react-types/shared';\nimport React, {useCallback, useEffect, useRef, useState} from 'react';\nimport {SpectrumColorWheelProps} from '@react-types/color';\nimport styles from '@adobe/spectrum-css-temp/components/colorwheel/vars.css';\nimport {useColorWheel} from '@react-aria/color';\nimport {useColorWheelState} from '@react-stately/color';\nimport {useFocusRing} from '@react-aria/focus';\nimport {useProviderProps} from '@react-spectrum/provider';\nimport {useResizeObserver} from '@react-aria/utils';\n\nconst WHEEL_THICKNESS = 24;\n\nfunction ColorWheel(props: SpectrumColorWheelProps, ref: FocusableRef<HTMLDivElement>) {\n  props = useProviderProps(props);\n  let inputRef = useRef(null);\n  let containerRef = useFocusableRef(ref, inputRef);\n  [props, containerRef] = useContextProps(props, containerRef, ColorWheelContext);\n\n  let {isDisabled} = props;\n  let size = props.size && dimensionValue(props.size);\n  let {styleProps} = useStyleProps(props);\n\n\n  let [wheelRadius, setWheelRadius] = useState<number>(0);\n  let [wheelThickness, setWheelThickness] = useState(WHEEL_THICKNESS);\n\n  let resizeHandler = useCallback(() => {\n    if (containerRef.current) {\n      setWheelRadius(containerRef.current.offsetWidth / 2);\n      let thickness = window.getComputedStyle(containerRef.current)\n        .getPropertyValue('--spectrum-colorwheel-track-thickness');\n      if (thickness) {\n        setWheelThickness(parseInt(thickness, 10));\n      }\n    }\n  }, [containerRef, setWheelRadius, setWheelThickness]);\n\n  useEffect(() => {\n    // the size observer's fallback to the window resize event doesn't fire on mount\n    if (wheelRadius === 0) {\n      resizeHandler();\n    }\n  }, [wheelRadius, resizeHandler]);\n\n  useResizeObserver({\n    ref: containerRef,\n    onResize: resizeHandler\n  });\n\n  let state = useColorWheelState(props);\n\n  let {trackProps, inputProps, thumbProps} = useColorWheel({\n    ...props,\n    innerRadius: wheelRadius - wheelThickness,\n    outerRadius: wheelRadius\n  }, state, inputRef);\n\n  let {focusProps, isFocusVisible} = useFocusRing();\n\n  return (\n    <div\n      className={\n        classNames(\n          styles,\n          'spectrum-ColorWheel',\n          {\n            'is-disabled': isDisabled\n          },\n          styleProps.className\n        )\n      }\n      ref={containerRef}\n      style={{\n        ...styleProps.style,\n        // Workaround around https://github.com/adobe/spectrum-css/issues/1032\n        // @ts-ignore\n        'width': size,\n        'height': size\n      }}>\n      <div {...trackProps} className={classNames(styles, 'spectrum-ColorWheel-gradient')} />\n      <ColorThumb\n        value={state.getDisplayColor()}\n        isFocused={isFocusVisible}\n        isDisabled={isDisabled}\n        isDragging={state.isDragging}\n        containerRef={containerRef}\n        className={classNames(styles, 'spectrum-ColorWheel-handle')}\n        {...thumbProps}>\n        <input {...focusProps} className={classNames(styles, 'spectrum-ColorWheel-slider')} {...inputProps} ref={inputRef} />\n      </ColorThumb>\n    </div>\n  );\n}\n\n/**\n * ColorWheels allow users to adjust the hue of an HSL or HSB color value on a circular track.\n */\nlet _ColorWheel = React.forwardRef(ColorWheel);\nexport {_ColorWheel as ColorWheel};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
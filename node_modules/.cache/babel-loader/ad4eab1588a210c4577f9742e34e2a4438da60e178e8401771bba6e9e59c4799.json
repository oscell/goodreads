{"ast":null,"code":"import \"./vars.1014f586.css\";\nimport $1v8IR$radio_vars_cssmodulejs from \"./radio_vars_css.mjs\";\nimport { useRadioProvider as $f394bff9e10389a0$export$b054eba74077a826 } from \"./context.mjs\";\nimport { useStyleProps as $1v8IR$useStyleProps, useFocusableRef as $1v8IR$useFocusableRef, classNames as $1v8IR$classNames } from \"@react-spectrum/utils\";\nimport { FocusRing as $1v8IR$FocusRing } from \"@react-aria/focus\";\nimport $1v8IR$react, { useRef as $1v8IR$useRef, forwardRef as $1v8IR$forwardRef } from \"react\";\nimport { useHover as $1v8IR$useHover } from \"@react-aria/interactions\";\nimport { useRadio as $1v8IR$useRadio } from \"@react-aria/radio\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $337c5cb580c4e6ba$var$Radio(props, ref) {\n  let {\n    isDisabled: isDisabled,\n    children: children,\n    autoFocus: autoFocus,\n    ...otherProps\n  } = props;\n  let {\n    styleProps: styleProps\n  } = (0, $1v8IR$useStyleProps)(otherProps);\n  let {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  } = (0, $1v8IR$useHover)({\n    isDisabled: isDisabled\n  });\n  let inputRef = (0, $1v8IR$useRef)(null);\n  let domRef = (0, $1v8IR$useFocusableRef)(ref, inputRef);\n  let radioGroupProps = (0, $f394bff9e10389a0$export$b054eba74077a826)();\n  let {\n    isEmphasized: isEmphasized,\n    state: state\n  } = radioGroupProps;\n  let {\n    inputProps: inputProps\n  } = (0, $1v8IR$useRadio)({\n    ...props,\n    ...radioGroupProps,\n    isDisabled: isDisabled\n  }, state, inputRef);\n  return /*#__PURE__*/(0, $1v8IR$react).createElement(\"label\", {\n    ...styleProps,\n    ...hoverProps,\n    ref: domRef,\n    className: (0, $1v8IR$classNames)((0, $parcel$interopDefault($1v8IR$radio_vars_cssmodulejs)), 'spectrum-Radio', {\n      // Removing. Pending design feedback.\n      // 'spectrum-Radio--labelBelow': labelPosition === 'bottom',\n      'spectrum-Radio--quiet': !isEmphasized,\n      'is-disabled': isDisabled,\n      'is-invalid': state.isInvalid,\n      'is-hovered': isHovered\n    }, styleProps.className)\n  }, /*#__PURE__*/(0, $1v8IR$react).createElement((0, $1v8IR$FocusRing), {\n    focusRingClass: (0, $1v8IR$classNames)((0, $parcel$interopDefault($1v8IR$radio_vars_cssmodulejs)), 'focus-ring'),\n    autoFocus: autoFocus\n  }, /*#__PURE__*/(0, $1v8IR$react).createElement(\"input\", {\n    ...inputProps,\n    ref: inputRef,\n    className: (0, $1v8IR$classNames)((0, $parcel$interopDefault($1v8IR$radio_vars_cssmodulejs)), 'spectrum-Radio-input')\n  })), /*#__PURE__*/(0, $1v8IR$react).createElement(\"span\", {\n    className: (0, $1v8IR$classNames)((0, $parcel$interopDefault($1v8IR$radio_vars_cssmodulejs)), 'spectrum-Radio-button')\n  }), children && /*#__PURE__*/(0, $1v8IR$react).createElement(\"span\", {\n    className: (0, $1v8IR$classNames)((0, $parcel$interopDefault($1v8IR$radio_vars_cssmodulejs)), 'spectrum-Radio-label')\n  }, children));\n}\n/**\n * Radio buttons allow users to select a single option from a list of mutually exclusive options.\n * All possible options are exposed up front for users to compare.\n */\nconst $337c5cb580c4e6ba$export$d7b12c4107be0d61 = /*#__PURE__*/(0, $1v8IR$forwardRef)($337c5cb580c4e6ba$var$Radio);\nexport { $337c5cb580c4e6ba$export$d7b12c4107be0d61 as Radio };","map":{"version":3,"names":["$337c5cb580c4e6ba$var$Radio","props","ref","isDisabled","children","autoFocus","otherProps","styleProps","$1v8IR$useStyleProps","hoverProps","isHovered","$1v8IR$useHover","inputRef","$1v8IR$useRef","domRef","$1v8IR$useFocusableRef","radioGroupProps","$f394bff9e10389a0$export$b054eba74077a826","isEmphasized","state","inputProps","$1v8IR$useRadio","$1v8IR$react","createElement","className","$1v8IR$classNames","$parcel$interopDefault","$1v8IR$radio_vars_cssmodulejs","isInvalid","$1v8IR$FocusRing","focusRingClass","$337c5cb580c4e6ba$export$d7b12c4107be0d61","$1v8IR$forwardRef"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-spectrum/radio/dist/packages/@react-spectrum/radio/src/Radio.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, useFocusableRef, useStyleProps} from '@react-spectrum/utils';\nimport {FocusableRef} from '@react-types/shared';\nimport {FocusRing} from '@react-aria/focus';\nimport React, {forwardRef, useRef} from 'react';\nimport {SpectrumRadioProps} from '@react-types/radio';\nimport styles from '@adobe/spectrum-css-temp/components/radio/vars.css';\nimport {useHover} from '@react-aria/interactions';\nimport {useRadio} from '@react-aria/radio';\nimport {useRadioProvider} from './context';\n\nfunction Radio(props: SpectrumRadioProps, ref: FocusableRef<HTMLLabelElement>) {\n  let {\n    isDisabled,\n    children,\n    autoFocus,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let {hoverProps, isHovered} = useHover({isDisabled});\n\n  let inputRef = useRef<HTMLInputElement>(null);\n  let domRef = useFocusableRef(ref, inputRef);\n\n  let radioGroupProps = useRadioProvider();\n  let {\n    isEmphasized,\n    state\n  } = radioGroupProps;\n\n  let {inputProps} = useRadio({\n    ...props,\n    ...radioGroupProps,\n    isDisabled\n  }, state, inputRef);\n\n  return (\n    <label\n      {...styleProps}\n      {...hoverProps}\n      ref={domRef}\n      className={\n        classNames(\n          styles,\n          'spectrum-Radio',\n          {\n            // Removing. Pending design feedback.\n            // 'spectrum-Radio--labelBelow': labelPosition === 'bottom',\n            'spectrum-Radio--quiet': !isEmphasized,\n            'is-disabled': isDisabled,\n            'is-invalid': state.isInvalid,\n            'is-hovered': isHovered\n          },\n          styleProps.className\n        )\n      }>\n      <FocusRing focusRingClass={classNames(styles, 'focus-ring')} autoFocus={autoFocus}>\n        <input\n          {...inputProps}\n          ref={inputRef}\n          className={classNames(styles, 'spectrum-Radio-input')} />\n      </FocusRing>\n      <span className={classNames(styles, 'spectrum-Radio-button')} />\n      {children && (\n        <span className={classNames(styles, 'spectrum-Radio-label')}>\n          {children}\n        </span>\n      )}\n    </label>\n  );\n}\n\n/**\n * Radio buttons allow users to select a single option from a list of mutually exclusive options.\n * All possible options are exposed up front for users to compare.\n */\nconst _Radio = forwardRef(Radio);\nexport {_Radio as Radio};\n"],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;AAsBA,SAASA,4BAAMC,KAAyB,EAAEC,GAAmC;EAC3E,IAAI;IAAAC,UAAA,EACFA,UAAU;IAAAC,QAAA,EACVA,QAAQ;IAAAC,SAAA,EACRA,SAAS;IACT,GAAGC;EAAA,CACJ,GAAGL,KAAA;EACJ,IAAI;IAAAM,UAAA,EAACA;EAAU,CAAC,GAAG,IAAAC,oBAAY,EAAEF,UAAA;EACjC,IAAI;IAAAG,UAAA,EAACA,UAAU;IAAAC,SAAA,EAAEA;EAAS,CAAC,GAAG,IAAAC,eAAO,EAAE;gBAACR;EAAU;EAElD,IAAIS,QAAA,GAAW,IAAAC,aAAK,EAAoB;EACxC,IAAIC,MAAA,GAAS,IAAAC,sBAAc,EAAEb,GAAA,EAAKU,QAAA;EAElC,IAAII,eAAA,GAAkB,IAAAC,yCAAe;EACrC,IAAI;IAAAC,YAAA,EACFA,YAAY;IAAAC,KAAA,EACZA;EAAK,CACN,GAAGH,eAAA;EAEJ,IAAI;IAAAI,UAAA,EAACA;EAAU,CAAC,GAAG,IAAAC,eAAO,EAAE;IAC1B,GAAGpB,KAAK;IACR,GAAGe,eAAe;gBAClBb;EACF,GAAGgB,KAAA,EAAOP,QAAA;EAEV,oBACE,IAAAU,YAAA,EAAAC,aAAA,CAAC;IACE,GAAGhB,UAAU;IACb,GAAGE,UAAU;IACdP,GAAA,EAAKY,MAAA;IACLU,SAAA,EACE,IAAAC,iBAAS,GACP,GAAAC,sBAAA,CAAAC,6BAAA,CAAK,GACL,kBACA;MACE;MACA;MACA,yBAAyB,CAACT,YAAA;MAC1B,eAAef,UAAA;MACf,cAAcgB,KAAA,CAAMS,SAAS;MAC7B,cAAclB;IAChB,GACAH,UAAA,CAAWiB,SAAS;kBAGxB,IAAAF,YAAA,EAAAC,aAAA,EAAC,GAAAM,gBAAQ;IAAEC,cAAA,EAAgB,IAAAL,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,6BAAA,CAAK,GAAG;IAAetB,SAAA,EAAWA;kBACtE,IAAAiB,YAAA,EAAAC,aAAA,CAAC;IACE,GAAGH,UAAU;IACdlB,GAAA,EAAKU,QAAA;IACLY,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,6BAAA,CAAK,GAAG;oBAElC,IAAAL,YAAA,EAAAC,aAAA,CAAC;IAAKC,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,6BAAA,CAAK,GAAG;MACnCvB,QAAA,iBACC,IAAAkB,YAAA,EAAAC,aAAA,CAAC;IAAKC,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,6BAAA,CAAK,GAAG;KACjCvB,QAAA;AAKX;AAEA;;;;AAIA,MAAM2B,yCAAA,gBAAS,IAAAC,iBAAS,EAAEhC,2BAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
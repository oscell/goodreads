{"ast":null,"code":"import \"./vars.6caec7fe.css\";\nimport $g8O0d$button_vars_cssmodulejs from \"./button_vars_css.mjs\";\nimport { useFocusableRef as $g8O0d$useFocusableRef, useStyleProps as $g8O0d$useStyleProps, classNames as $g8O0d$classNames } from \"@react-spectrum/utils\";\nimport { FocusRing as $g8O0d$FocusRing } from \"@react-aria/focus\";\nimport { mergeProps as $g8O0d$mergeProps } from \"@react-aria/utils\";\nimport $g8O0d$react from \"react\";\nimport { useButton as $g8O0d$useButton } from \"@react-aria/button\";\nimport { useHover as $g8O0d$useHover } from \"@react-aria/interactions\";\nimport { useProviderProps as $g8O0d$useProviderProps } from \"@react-spectrum/provider\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $45108e3c482ee88b$var$LogicButton(props, ref) {\n  props = (0, $g8O0d$useProviderProps)(props);\n  let {\n    variant: variant,\n    children: children,\n    isDisabled: isDisabled,\n    autoFocus: autoFocus,\n    ...otherProps\n  } = props;\n  let domRef = (0, $g8O0d$useFocusableRef)(ref);\n  let {\n    buttonProps: buttonProps,\n    isPressed: isPressed\n  } = (0, $g8O0d$useButton)(props, domRef);\n  let {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  } = (0, $g8O0d$useHover)({\n    isDisabled: isDisabled\n  });\n  let {\n    styleProps: styleProps\n  } = (0, $g8O0d$useStyleProps)(otherProps);\n  return /*#__PURE__*/(0, $g8O0d$react).createElement((0, $g8O0d$FocusRing), {\n    focusRingClass: (0, $g8O0d$classNames)((0, $parcel$interopDefault($g8O0d$button_vars_cssmodulejs)), 'focus-ring'),\n    autoFocus: autoFocus\n  }, /*#__PURE__*/(0, $g8O0d$react).createElement(\"button\", {\n    ...styleProps,\n    ...(0, $g8O0d$mergeProps)(buttonProps, hoverProps),\n    ref: domRef,\n    className: (0, $g8O0d$classNames)((0, $parcel$interopDefault($g8O0d$button_vars_cssmodulejs)), 'spectrum-LogicButton', {\n      [`spectrum-LogicButton--${variant}`]: variant,\n      'is-disabled': isDisabled,\n      'is-active': isPressed,\n      'is-hovered': isHovered\n    }, styleProps.className)\n  }, /*#__PURE__*/(0, $g8O0d$react).createElement(\"span\", {\n    className: (0, $g8O0d$classNames)((0, $parcel$interopDefault($g8O0d$button_vars_cssmodulejs)), 'spectrum-Button-label')\n  }, children)));\n}\n/**\n * A LogicButton displays an operator within a boolean logic sequence.\n */\nlet $45108e3c482ee88b$export$9b0b80fed00ba8b1 = /*#__PURE__*/(0, $g8O0d$react).forwardRef($45108e3c482ee88b$var$LogicButton);\nexport { $45108e3c482ee88b$export$9b0b80fed00ba8b1 as LogicButton };","map":{"version":3,"names":["$45108e3c482ee88b$var$LogicButton","props","ref","$g8O0d$useProviderProps","variant","children","isDisabled","autoFocus","otherProps","domRef","$g8O0d$useFocusableRef","buttonProps","isPressed","$g8O0d$useButton","hoverProps","isHovered","$g8O0d$useHover","styleProps","$g8O0d$useStyleProps","$g8O0d$react","createElement","$g8O0d$FocusRing","focusRingClass","$g8O0d$classNames","$parcel$interopDefault","$g8O0d$button_vars_cssmodulejs","$g8O0d$mergeProps","className","$45108e3c482ee88b$export$9b0b80fed00ba8b1","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-spectrum/button/dist/packages/@react-spectrum/button/src/LogicButton.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, useFocusableRef, useStyleProps} from '@react-spectrum/utils';\nimport {FocusableRef} from '@react-types/shared';\nimport {FocusRing} from '@react-aria/focus';\nimport {mergeProps} from '@react-aria/utils';\nimport React from 'react';\nimport {SpectrumLogicButtonProps} from '@react-types/button';\nimport styles from '@adobe/spectrum-css-temp/components/button/vars.css';\nimport {useButton} from '@react-aria/button';\nimport {useHover} from '@react-aria/interactions';\nimport {useProviderProps} from '@react-spectrum/provider';\n\nfunction LogicButton(props: SpectrumLogicButtonProps, ref: FocusableRef<HTMLButtonElement>) {\n  props = useProviderProps(props);\n  let {\n    variant,\n    children,\n    isDisabled,\n    autoFocus,\n    ...otherProps\n  } = props;\n  let domRef = useFocusableRef(ref);\n  let {buttonProps, isPressed} = useButton(props, domRef);\n  let {hoverProps, isHovered} = useHover({isDisabled});\n  let {styleProps} = useStyleProps(otherProps);\n\n  return (\n    <FocusRing focusRingClass={classNames(styles, 'focus-ring')} autoFocus={autoFocus}>\n      <button\n        {...styleProps}\n        {...mergeProps(buttonProps, hoverProps)}\n        ref={domRef}\n        className={\n          classNames(\n            styles,\n            'spectrum-LogicButton',\n            {\n              [`spectrum-LogicButton--${variant}`]: variant,\n              'is-disabled': isDisabled,\n              'is-active': isPressed,\n              'is-hovered': isHovered\n            },\n            styleProps.className\n          )\n        }>\n        <span className={classNames(styles, 'spectrum-Button-label')}>{children}</span>\n      </button>\n    </FocusRing>\n  );\n}\n\n/**\n * A LogicButton displays an operator within a boolean logic sequence.\n */\nlet _LogicButton = React.forwardRef(LogicButton);\nexport {_LogicButton as LogicButton};\n"],"mappings":";;;;;;;;;;;;AAAA;;;;;;;;;;;;AAuBA,SAASA,kCAAYC,KAA+B,EAAEC,GAAoC;EACxFD,KAAA,GAAQ,IAAAE,uBAAe,EAAEF,KAAA;EACzB,IAAI;IAAAG,OAAA,EACFA,OAAO;IAAAC,QAAA,EACPA,QAAQ;IAAAC,UAAA,EACRA,UAAU;IAAAC,SAAA,EACVA,SAAS;IACT,GAAGC;EAAA,CACJ,GAAGP,KAAA;EACJ,IAAIQ,MAAA,GAAS,IAAAC,sBAAc,EAAER,GAAA;EAC7B,IAAI;IAAAS,WAAA,EAACA,WAAW;IAAAC,SAAA,EAAEA;EAAS,CAAC,GAAG,IAAAC,gBAAQ,EAAEZ,KAAA,EAAOQ,MAAA;EAChD,IAAI;IAAAK,UAAA,EAACA,UAAU;IAAAC,SAAA,EAAEA;EAAS,CAAC,GAAG,IAAAC,eAAO,EAAE;gBAACV;EAAU;EAClD,IAAI;IAAAW,UAAA,EAACA;EAAU,CAAC,GAAG,IAAAC,oBAAY,EAAEV,UAAA;EAEjC,oBACE,IAAAW,YAAA,EAAAC,aAAA,EAAC,GAAAC,gBAAQ;IAAEC,cAAA,EAAgB,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,8BAAA,CAAK,GAAG;IAAelB,SAAA,EAAWA;kBACtE,IAAAY,YAAA,EAAAC,aAAA,CAAC;IACE,GAAGH,UAAU;IACb,GAAG,IAAAS,iBAAS,EAAEf,WAAA,EAAaG,UAAA,CAAW;IACvCZ,GAAA,EAAKO,MAAA;IACLkB,SAAA,EACE,IAAAJ,iBAAS,GACP,GAAAC,sBAAA,CAAAC,8BAAA,CAAK,GACL,wBACA;MACE,CAAC,yBAAyBrB,OAAA,EAAS,GAAGA,OAAA;MACtC,eAAeE,UAAA;MACf,aAAaM,SAAA;MACb,cAAcG;IAChB,GACAE,UAAA,CAAWU,SAAS;kBAGxB,IAAAR,YAAA,EAAAC,aAAA,CAAC;IAAKO,SAAA,EAAW,IAAAJ,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,8BAAA,CAAK,GAAG;KAA2BpB,QAAA;AAIvE;AAEA;;;AAGA,IAAIuB,yCAAA,gBAAe,IAAAT,YAAI,EAAEU,UAAU,CAAC7B,iCAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */class $23b9f4fcf0fe224b$export$d68d59712b04d9d1 {\n  get childNodes() {\n    throw new Error('childNodes is not supported');\n  }\n  clone() {\n    let node = new $23b9f4fcf0fe224b$export$d68d59712b04d9d1(this.type, this.key);\n    node.value = this.value;\n    node.level = this.level;\n    node.hasChildNodes = this.hasChildNodes;\n    node.rendered = this.rendered;\n    node.textValue = this.textValue;\n    node['aria-label'] = this['aria-label'];\n    node.index = this.index;\n    node.parentKey = this.parentKey;\n    node.prevKey = this.prevKey;\n    node.nextKey = this.nextKey;\n    node.firstChildKey = this.firstChildKey;\n    node.lastChildKey = this.lastChildKey;\n    node.props = this.props;\n    node.render = this.render;\n    return node;\n  }\n  constructor(type, key) {\n    this.value = null;\n    this.level = 0;\n    this.hasChildNodes = false;\n    this.rendered = null;\n    this.textValue = '';\n    this['aria-label'] = undefined;\n    this.index = 0;\n    this.parentKey = null;\n    this.prevKey = null;\n    this.nextKey = null;\n    this.firstChildKey = null;\n    this.lastChildKey = null;\n    this.props = {};\n    this.type = type;\n    this.key = key;\n  }\n}\nclass $23b9f4fcf0fe224b$export$408d25a4e12db025 {\n  get size() {\n    return this.keyMap.size;\n  }\n  getKeys() {\n    return this.keyMap.keys();\n  }\n  *[Symbol.iterator]() {\n    let node = this.firstKey != null ? this.keyMap.get(this.firstKey) : undefined;\n    while (node) {\n      yield node;\n      node = node.nextKey != null ? this.keyMap.get(node.nextKey) : undefined;\n    }\n  }\n  getChildren(key) {\n    let keyMap = this.keyMap;\n    return {\n      *[Symbol.iterator]() {\n        let parent = keyMap.get(key);\n        let node = (parent === null || parent === void 0 ? void 0 : parent.firstChildKey) != null ? keyMap.get(parent.firstChildKey) : null;\n        while (node) {\n          yield node;\n          node = node.nextKey != null ? keyMap.get(node.nextKey) : undefined;\n        }\n      }\n    };\n  }\n  getKeyBefore(key) {\n    let node = this.keyMap.get(key);\n    if (!node) return null;\n    if (node.prevKey != null) {\n      node = this.keyMap.get(node.prevKey);\n      while (node && node.type !== 'item' && node.lastChildKey != null) node = this.keyMap.get(node.lastChildKey);\n      var _node_key;\n      return (_node_key = node === null || node === void 0 ? void 0 : node.key) !== null && _node_key !== void 0 ? _node_key : null;\n    }\n    return node.parentKey;\n  }\n  getKeyAfter(key) {\n    let node = this.keyMap.get(key);\n    if (!node) return null;\n    if (node.type !== 'item' && node.firstChildKey != null) return node.firstChildKey;\n    while (node) {\n      if (node.nextKey != null) return node.nextKey;\n      if (node.parentKey != null) node = this.keyMap.get(node.parentKey);else return null;\n    }\n    return null;\n  }\n  getFirstKey() {\n    return this.firstKey;\n  }\n  getLastKey() {\n    let node = this.lastKey != null ? this.keyMap.get(this.lastKey) : null;\n    while ((node === null || node === void 0 ? void 0 : node.lastChildKey) != null) node = this.keyMap.get(node.lastChildKey);\n    var _node_key;\n    return (_node_key = node === null || node === void 0 ? void 0 : node.key) !== null && _node_key !== void 0 ? _node_key : null;\n  }\n  getItem(key) {\n    var _this_keyMap_get;\n    return (_this_keyMap_get = this.keyMap.get(key)) !== null && _this_keyMap_get !== void 0 ? _this_keyMap_get : null;\n  }\n  at() {\n    throw new Error('Not implemented');\n  }\n  clone() {\n    // We need to clone using this.constructor so that subclasses have the right prototype.\n    // TypeScript isn't happy about this yet.\n    // https://github.com/microsoft/TypeScript/issues/3841\n    let Constructor = this.constructor;\n    let collection = new Constructor();\n    collection.keyMap = new Map(this.keyMap);\n    collection.firstKey = this.firstKey;\n    collection.lastKey = this.lastKey;\n    return collection;\n  }\n  addNode(node) {\n    if (this.frozen) throw new Error('Cannot add a node to a frozen collection');\n    this.keyMap.set(node.key, node);\n  }\n  removeNode(key) {\n    if (this.frozen) throw new Error('Cannot remove a node to a frozen collection');\n    this.keyMap.delete(key);\n  }\n  commit(firstKey, lastKey, isSSR = false) {\n    if (this.frozen) throw new Error('Cannot commit a frozen collection');\n    this.firstKey = firstKey;\n    this.lastKey = lastKey;\n    this.frozen = !isSSR;\n  }\n  constructor() {\n    this.keyMap = new Map();\n    this.firstKey = null;\n    this.lastKey = null;\n    this.frozen = false;\n  }\n}\nexport { $23b9f4fcf0fe224b$export$d68d59712b04d9d1 as CollectionNode, $23b9f4fcf0fe224b$export$408d25a4e12db025 as BaseCollection };","map":{"version":3,"names":["$23b9f4fcf0fe224b$export$d68d59712b04d9d1","childNodes","Error","clone","node","type","key","value","level","hasChildNodes","rendered","textValue","index","parentKey","prevKey","nextKey","firstChildKey","lastChildKey","props","render","constructor","undefined","$23b9f4fcf0fe224b$export$408d25a4e12db025","size","keyMap","getKeys","keys","Symbol","iterator","firstKey","get","getChildren","parent","getKeyBefore","_node_key","getKeyAfter","getFirstKey","getLastKey","lastKey","getItem","_this_keyMap_get","at","Constructor","collection","Map","addNode","frozen","set","removeNode","delete","commit","isSSR"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-aria/collections/dist/packages/@react-aria/collections/src/BaseCollection.ts"],"sourcesContent":["/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection as ICollection, Key, Node} from '@react-types/shared';\nimport {ReactElement, ReactNode} from 'react';\n\nexport type Mutable<T> = {\n  -readonly[P in keyof T]: T[P]\n}\n\n/** An immutable object representing a Node in a Collection. */\nexport class CollectionNode<T> implements Node<T> {\n  readonly type: string;\n  readonly key: Key;\n  readonly value: T | null = null;\n  readonly level: number = 0;\n  readonly hasChildNodes: boolean = false;\n  readonly rendered: ReactNode = null;\n  readonly textValue: string = '';\n  readonly 'aria-label'?: string = undefined;\n  readonly index: number = 0;\n  readonly parentKey: Key | null = null;\n  readonly prevKey: Key | null = null;\n  readonly nextKey: Key | null = null;\n  readonly firstChildKey: Key | null = null;\n  readonly lastChildKey: Key | null = null;\n  readonly props: any = {};\n  readonly render?: (node: Node<any>) => ReactElement;\n\n  constructor(type: string, key: Key) {\n    this.type = type;\n    this.key = key;\n  }\n\n  get childNodes(): Iterable<Node<T>> {\n    throw new Error('childNodes is not supported');\n  }\n\n  clone(): CollectionNode<T> {\n    let node: Mutable<CollectionNode<T>> = new CollectionNode(this.type, this.key);\n    node.value = this.value;\n    node.level = this.level;\n    node.hasChildNodes = this.hasChildNodes;\n    node.rendered = this.rendered;\n    node.textValue = this.textValue;\n    node['aria-label'] = this['aria-label'];\n    node.index = this.index;\n    node.parentKey = this.parentKey;\n    node.prevKey = this.prevKey;\n    node.nextKey = this.nextKey;\n    node.firstChildKey = this.firstChildKey;\n    node.lastChildKey = this.lastChildKey;\n    node.props = this.props;\n    node.render = this.render;\n    return node;\n  }\n}\n\n/**\n * An immutable Collection implementation. Updates are only allowed\n * when it is not marked as frozen. This can be subclassed to implement\n * custom collection behaviors.\n */\nexport class BaseCollection<T> implements ICollection<Node<T>> {\n  private keyMap: Map<Key, CollectionNode<T>> = new Map();\n  private firstKey: Key | null = null;\n  private lastKey: Key | null = null;\n  private frozen = false;\n\n  get size() {\n    return this.keyMap.size;\n  }\n\n  getKeys() {\n    return this.keyMap.keys();\n  }\n\n  *[Symbol.iterator]() {\n    let node: Node<T> | undefined = this.firstKey != null ? this.keyMap.get(this.firstKey) : undefined;\n    while (node) {\n      yield node;\n      node = node.nextKey != null ? this.keyMap.get(node.nextKey) : undefined;\n    }\n  }\n\n  getChildren(key: Key): Iterable<Node<T>> {\n    let keyMap = this.keyMap;\n    return {\n      *[Symbol.iterator]() {\n        let parent = keyMap.get(key);\n        let node = parent?.firstChildKey != null ? keyMap.get(parent.firstChildKey) : null;\n        while (node) {\n          yield node as Node<T>;\n          node = node.nextKey != null ? keyMap.get(node.nextKey) : undefined;\n        }\n      }\n    };\n  }\n\n  getKeyBefore(key: Key) {\n    let node = this.keyMap.get(key);\n    if (!node) {\n      return null;\n    }\n\n    if (node.prevKey != null) {\n      node = this.keyMap.get(node.prevKey);\n\n      while (node && node.type !== 'item' && node.lastChildKey != null) {\n        node = this.keyMap.get(node.lastChildKey);\n      }\n\n      return node?.key ?? null;\n    }\n\n    return node.parentKey;\n  }\n\n  getKeyAfter(key: Key) {\n    let node = this.keyMap.get(key);\n    if (!node) {\n      return null;\n    }\n\n    if (node.type !== 'item' && node.firstChildKey != null) {\n      return node.firstChildKey;\n    }\n\n    while (node) {\n      if (node.nextKey != null) {\n        return node.nextKey;\n      }\n\n      if (node.parentKey != null) {\n        node = this.keyMap.get(node.parentKey);\n      } else {\n        return null;\n      }\n    }\n\n    return null;\n  }\n\n  getFirstKey() {\n    return this.firstKey;\n  }\n\n  getLastKey() {\n    let node = this.lastKey != null ? this.keyMap.get(this.lastKey) : null;\n    while (node?.lastChildKey != null) {\n      node = this.keyMap.get(node.lastChildKey);\n    }\n\n    return node?.key ?? null;\n  }\n\n  getItem(key: Key): Node<T> | null {\n    return this.keyMap.get(key) ?? null;\n  }\n\n  at(): Node<T> {\n    throw new Error('Not implemented');\n  }\n\n  clone(): this {\n    // We need to clone using this.constructor so that subclasses have the right prototype.\n    // TypeScript isn't happy about this yet.\n    // https://github.com/microsoft/TypeScript/issues/3841\n    let Constructor: any = this.constructor;\n    let collection: this = new Constructor();\n    collection.keyMap = new Map(this.keyMap);\n    collection.firstKey = this.firstKey;\n    collection.lastKey = this.lastKey;\n    return collection;\n  }\n\n  addNode(node: CollectionNode<T>) {\n    if (this.frozen) {\n      throw new Error('Cannot add a node to a frozen collection');\n    }\n\n    this.keyMap.set(node.key, node);\n  }\n\n  removeNode(key: Key) {\n    if (this.frozen) {\n      throw new Error('Cannot remove a node to a frozen collection');\n    }\n\n    this.keyMap.delete(key);\n  }\n\n  commit(firstKey: Key | null, lastKey: Key | null, isSSR = false) {\n    if (this.frozen) {\n      throw new Error('Cannot commit a frozen collection');\n    }\n\n    this.firstKey = firstKey;\n    this.lastKey = lastKey;\n    this.frozen = !isSSR;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"./colorfield.43223e3d.css\";\nimport $b4uus$colorfield_cssmodulejs from \"./colorfield_css.mjs\";\nimport { classNames as $b4uus$classNames } from \"@react-spectrum/utils\";\nimport { useContextProps as $b4uus$useContextProps, ColorFieldContext as $b4uus$ColorFieldContext } from \"react-aria-components\";\nimport $b4uus$react, { useRef as $b4uus$useRef } from \"react\";\nimport { TextFieldBase as $b4uus$TextFieldBase } from \"@react-spectrum/textfield\";\nimport { useColorChannelField as $b4uus$useColorChannelField, useColorField as $b4uus$useColorField } from \"@react-aria/color\";\nimport { useColorChannelFieldState as $b4uus$useColorChannelFieldState, useColorFieldState as $b4uus$useColorFieldState } from \"@react-stately/color\";\nimport { useFormProps as $b4uus$useFormProps } from \"@react-spectrum/form\";\nimport { useLocale as $b4uus$useLocale } from \"@react-aria/i18n\";\nimport { useProviderProps as $b4uus$useProviderProps } from \"@react-spectrum/provider\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $0077d47e004328f0$var$ColorField(props, ref) {\n  props = (0, $b4uus$useProviderProps)(props);\n  props = (0, $b4uus$useFormProps)(props);\n  [props] = (0, $b4uus$useContextProps)(props, null, (0, $b4uus$ColorFieldContext));\n  if (props.placeholder) console.warn('Placeholders are deprecated due to accessibility issues. Please use help text instead. See the docs for details: https://react-spectrum.adobe.com/react-spectrum/ColorField.html#help-text');\n  if (props.channel) return /*#__PURE__*/(0, $b4uus$react).createElement($0077d47e004328f0$var$ColorChannelField, {\n    ...props,\n    channel: props.channel,\n    forwardedRef: ref\n  });else return /*#__PURE__*/(0, $b4uus$react).createElement($0077d47e004328f0$var$HexColorField, {\n    ...props,\n    forwardedRef: ref\n  });\n}\n/**\n * A color field allows users to edit a hex color or individual color channel value.\n */\nconst $0077d47e004328f0$export$b865d4358897bb17 = /*#__PURE__*/(0, $b4uus$react).forwardRef($0077d47e004328f0$var$ColorField);\nfunction $0077d47e004328f0$var$ColorChannelField(props) {\n  let {\n    value:\n    // These disabled props are handled by the state hook\n    value,\n    defaultValue: defaultValue,\n    onChange: onChange,\n    validate: validate,\n    forwardedRef: forwardedRef,\n    ...otherProps\n  } = props;\n  let {\n    locale: locale\n  } = (0, $b4uus$useLocale)();\n  let state = (0, $b4uus$useColorChannelFieldState)({\n    ...props,\n    locale: locale\n  });\n  let inputRef = (0, $b4uus$useRef)(null);\n  let result = (0, $b4uus$useColorChannelField)(otherProps, state, inputRef);\n  return /*#__PURE__*/(0, $b4uus$react).createElement((0, $b4uus$react).Fragment, null, /*#__PURE__*/(0, $b4uus$react).createElement((0, $b4uus$TextFieldBase), {\n    ...otherProps,\n    ref: forwardedRef,\n    inputRef: inputRef,\n    ...result,\n    inputClassName: (0, $b4uus$classNames)((0, $parcel$interopDefault($b4uus$colorfield_cssmodulejs)), 'react-spectrum-ColorField-input')\n  }), props.name && /*#__PURE__*/(0, $b4uus$react).createElement(\"input\", {\n    type: \"hidden\",\n    name: props.name,\n    value: isNaN(state.numberValue) ? '' : state.numberValue\n  }));\n}\nfunction $0077d47e004328f0$var$HexColorField(props) {\n  let {\n    value:\n    // These disabled props are handled by the state hook\n    value,\n    defaultValue: defaultValue,\n    onChange: onChange,\n    forwardedRef: forwardedRef,\n    ...otherProps\n  } = props;\n  let state = (0, $b4uus$useColorFieldState)(props);\n  let inputRef = (0, $b4uus$useRef)(null);\n  let result = (0, $b4uus$useColorField)(otherProps, state, inputRef);\n  return /*#__PURE__*/(0, $b4uus$react).createElement((0, $b4uus$TextFieldBase), {\n    ...otherProps,\n    ref: forwardedRef,\n    inputRef: inputRef,\n    ...result,\n    inputClassName: (0, $b4uus$classNames)((0, $parcel$interopDefault($b4uus$colorfield_cssmodulejs)), 'react-spectrum-ColorField-input')\n  });\n}\nexport { $0077d47e004328f0$export$b865d4358897bb17 as ColorField };","map":{"version":3,"names":["$0077d47e004328f0$var$ColorField","props","ref","$b4uus$useProviderProps","$b4uus$useFormProps","$b4uus$useContextProps","$b4uus$ColorFieldContext","placeholder","console","warn","channel","$b4uus$react","createElement","$0077d47e004328f0$var$ColorChannelField","forwardedRef","$0077d47e004328f0$var$HexColorField","$0077d47e004328f0$export$b865d4358897bb17","forwardRef","value","defaultValue","onChange","validate","otherProps","locale","$b4uus$useLocale","state","$b4uus$useColorChannelFieldState","inputRef","$b4uus$useRef","result","$b4uus$useColorChannelField","Fragment","$b4uus$TextFieldBase","inputClassName","$b4uus$classNames","$parcel$interopDefault","$b4uus$colorfield_cssmodulejs","name","type","isNaN","numberValue","$b4uus$useColorFieldState","$b4uus$useColorField"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-spectrum/color/dist/packages/@react-spectrum/color/src/ColorField.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames} from '@react-spectrum/utils';\nimport {ColorChannel, SpectrumColorFieldProps} from '@react-types/color';\nimport {ColorFieldContext, useContextProps} from 'react-aria-components';\nimport React, {Ref, useRef} from 'react';\nimport styles from './colorfield.css';\nimport {TextFieldBase} from '@react-spectrum/textfield';\nimport {TextFieldRef} from '@react-types/textfield';\nimport {useColorChannelField, useColorField} from '@react-aria/color';\nimport {useColorChannelFieldState, useColorFieldState} from '@react-stately/color';\nimport {useFormProps} from '@react-spectrum/form';\nimport {useLocale} from '@react-aria/i18n';\nimport {useProviderProps} from '@react-spectrum/provider';\n\nfunction ColorField(props: SpectrumColorFieldProps, ref: Ref<TextFieldRef>) {\n  props = useProviderProps(props);\n  props = useFormProps(props);\n  [props] = useContextProps(props, null, ColorFieldContext);\n  if (props.placeholder) {\n    console.warn('Placeholders are deprecated due to accessibility issues. Please use help text instead. See the docs for details: https://react-spectrum.adobe.com/react-spectrum/ColorField.html#help-text');\n  }\n\n  if (props.channel) {\n    return <ColorChannelField {...props} channel={props.channel} forwardedRef={ref} />;\n  } else {\n    return <HexColorField {...props} forwardedRef={ref} />;\n  }\n}\n\n/**\n * A color field allows users to edit a hex color or individual color channel value.\n */\nconst _ColorField = React.forwardRef(ColorField);\nexport {_ColorField as ColorField};\n\ninterface ColorChannelFieldProps extends Omit<SpectrumColorFieldProps, 'channel'> {\n  channel: ColorChannel,\n  forwardedRef: Ref<TextFieldRef>\n}\n\nfunction ColorChannelField(props: ColorChannelFieldProps) {\n  let {\n    // These disabled props are handled by the state hook\n    value,          // eslint-disable-line @typescript-eslint/no-unused-vars\n    defaultValue,   // eslint-disable-line @typescript-eslint/no-unused-vars\n    onChange,       // eslint-disable-line @typescript-eslint/no-unused-vars\n    validate,       // eslint-disable-line @typescript-eslint/no-unused-vars\n    forwardedRef,\n    ...otherProps\n  } = props;\n  let {locale} = useLocale();\n  let state = useColorChannelFieldState({\n    ...props,\n    locale\n  });\n\n  let inputRef = useRef<HTMLInputElement & HTMLTextAreaElement>(null);\n  let result = useColorChannelField(otherProps, state, inputRef);\n\n  return (\n    <>\n      <TextFieldBase\n        {...otherProps}\n        ref={forwardedRef}\n        inputRef={inputRef}\n        {...result}\n        inputClassName={classNames(styles, 'react-spectrum-ColorField-input')} />\n      {props.name && <input type=\"hidden\" name={props.name} value={isNaN(state.numberValue) ? '' : state.numberValue} />}\n    </>\n  );\n}\n\ninterface HexColorFieldProps extends SpectrumColorFieldProps {\n  forwardedRef: Ref<TextFieldRef>\n}\n\nfunction HexColorField(props: HexColorFieldProps) {\n  let {\n    // These disabled props are handled by the state hook\n    value,          // eslint-disable-line @typescript-eslint/no-unused-vars\n    defaultValue,   // eslint-disable-line @typescript-eslint/no-unused-vars\n    onChange,       // eslint-disable-line @typescript-eslint/no-unused-vars\n    forwardedRef,\n    ...otherProps\n  } = props;\n  let state = useColorFieldState(props);\n  let inputRef = useRef<HTMLInputElement & HTMLTextAreaElement>(null);\n  let result = useColorField(otherProps, state, inputRef);\n\n  return (\n    <TextFieldBase\n      {...otherProps}\n      ref={forwardedRef}\n      inputRef={inputRef}\n      {...result}\n      inputClassName={classNames(styles, 'react-spectrum-ColorField-input')} />\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;;;;;;;AAyBA,SAASA,iCAAWC,KAA8B,EAAEC,GAAsB;EACxED,KAAA,GAAQ,IAAAE,uBAAe,EAAEF,KAAA;EACzBA,KAAA,GAAQ,IAAAG,mBAAW,EAAEH,KAAA;EACrB,CAACA,KAAA,CAAM,GAAG,IAAAI,sBAAc,EAAEJ,KAAA,EAAO,OAAM,GAAAK,wBAAgB;EACvD,IAAIL,KAAA,CAAMM,WAAW,EACnBC,OAAA,CAAQC,IAAI,CAAC;EAGf,IAAIR,KAAA,CAAMS,OAAO,EACf,oBAAO,IAAAC,YAAA,EAAAC,aAAA,CAACC,uCAAA;IAAmB,GAAGZ,KAAK;IAAES,OAAA,EAAST,KAAA,CAAMS,OAAO;IAAEI,YAAA,EAAcZ;UAE3E,oBAAO,IAAAS,YAAA,EAAAC,aAAA,CAACG,mCAAA;IAAe,GAAGd,KAAK;IAAEa,YAAA,EAAcZ;;AAEnD;AAEA;;;AAGA,MAAMc,yCAAA,gBAAc,IAAAL,YAAI,EAAEM,UAAU,CAACjB,gCAAA;AAQrC,SAASa,wCAAkBZ,KAA6B;EACtD,IAAI;IAAAiB,KAAA;IACF;IACAA,KAAK;IAAAC,YAAA,EACLA,YAAY;IAAAC,QAAA,EACZA,QAAQ;IAAAC,QAAA,EACRA,QAAQ;IAAAP,YAAA,EACRA,YAAY;IACZ,GAAGQ;EAAA,CACJ,GAAGrB,KAAA;EACJ,IAAI;IAAAsB,MAAA,EAACA;EAAM,CAAC,GAAG,IAAAC,gBAAQ;EACvB,IAAIC,KAAA,GAAQ,IAAAC,gCAAwB,EAAE;IACpC,GAAGzB,KAAK;YACRsB;EACF;EAEA,IAAII,QAAA,GAAW,IAAAC,aAAK,EAA0C;EAC9D,IAAIC,MAAA,GAAS,IAAAC,2BAAmB,EAAER,UAAA,EAAYG,KAAA,EAAOE,QAAA;EAErD,oBACE,IAAAhB,YAAA,EAAAC,aAAA,KAAAD,YAAA,EAAAoB,QAAA,qBACE,IAAApB,YAAA,EAAAC,aAAA,EAAC,GAAAoB,oBAAY;IACV,GAAGV,UAAU;IACdpB,GAAA,EAAKY,YAAA;IACLa,QAAA,EAAUA,QAAA;IACT,GAAGE,MAAM;IACVI,cAAA,EAAgB,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,6BAAA,CAAK,GAAG;MACpCnC,KAAA,CAAMoC,IAAI,iBAAI,IAAA1B,YAAA,EAAAC,aAAA,CAAC;IAAM0B,IAAA,EAAK;IAASD,IAAA,EAAMpC,KAAA,CAAMoC,IAAI;IAAEnB,KAAA,EAAOqB,KAAA,CAAMd,KAAA,CAAMe,WAAW,IAAI,KAAKf,KAAA,CAAMe;;AAGzG;AAMA,SAASzB,oCAAcd,KAAyB;EAC9C,IAAI;IAAAiB,KAAA;IACF;IACAA,KAAK;IAAAC,YAAA,EACLA,YAAY;IAAAC,QAAA,EACZA,QAAQ;IAAAN,YAAA,EACRA,YAAY;IACZ,GAAGQ;EAAA,CACJ,GAAGrB,KAAA;EACJ,IAAIwB,KAAA,GAAQ,IAAAgB,yBAAiB,EAAExC,KAAA;EAC/B,IAAI0B,QAAA,GAAW,IAAAC,aAAK,EAA0C;EAC9D,IAAIC,MAAA,GAAS,IAAAa,oBAAY,EAAEpB,UAAA,EAAYG,KAAA,EAAOE,QAAA;EAE9C,oBACE,IAAAhB,YAAA,EAAAC,aAAA,EAAC,GAAAoB,oBAAY;IACV,GAAGV,UAAU;IACdpB,GAAA,EAAKY,YAAA;IACLa,QAAA,EAAUA,QAAA;IACT,GAAGE,MAAM;IACVI,cAAA,EAAgB,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,6BAAA,CAAK,GAAG;;AAEzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
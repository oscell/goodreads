{"ast":null,"code":"import { createFocusManager as $k3LOe$createFocusManager } from \"@react-aria/focus\";\nimport { useState as $k3LOe$useState, useRef as $k3LOe$useRef } from \"react\";\nimport { useLayoutEffect as $k3LOe$useLayoutEffect } from \"@react-aria/utils\";\nimport { useLocale as $k3LOe$useLocale } from \"@react-aria/i18n\";\n\n/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $2680b1829e803644$export$fa142eb1681c520(props, ref) {\n  const {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    orientation = 'horizontal'\n  } = props;\n  let [isInToolbar, setInToolbar] = (0, $k3LOe$useState)(false);\n  // should be safe because re-calling set state with the same value it already has is a no-op\n  // this will allow us to react should a parent re-render and change its role though\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  (0, $k3LOe$useLayoutEffect)(() => {\n    var _ref_current_parentElement;\n    setInToolbar(!!(ref.current && ((_ref_current_parentElement = ref.current.parentElement) === null || _ref_current_parentElement === void 0 ? void 0 : _ref_current_parentElement.closest('[role=\"toolbar\"]'))));\n  });\n  const {\n    direction: direction\n  } = (0, $k3LOe$useLocale)();\n  const shouldReverse = direction === 'rtl' && orientation === 'horizontal';\n  let focusManager = (0, $k3LOe$createFocusManager)(ref);\n  const onKeyDown = e => {\n    // don't handle portalled events\n    if (!e.currentTarget.contains(e.target)) return;\n    if (orientation === 'horizontal' && e.key === 'ArrowRight' || orientation === 'vertical' && e.key === 'ArrowDown') {\n      if (shouldReverse) focusManager.focusPrevious();else focusManager.focusNext();\n    } else if (orientation === 'horizontal' && e.key === 'ArrowLeft' || orientation === 'vertical' && e.key === 'ArrowUp') {\n      if (shouldReverse) focusManager.focusNext();else focusManager.focusPrevious();\n    } else if (e.key === 'Tab') {\n      // When the tab key is pressed, we want to move focus\n      // out of the entire toolbar. To do this, move focus\n      // to the first or last focusable child, and let the\n      // browser handle the Tab key as usual from there.\n      e.stopPropagation();\n      lastFocused.current = document.activeElement;\n      if (e.shiftKey) focusManager.focusFirst();else focusManager.focusLast();\n      return;\n    } else\n      // if we didn't handle anything, return early so we don't preventDefault\n      return;\n    // Prevent arrow keys from being handled by nested action groups.\n    e.stopPropagation();\n    e.preventDefault();\n  };\n  // Record the last focused child when focus moves out of the toolbar.\n  const lastFocused = (0, $k3LOe$useRef)(null);\n  const onBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget) && !lastFocused.current) lastFocused.current = e.target;\n  };\n  // Restore focus to the last focused child when focus returns into the toolbar.\n  // If the element was removed, do nothing, either the first item in the first group,\n  // or the last item in the last group will be focused, depending on direction.\n  const onFocus = e => {\n    var _ref_current;\n    if (lastFocused.current && !e.currentTarget.contains(e.relatedTarget) && ((_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.contains(e.target))) {\n      var _lastFocused_current;\n      (_lastFocused_current = lastFocused.current) === null || _lastFocused_current === void 0 ? void 0 : _lastFocused_current.focus();\n      lastFocused.current = null;\n    }\n  };\n  return {\n    toolbarProps: {\n      role: !isInToolbar ? 'toolbar' : 'group',\n      'aria-orientation': orientation,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabel == null ? ariaLabelledBy : undefined,\n      onKeyDownCapture: !isInToolbar ? onKeyDown : undefined,\n      onFocusCapture: !isInToolbar ? onFocus : undefined,\n      onBlurCapture: !isInToolbar ? onBlur : undefined\n    }\n  };\n}\nexport { $2680b1829e803644$export$fa142eb1681c520 as useToolbar };","map":{"version":3,"names":["$2680b1829e803644$export$fa142eb1681c520","props","ref","ariaLabel","ariaLabelledBy","orientation","isInToolbar","setInToolbar","$k3LOe$useState","$k3LOe$useLayoutEffect","_ref_current_parentElement","current","parentElement","closest","direction","$k3LOe$useLocale","shouldReverse","focusManager","$k3LOe$createFocusManager","onKeyDown","e","currentTarget","contains","target","key","focusPrevious","focusNext","stopPropagation","lastFocused","document","activeElement","shiftKey","focusFirst","focusLast","preventDefault","$k3LOe$useRef","onBlur","relatedTarget","onFocus","_ref_current","_lastFocused_current","focus","toolbarProps","role","undefined","onKeyDownCapture","onFocusCapture","onBlurCapture"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-aria/toolbar/dist/packages/@react-aria/toolbar/src/useToolbar.ts"],"sourcesContent":["/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, Orientation, RefObject} from '@react-types/shared';\nimport {createFocusManager} from '@react-aria/focus';\nimport {HTMLAttributes, KeyboardEventHandler, useRef, useState} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\nimport {useLocale} from '@react-aria/i18n';\n\nexport interface AriaToolbarProps extends AriaLabelingProps {\n  /**\n   * The orientation of the entire toolbar.\n   * @default 'horizontal'\n   */\n  orientation?: Orientation\n}\n\nexport interface ToolbarAria {\n  /**\n   * Props for the toolbar container.\n   */\n  toolbarProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a toolbar.\n * A toolbar is a container for a set of interactive controls with arrow key navigation.\n * @param props - Props to be applied to the toolbar.\n * @param ref - A ref to a DOM element for the toolbar.\n */\nexport function useToolbar(props: AriaToolbarProps, ref: RefObject<HTMLDivElement | null>): ToolbarAria {\n  const {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    orientation = 'horizontal'\n  } = props;\n  let [isInToolbar, setInToolbar] = useState(false);\n  // should be safe because re-calling set state with the same value it already has is a no-op\n  // this will allow us to react should a parent re-render and change its role though\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useLayoutEffect(() => {\n    setInToolbar(!!(ref.current && ref.current.parentElement?.closest('[role=\"toolbar\"]')));\n  });\n  const {direction} = useLocale();\n  const shouldReverse = direction === 'rtl' && orientation === 'horizontal';\n  let focusManager = createFocusManager(ref);\n\n  const onKeyDown: KeyboardEventHandler = (e) => {\n    // don't handle portalled events\n    if (!e.currentTarget.contains(e.target as HTMLElement)) {\n      return;\n    }\n    if (\n      (orientation === 'horizontal' && e.key === 'ArrowRight')\n      || (orientation === 'vertical' && e.key === 'ArrowDown')) {\n      if (shouldReverse) {\n        focusManager.focusPrevious();\n      } else {\n        focusManager.focusNext();\n      }\n    } else if (\n      (orientation === 'horizontal' && e.key === 'ArrowLeft')\n      || (orientation === 'vertical' && e.key === 'ArrowUp')) {\n      if (shouldReverse) {\n        focusManager.focusNext();\n      } else {\n        focusManager.focusPrevious();\n      }\n    } else if (e.key === 'Tab') {\n      // When the tab key is pressed, we want to move focus\n      // out of the entire toolbar. To do this, move focus\n      // to the first or last focusable child, and let the\n      // browser handle the Tab key as usual from there.\n      e.stopPropagation();\n      lastFocused.current = document.activeElement as HTMLElement;\n      if (e.shiftKey) {\n        focusManager.focusFirst();\n      } else {\n        focusManager.focusLast();\n      }\n      return;\n    } else {\n      // if we didn't handle anything, return early so we don't preventDefault\n      return;\n    }\n\n    // Prevent arrow keys from being handled by nested action groups.\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  // Record the last focused child when focus moves out of the toolbar.\n  const lastFocused = useRef<HTMLElement | null>(null);\n  const onBlur = (e) => {\n    if (!e.currentTarget.contains(e.relatedTarget) && !lastFocused.current) {\n      lastFocused.current = e.target;\n    }\n  };\n\n  // Restore focus to the last focused child when focus returns into the toolbar.\n  // If the element was removed, do nothing, either the first item in the first group,\n  // or the last item in the last group will be focused, depending on direction.\n  const onFocus = (e) => {\n    if (lastFocused.current && !e.currentTarget.contains(e.relatedTarget) && ref.current?.contains(e.target)) {\n      lastFocused.current?.focus();\n      lastFocused.current = null;\n    }\n  };\n\n  return {\n    toolbarProps: {\n      role: !isInToolbar ? 'toolbar' : 'group',\n      'aria-orientation': orientation,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabel == null ? ariaLabelledBy : undefined,\n      onKeyDownCapture: !isInToolbar ? onKeyDown : undefined,\n      onFocusCapture: !isInToolbar ? onFocus : undefined,\n      onBlurCapture: !isInToolbar ? onBlur : undefined\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"./vars.0949d1ae.css\";\nimport $63Ecs$slider_vars_cssmodulejs from \"./slider_vars_css.mjs\";\nimport { useStyleProps as $63Ecs$useStyleProps, useFocusableRef as $63Ecs$useFocusableRef, classNames as $63Ecs$classNames, SlotProvider as $63Ecs$SlotProvider } from \"@react-spectrum/utils\";\nimport $63Ecs$react, { useRef as $63Ecs$useRef } from \"react\";\nimport { useSliderState as $63Ecs$useSliderState } from \"@react-stately/slider\";\nimport { useNumberFormatter as $63Ecs$useNumberFormatter } from \"@react-aria/i18n\";\nimport { useProviderProps as $63Ecs$useProviderProps } from \"@react-spectrum/provider\";\nimport { useSlider as $63Ecs$useSlider } from \"@react-aria/slider\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $39572711324a3b8e$var$SliderBase(props, ref) {\n  props = (0, $63Ecs$useProviderProps)(props);\n  let {\n    isDisabled: isDisabled,\n    children: children,\n    classes: classes,\n    style: style,\n    labelPosition = 'top',\n    getValueLabel: getValueLabel,\n    showValueLabel = !!props.label,\n    formatOptions: formatOptions,\n    minValue = 0,\n    maxValue = 100,\n    ...otherProps\n  } = props;\n  let {\n    styleProps: styleProps\n  } = (0, $63Ecs$useStyleProps)(otherProps);\n  // `Math.abs(Math.sign(a) - Math.sign(b)) === 2` is true if the values have a different sign.\n  let alwaysDisplaySign = Math.abs(Math.sign(minValue) - Math.sign(maxValue)) === 2;\n  if (alwaysDisplaySign) {\n    if (formatOptions != null) {\n      if (!('signDisplay' in formatOptions)) formatOptions = {\n        ...formatOptions,\n        // @ts-ignore\n        signDisplay: 'exceptZero'\n      };\n    } else\n      // @ts-ignore\n      formatOptions = {\n        signDisplay: 'exceptZero'\n      };\n  }\n  const formatter = (0, $63Ecs$useNumberFormatter)(formatOptions);\n  const state = (0, $63Ecs$useSliderState)({\n    ...props,\n    numberFormatter: formatter,\n    minValue: minValue,\n    maxValue: maxValue\n  });\n  let trackRef = (0, $63Ecs$useRef)(undefined);\n  let {\n    groupProps: groupProps,\n    trackProps: trackProps,\n    labelProps: labelProps,\n    outputProps: outputProps\n  } = (0, $63Ecs$useSlider)(props, state, trackRef);\n  let inputRef = (0, $63Ecs$useRef)(undefined);\n  let domRef = (0, $63Ecs$useFocusableRef)(ref, inputRef);\n  let displayValue = '';\n  let maxLabelLength = undefined;\n  if (typeof getValueLabel === 'function') {\n    displayValue = getValueLabel(state.values);\n    switch (state.values.length) {\n      case 1:\n        maxLabelLength = Math.max(getValueLabel([minValue]).length, getValueLabel([maxValue]).length);\n        break;\n      case 2:\n        // Try all possible combinations of min and max values.\n        maxLabelLength = Math.max(getValueLabel([minValue, minValue]).length, getValueLabel([minValue, maxValue]).length, getValueLabel([maxValue, minValue]).length, getValueLabel([maxValue, maxValue]).length);\n        break;\n      default:\n        throw new Error('Only sliders with 1 or 2 handles are supported!');\n    }\n  } else {\n    maxLabelLength = Math.max([...formatter.format(minValue)].length, [...formatter.format(maxValue)].length);\n    switch (state.values.length) {\n      case 1:\n        displayValue = state.getThumbValueLabel(0);\n        break;\n      case 2:\n        // This should really use the NumberFormat#formatRange proposal...\n        // https://github.com/tc39/ecma402/issues/393\n        // https://github.com/tc39/proposal-intl-numberformat-v3#formatrange-ecma-402-393\n        displayValue = `${state.getThumbValueLabel(0)} \\u{2013} ${state.getThumbValueLabel(1)}`;\n        maxLabelLength = 3 + 2 * Math.max(maxLabelLength, [...formatter.format(minValue)].length, [...formatter.format(maxValue)].length);\n        break;\n      default:\n        throw new Error('Only sliders with 1 or 2 handles are supported!');\n    }\n  }\n  let labelNode = /*#__PURE__*/(0, $63Ecs$react).createElement(\"label\", {\n    className: (0, $63Ecs$classNames)((0, $parcel$interopDefault($63Ecs$slider_vars_cssmodulejs)), 'spectrum-Slider-label'),\n    ...labelProps\n  }, props.label);\n  let valueNode = /*#__PURE__*/(0, $63Ecs$react).createElement(\"output\", {\n    ...outputProps,\n    className: (0, $63Ecs$classNames)((0, $parcel$interopDefault($63Ecs$slider_vars_cssmodulejs)), 'spectrum-Slider-value'),\n    style: maxLabelLength && {\n      width: `${maxLabelLength}ch`,\n      minWidth: `${maxLabelLength}ch`\n    }\n  }, displayValue);\n  return /*#__PURE__*/(0, $63Ecs$react).createElement(\"div\", {\n    ref: domRef,\n    className: (0, $63Ecs$classNames)((0, $parcel$interopDefault($63Ecs$slider_vars_cssmodulejs)), 'spectrum-Slider', {\n      'spectrum-Slider--positionTop': labelPosition === 'top',\n      'spectrum-Slider--positionSide': labelPosition === 'side',\n      'is-disabled': isDisabled\n    }, classes, styleProps.className),\n    style: {\n      ...style,\n      ...styleProps.style\n    },\n    ...groupProps\n  }, props.label && /*#__PURE__*/(0, $63Ecs$react).createElement(\"div\", {\n    className: (0, $63Ecs$classNames)((0, $parcel$interopDefault($63Ecs$slider_vars_cssmodulejs)), 'spectrum-Slider-labelContainer'),\n    role: \"presentation\"\n  }, props.label && labelNode, props.contextualHelp && /*#__PURE__*/(0, $63Ecs$react).createElement((0, $63Ecs$SlotProvider), {\n    slots: {\n      actionButton: {\n        UNSAFE_className: (0, $63Ecs$classNames)((0, $parcel$interopDefault($63Ecs$slider_vars_cssmodulejs)), 'spectrum-Slider-contextualHelp')\n      }\n    }\n  }, props.contextualHelp), labelPosition === 'top' && showValueLabel && valueNode), /*#__PURE__*/(0, $63Ecs$react).createElement(\"div\", {\n    className: (0, $63Ecs$classNames)((0, $parcel$interopDefault($63Ecs$slider_vars_cssmodulejs)), 'spectrum-Slider-controls'),\n    ref: trackRef,\n    ...trackProps,\n    role: \"presentation\"\n  }, children({\n    trackRef: trackRef,\n    inputRef: inputRef,\n    state: state\n  })), labelPosition === 'side' && /*#__PURE__*/(0, $63Ecs$react).createElement(\"div\", {\n    className: (0, $63Ecs$classNames)((0, $parcel$interopDefault($63Ecs$slider_vars_cssmodulejs)), 'spectrum-Slider-valueLabelContainer'),\n    role: \"presentation\"\n  }, showValueLabel && valueNode));\n}\nconst $39572711324a3b8e$export$9418495bb635ebde = /*#__PURE__*/(0, $63Ecs$react).forwardRef($39572711324a3b8e$var$SliderBase);\nexport { $39572711324a3b8e$export$9418495bb635ebde as SliderBase };","map":{"version":3,"names":["$39572711324a3b8e$var$SliderBase","props","ref","$63Ecs$useProviderProps","isDisabled","children","classes","style","labelPosition","getValueLabel","showValueLabel","label","formatOptions","minValue","maxValue","otherProps","styleProps","$63Ecs$useStyleProps","alwaysDisplaySign","Math","abs","sign","signDisplay","formatter","$63Ecs$useNumberFormatter","state","$63Ecs$useSliderState","numberFormatter","trackRef","$63Ecs$useRef","undefined","groupProps","trackProps","labelProps","outputProps","$63Ecs$useSlider","inputRef","domRef","$63Ecs$useFocusableRef","displayValue","maxLabelLength","values","length","max","Error","format","getThumbValueLabel","labelNode","$63Ecs$react","createElement","className","$63Ecs$classNames","$parcel$interopDefault","$63Ecs$slider_vars_cssmodulejs","valueNode","width","minWidth","role","contextualHelp","$63Ecs$SlotProvider","slots","actionButton","UNSAFE_className","$39572711324a3b8e$export$9418495bb635ebde","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-spectrum/slider/dist/packages/@react-spectrum/slider/src/SliderBase.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, SlotProvider, useFocusableRef, useStyleProps} from '@react-spectrum/utils';\nimport {FocusableRef, RefObject} from '@react-types/shared';\nimport React, {CSSProperties, ReactNode, useRef} from 'react';\nimport {SliderState, useSliderState} from '@react-stately/slider';\nimport {SpectrumBarSliderBase} from '@react-types/slider';\nimport styles from '@adobe/spectrum-css-temp/components/slider/vars.css';\nimport {useNumberFormatter} from '@react-aria/i18n';\nimport {useProviderProps} from '@react-spectrum/provider';\nimport {useSlider} from '@react-aria/slider';\n\nexport interface SliderBaseChildArguments {\n  inputRef: RefObject<HTMLInputElement | null>,\n  trackRef: RefObject<HTMLElement | null>,\n  state: SliderState\n}\n\nexport interface SliderBaseProps<T = number[]> extends SpectrumBarSliderBase<T> {\n  children: (opts: SliderBaseChildArguments) => ReactNode,\n  classes?: string[] | Object,\n  style?: CSSProperties\n}\n\nfunction SliderBase(props: SliderBaseProps, ref: FocusableRef<HTMLDivElement>) {\n  props = useProviderProps(props);\n  let {\n    isDisabled,\n    children,\n    classes,\n    style,\n    labelPosition = 'top',\n    getValueLabel,\n    showValueLabel = !!props.label,\n    formatOptions,\n    minValue = 0,\n    maxValue = 100,\n    ...otherProps\n  } = props;\n\n  let {styleProps} = useStyleProps(otherProps);\n\n  // `Math.abs(Math.sign(a) - Math.sign(b)) === 2` is true if the values have a different sign.\n  let alwaysDisplaySign = Math.abs(Math.sign(minValue) - Math.sign(maxValue)) === 2;\n  if (alwaysDisplaySign) {\n    if (formatOptions != null) {\n      if (!('signDisplay' in formatOptions)) {\n        formatOptions = {\n          ...formatOptions,\n          // @ts-ignore\n          signDisplay: 'exceptZero'\n        };\n      }\n    } else {\n      // @ts-ignore\n      formatOptions = {signDisplay: 'exceptZero'};\n    }\n  }\n\n  const formatter = useNumberFormatter(formatOptions);\n  const state = useSliderState({\n    ...props,\n    numberFormatter: formatter,\n    minValue,\n    maxValue\n  });\n  let trackRef = useRef(undefined);\n  let {\n    groupProps,\n    trackProps,\n    labelProps,\n    outputProps\n  } = useSlider(props, state, trackRef);\n\n  let inputRef = useRef(undefined);\n  let domRef = useFocusableRef(ref, inputRef);\n\n  let displayValue = '';\n  let maxLabelLength = undefined;\n\n  if (typeof getValueLabel === 'function') {\n    displayValue = getValueLabel(state.values);\n    switch (state.values.length) {\n      case 1:\n        maxLabelLength = Math.max(\n          getValueLabel([minValue]).length,\n          getValueLabel([maxValue]).length\n        );\n        break;\n      case 2:\n        // Try all possible combinations of min and max values.\n        maxLabelLength = Math.max(\n          getValueLabel([minValue, minValue]).length,\n          getValueLabel([minValue, maxValue]).length,\n          getValueLabel([maxValue, minValue]).length,\n          getValueLabel([maxValue, maxValue]).length\n        );\n        break;\n      default:\n        throw new Error('Only sliders with 1 or 2 handles are supported!');\n    }\n  } else {\n    maxLabelLength = Math.max([...formatter.format(minValue)].length, [...formatter.format(maxValue)].length);\n    switch (state.values.length) {\n      case 1:\n        displayValue = state.getThumbValueLabel(0);\n        break;\n      case 2:\n        // This should really use the NumberFormat#formatRange proposal...\n        // https://github.com/tc39/ecma402/issues/393\n        // https://github.com/tc39/proposal-intl-numberformat-v3#formatrange-ecma-402-393\n        displayValue = `${state.getThumbValueLabel(0)} – ${state.getThumbValueLabel(1)}`;\n        maxLabelLength = 3 + 2 * Math.max(\n          maxLabelLength,\n          [...formatter.format(minValue)].length, [...formatter.format(maxValue)].length\n        );\n        break;\n      default:\n        throw new Error('Only sliders with 1 or 2 handles are supported!');\n    }\n  }\n\n  let labelNode = (\n    <label\n      className={classNames(styles, 'spectrum-Slider-label')}\n      {...labelProps}>\n      {props.label}\n    </label>\n  );\n\n  let valueNode = (\n    <output\n      {...outputProps}\n      className={classNames(styles, 'spectrum-Slider-value')}\n      style={maxLabelLength && {width: `${maxLabelLength}ch`, minWidth: `${maxLabelLength}ch`}}>\n      {displayValue}\n    </output>\n  );\n\n  return (\n    <div\n      ref={domRef}\n      className={classNames(styles,\n        'spectrum-Slider',\n        {\n          'spectrum-Slider--positionTop': labelPosition === 'top',\n          'spectrum-Slider--positionSide': labelPosition === 'side',\n          'is-disabled': isDisabled\n        },\n        classes,\n        styleProps.className)}\n      style={{\n        ...style,\n        ...styleProps.style\n      }}\n      {...groupProps}>\n      {(props.label) &&\n        <div className={classNames(styles, 'spectrum-Slider-labelContainer')} role=\"presentation\">\n          {props.label && labelNode}\n          {props.contextualHelp &&\n            <SlotProvider\n              slots={{\n                actionButton: {\n                  UNSAFE_className: classNames(styles, 'spectrum-Slider-contextualHelp')\n                }\n              }}>\n              {props.contextualHelp}\n            </SlotProvider>\n          }\n          {labelPosition === 'top' && showValueLabel && valueNode}\n        </div>\n      }\n      <div className={classNames(styles, 'spectrum-Slider-controls')} ref={trackRef} {...trackProps} role=\"presentation\">\n        {children({\n          trackRef,\n          inputRef,\n          state\n        })}\n      </div>\n      {labelPosition === 'side' &&\n        <div className={classNames(styles, 'spectrum-Slider-valueLabelContainer')} role=\"presentation\">\n          {showValueLabel && valueNode}\n        </div>\n      }\n    </div>\n  );\n}\n\nconst _SliderBase = React.forwardRef(SliderBase);\nexport {_SliderBase as SliderBase};\n"],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;AAkCA,SAASA,iCAAWC,KAAsB,EAAEC,GAAiC;EAC3ED,KAAA,GAAQ,IAAAE,uBAAe,EAAEF,KAAA;EACzB,IAAI;IAAAG,UAAA,EACFA,UAAU;IAAAC,QAAA,EACVA,QAAQ;IAAAC,OAAA,EACRA,OAAO;IAAAC,KAAA,EACPA,KAAK;IACLC,aAAA,GAAgB;IAAAC,aAAA,EAChBA,aAAa;IACbC,cAAA,GAAiB,CAAC,CAACT,KAAA,CAAMU,KAAK;IAAAC,aAAA,EAC9BA,aAAa;IACbC,QAAA,GAAW;IACXC,QAAA,GAAW;IACX,GAAGC;EAAA,CACJ,GAAGd,KAAA;EAEJ,IAAI;IAAAe,UAAA,EAACA;EAAU,CAAC,GAAG,IAAAC,oBAAY,EAAEF,UAAA;EAEjC;EACA,IAAIG,iBAAA,GAAoBC,IAAA,CAAKC,GAAG,CAACD,IAAA,CAAKE,IAAI,CAACR,QAAA,IAAYM,IAAA,CAAKE,IAAI,CAACP,QAAA,OAAe;EAChF,IAAII,iBAAA,EAAmB;IACrB,IAAIN,aAAA,IAAiB,MACnB;MAAA,IAAI,EAAE,iBAAiBA,aAAY,GACjCA,aAAA,GAAgB;QACd,GAAGA,aAAa;QAChB;QACAU,WAAA,EAAa;MACf;IACF;MAEA;MACAV,aAAA,GAAgB;QAACU,WAAA,EAAa;MAAY;EAE9C;EAEA,MAAMC,SAAA,GAAY,IAAAC,yBAAiB,EAAEZ,aAAA;EACrC,MAAMa,KAAA,GAAQ,IAAAC,qBAAa,EAAE;IAC3B,GAAGzB,KAAK;IACR0B,eAAA,EAAiBJ,SAAA;cACjBV,QAAA;cACAC;EACF;EACA,IAAIc,QAAA,GAAW,IAAAC,aAAK,EAAEC,SAAA;EACtB,IAAI;IAAAC,UAAA,EACFA,UAAU;IAAAC,UAAA,EACVA,UAAU;IAAAC,UAAA,EACVA,UAAU;IAAAC,WAAA,EACVA;EAAW,CACZ,GAAG,IAAAC,gBAAQ,EAAElC,KAAA,EAAOwB,KAAA,EAAOG,QAAA;EAE5B,IAAIQ,QAAA,GAAW,IAAAP,aAAK,EAAEC,SAAA;EACtB,IAAIO,MAAA,GAAS,IAAAC,sBAAc,EAAEpC,GAAA,EAAKkC,QAAA;EAElC,IAAIG,YAAA,GAAe;EACnB,IAAIC,cAAA,GAAiBV,SAAA;EAErB,IAAI,OAAOrB,aAAA,KAAkB,YAAY;IACvC8B,YAAA,GAAe9B,aAAA,CAAcgB,KAAA,CAAMgB,MAAM;IACzC,QAAQhB,KAAA,CAAMgB,MAAM,CAACC,MAAM;MACzB,KAAK;QACHF,cAAA,GAAiBrB,IAAA,CAAKwB,GAAG,CACvBlC,aAAA,CAAc,CAACI,QAAA,CAAS,EAAE6B,MAAM,EAChCjC,aAAA,CAAc,CAACK,QAAA,CAAS,EAAE4B,MAAM;QAElC;MACF,KAAK;QACH;QACAF,cAAA,GAAiBrB,IAAA,CAAKwB,GAAG,CACvBlC,aAAA,CAAc,CAACI,QAAA,EAAUA,QAAA,CAAS,EAAE6B,MAAM,EAC1CjC,aAAA,CAAc,CAACI,QAAA,EAAUC,QAAA,CAAS,EAAE4B,MAAM,EAC1CjC,aAAA,CAAc,CAACK,QAAA,EAAUD,QAAA,CAAS,EAAE6B,MAAM,EAC1CjC,aAAA,CAAc,CAACK,QAAA,EAAUA,QAAA,CAAS,EAAE4B,MAAM;QAE5C;MACF;QACE,MAAM,IAAIE,KAAA,CAAM;IACpB;EACF,OAAO;IACLJ,cAAA,GAAiBrB,IAAA,CAAKwB,GAAG,CAAC,C,GAAIpB,SAAA,CAAUsB,MAAM,CAAChC,QAAA,EAAU,CAAC6B,MAAM,EAAE,C,GAAInB,SAAA,CAAUsB,MAAM,CAAC/B,QAAA,EAAU,CAAC4B,MAAM;IACxG,QAAQjB,KAAA,CAAMgB,MAAM,CAACC,MAAM;MACzB,KAAK;QACHH,YAAA,GAAed,KAAA,CAAMqB,kBAAkB,CAAC;QACxC;MACF,KAAK;QACH;QACA;QACA;QACAP,YAAA,GAAe,GAAGd,KAAA,CAAMqB,kBAAkB,CAAC,eAAQrB,KAAA,CAAMqB,kBAAkB,CAAC,IAAI;QAChFN,cAAA,GAAiB,IAAI,IAAIrB,IAAA,CAAKwB,GAAG,CAC/BH,cAAA,EACA,C,GAAIjB,SAAA,CAAUsB,MAAM,CAAChC,QAAA,EAAU,CAAC6B,MAAM,EAAE,C,GAAInB,SAAA,CAAUsB,MAAM,CAAC/B,QAAA,EAAU,CAAC4B,MAAM;QAEhF;MACF;QACE,MAAM,IAAIE,KAAA,CAAM;IACpB;EACF;EAEA,IAAIG,SAAA,gBACF,IAAAC,YAAA,EAAAC,aAAA,CAAC;IACCC,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,8BAAA,CAAK,GAAG;IAC7B,GAAGpB;KACHhC,KAAA,CAAMU,KAAK;EAIhB,IAAI2C,SAAA,gBACF,IAAAN,YAAA,EAAAC,aAAA,CAAC;IACE,GAAGf,WAAW;IACfgB,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,8BAAA,CAAK,GAAG;IAC9B9C,KAAA,EAAOiC,cAAA,IAAkB;MAACe,KAAA,EAAO,GAAGf,cAAA,IAAkB;MAAEgB,QAAA,EAAU,GAAGhB,cAAA;IAAkB;KACtFD,YAAA;EAIL,oBACE,IAAAS,YAAA,EAAAC,aAAA,CAAC;IACC/C,GAAA,EAAKmC,MAAA;IACLa,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,8BAAA,CAAK,GACzB,mBACA;MACE,gCAAgC7C,aAAA,KAAkB;MAClD,iCAAiCA,aAAA,KAAkB;MACnD,eAAeJ;IACjB,GACAE,OAAA,EACAU,UAAA,CAAWkC,SAAS;IACtB3C,KAAA,EAAO;MACL,GAAGA,KAAK;MACR,GAAGS,UAAA,CAAWT;IAChB;IACC,GAAGwB;KACH9B,KAAC,CAAMU,KAAK,iBACX,IAAAqC,YAAA,EAAAC,aAAA,CAAC;IAAIC,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,8BAAA,CAAK,GAAG;IAAmCI,IAAA,EAAK;KACxExD,KAAA,CAAMU,KAAK,IAAIoC,SAAA,EACf9C,KAAA,CAAMyD,cAAc,iBACnB,IAAAV,YAAA,EAAAC,aAAA,EAAC,GAAAU,mBAAW;IACVC,KAAA,EAAO;MACLC,YAAA,EAAc;QACZC,gBAAA,EAAkB,IAAAX,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,8BAAA,CAAK,GAAG;MACvC;IACF;KACCpD,KAAA,CAAMyD,cAAc,GAGxBlD,aAAA,KAAkB,SAASE,cAAA,IAAkB4C,SAAA,gBAGlD,IAAAN,YAAA,EAAAC,aAAA,CAAC;IAAIC,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,8BAAA,CAAK,GAAG;IAA6BnD,GAAA,EAAK0B,QAAA;IAAW,GAAGI,UAAU;IAAEyB,IAAA,EAAK;KACjGpD,QAAA,CAAS;cACRuB,QAAA;cACAQ,QAAA;WACAX;EACF,KAEDjB,aAAA,KAAkB,uBACjB,IAAAwC,YAAA,EAAAC,aAAA,CAAC;IAAIC,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,8BAAA,CAAK,GAAG;IAAwCI,IAAA,EAAK;KAC7E/C,cAAA,IAAkB4C,SAAA;AAK7B;AAEA,MAAMS,yCAAA,gBAAc,IAAAf,YAAI,EAAEgB,UAAU,CAAChE,gCAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nvar find = require('../functions/find');\nvar flat = require('../functions/flat');\nfunction getAverageIndices(indexTracker, nrOfObjs) {\n  var avgIndices = [];\n  Object.keys(indexTracker).forEach(function (key) {\n    if (indexTracker[key].count < 2) {\n      indexTracker[key].indexSum += 100;\n    }\n    avgIndices.push({\n      objectID: key,\n      avgOfIndices: indexTracker[key].indexSum / nrOfObjs\n    });\n  });\n  return avgIndices.sort(function (a, b) {\n    return a.avgOfIndices > b.avgOfIndices ? 1 : -1;\n  });\n}\nfunction sortAndMergeRecommendations(results) {\n  var indexTracker = {};\n  results.forEach(function (hits) {\n    hits.forEach(function (hit, index) {\n      if (!indexTracker[hit.objectID]) {\n        indexTracker[hit.objectID] = {\n          indexSum: index,\n          count: 1\n        };\n      } else {\n        indexTracker[hit.objectID] = {\n          indexSum: indexTracker[hit.objectID].indexSum + index,\n          count: indexTracker[hit.objectID].count + 1\n        };\n      }\n    });\n  });\n  var sortedAverageIndices = getAverageIndices(indexTracker, results.length);\n  var finalOrder = sortedAverageIndices.reduce(function (orderedHits, avgIndexRef) {\n    var result = find(flat(results), function (hit) {\n      return hit.objectID === avgIndexRef.objectID;\n    });\n    return result ? orderedHits.concat(result) : orderedHits;\n  }, []);\n  return finalOrder;\n}\nmodule.exports = sortAndMergeRecommendations;","map":{"version":3,"names":["find","require","flat","getAverageIndices","indexTracker","nrOfObjs","avgIndices","Object","keys","forEach","key","count","indexSum","push","objectID","avgOfIndices","sort","a","b","sortAndMergeRecommendations","results","hits","hit","index","sortedAverageIndices","length","finalOrder","reduce","orderedHits","avgIndexRef","result","concat","module","exports"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/algoliasearch-helper/src/utils/sortAndMergeRecommendations.js"],"sourcesContent":["'use strict';\n\nvar find = require('../functions/find');\nvar flat = require('../functions/flat');\n\nfunction getAverageIndices(indexTracker, nrOfObjs) {\n  var avgIndices = [];\n\n  Object.keys(indexTracker).forEach(function (key) {\n    if (indexTracker[key].count < 2) {\n      indexTracker[key].indexSum += 100;\n    }\n    avgIndices.push({\n      objectID: key,\n      avgOfIndices: indexTracker[key].indexSum / nrOfObjs,\n    });\n  });\n\n  return avgIndices.sort(function (a, b) {\n    return a.avgOfIndices > b.avgOfIndices ? 1 : -1;\n  });\n}\n\nfunction sortAndMergeRecommendations(results) {\n  var indexTracker = {};\n\n  results.forEach(function (hits) {\n    hits.forEach(function (hit, index) {\n      if (!indexTracker[hit.objectID]) {\n        indexTracker[hit.objectID] = { indexSum: index, count: 1 };\n      } else {\n        indexTracker[hit.objectID] = {\n          indexSum: indexTracker[hit.objectID].indexSum + index,\n          count: indexTracker[hit.objectID].count + 1,\n        };\n      }\n    });\n  });\n\n  var sortedAverageIndices = getAverageIndices(indexTracker, results.length);\n\n  var finalOrder = sortedAverageIndices.reduce(function (\n    orderedHits,\n    avgIndexRef\n  ) {\n    var result = find(flat(results), function (hit) {\n      return hit.objectID === avgIndexRef.objectID;\n    });\n    return result ? orderedHits.concat(result) : orderedHits;\n  },\n  []);\n\n  return finalOrder;\n}\n\nmodule.exports = sortAndMergeRecommendations;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACvC,IAAIC,IAAI,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAEvC,SAASE,iBAAiBA,CAACC,YAAY,EAAEC,QAAQ,EAAE;EACjD,IAAIC,UAAU,GAAG,EAAE;EAEnBC,MAAM,CAACC,IAAI,CAACJ,YAAY,CAAC,CAACK,OAAO,CAAC,UAAUC,GAAG,EAAE;IAC/C,IAAIN,YAAY,CAACM,GAAG,CAAC,CAACC,KAAK,GAAG,CAAC,EAAE;MAC/BP,YAAY,CAACM,GAAG,CAAC,CAACE,QAAQ,IAAI,GAAG;IACnC;IACAN,UAAU,CAACO,IAAI,CAAC;MACdC,QAAQ,EAAEJ,GAAG;MACbK,YAAY,EAAEX,YAAY,CAACM,GAAG,CAAC,CAACE,QAAQ,GAAGP;IAC7C,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,OAAOC,UAAU,CAACU,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;IACrC,OAAOD,CAAC,CAACF,YAAY,GAAGG,CAAC,CAACH,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC;EACjD,CAAC,CAAC;AACJ;AAEA,SAASI,2BAA2BA,CAACC,OAAO,EAAE;EAC5C,IAAIhB,YAAY,GAAG,CAAC,CAAC;EAErBgB,OAAO,CAACX,OAAO,CAAC,UAAUY,IAAI,EAAE;IAC9BA,IAAI,CAACZ,OAAO,CAAC,UAAUa,GAAG,EAAEC,KAAK,EAAE;MACjC,IAAI,CAACnB,YAAY,CAACkB,GAAG,CAACR,QAAQ,CAAC,EAAE;QAC/BV,YAAY,CAACkB,GAAG,CAACR,QAAQ,CAAC,GAAG;UAAEF,QAAQ,EAAEW,KAAK;UAAEZ,KAAK,EAAE;QAAE,CAAC;MAC5D,CAAC,MAAM;QACLP,YAAY,CAACkB,GAAG,CAACR,QAAQ,CAAC,GAAG;UAC3BF,QAAQ,EAAER,YAAY,CAACkB,GAAG,CAACR,QAAQ,CAAC,CAACF,QAAQ,GAAGW,KAAK;UACrDZ,KAAK,EAAEP,YAAY,CAACkB,GAAG,CAACR,QAAQ,CAAC,CAACH,KAAK,GAAG;QAC5C,CAAC;MACH;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,IAAIa,oBAAoB,GAAGrB,iBAAiB,CAACC,YAAY,EAAEgB,OAAO,CAACK,MAAM,CAAC;EAE1E,IAAIC,UAAU,GAAGF,oBAAoB,CAACG,MAAM,CAAC,UAC3CC,WAAW,EACXC,WAAW,EACX;IACA,IAAIC,MAAM,GAAG9B,IAAI,CAACE,IAAI,CAACkB,OAAO,CAAC,EAAE,UAAUE,GAAG,EAAE;MAC9C,OAAOA,GAAG,CAACR,QAAQ,KAAKe,WAAW,CAACf,QAAQ;IAC9C,CAAC,CAAC;IACF,OAAOgB,MAAM,GAAGF,WAAW,CAACG,MAAM,CAACD,MAAM,CAAC,GAAGF,WAAW;EAC1D,CAAC,EACD,EAAE,CAAC;EAEH,OAAOF,UAAU;AACnB;AAEAM,MAAM,CAACC,OAAO,GAAGd,2BAA2B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"import { HelpText as $8e50676506611310$export$a67c0bc59081311a } from \"./HelpText.mjs\";\nimport { Label as $00af9ba397a66f43$export$b04be29aa201d4f5 } from \"./Label.mjs\";\nimport \"./vars.d514c1fb.css\";\nimport $c6ZG4$fieldlabel_vars_cssmodulejs from \"./fieldlabel_vars_css.mjs\";\nimport { useStyleProps as $c6ZG4$useStyleProps, classNames as $c6ZG4$classNames, SlotProvider as $c6ZG4$SlotProvider } from \"@react-spectrum/utils\";\nimport { Flex as $c6ZG4$Flex } from \"@react-spectrum/layout\";\nimport { useId as $c6ZG4$useId, mergeProps as $c6ZG4$mergeProps } from \"@react-aria/utils\";\nimport $c6ZG4$react from \"react\";\nimport { useFormProps as $c6ZG4$useFormProps } from \"@react-spectrum/form\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $b7ca5b4454a2009d$var$Field(props, ref) {\n  let formProps = (0, $c6ZG4$useFormProps)(props);\n  let isInForm = formProps !== props;\n  props = formProps;\n  let {\n    label: label,\n    labelPosition = 'top',\n    labelAlign: labelAlign,\n    isRequired: isRequired,\n    necessityIndicator: necessityIndicator,\n    includeNecessityIndicatorInAccessibilityName: includeNecessityIndicatorInAccessibilityName,\n    validationState: validationState,\n    isInvalid: isInvalid,\n    description: description,\n    errorMessage = e => e.validationErrors.join(' '),\n    validationErrors: validationErrors,\n    validationDetails: validationDetails,\n    isDisabled: isDisabled,\n    showErrorIcon: showErrorIcon,\n    contextualHelp: contextualHelp,\n    children: children,\n    labelProps = {},\n    // Not every component that uses <Field> supports help text.\n    descriptionProps = {},\n    errorMessageProps = {},\n    elementType: elementType,\n    wrapperClassName: wrapperClassName,\n    wrapperProps = {},\n    ...otherProps\n  } = props;\n  let {\n    styleProps: styleProps\n  } = (0, $c6ZG4$useStyleProps)(otherProps);\n  let errorMessageString = null;\n  if (typeof errorMessage === 'function') errorMessageString = isInvalid != null && validationErrors != null && validationDetails != null ? errorMessage({\n    isInvalid: isInvalid,\n    validationErrors: validationErrors,\n    validationDetails: validationDetails\n  }) : null;else errorMessageString = errorMessage;\n  let hasHelpText = !!description || errorMessageString && (isInvalid || validationState === 'invalid');\n  let contextualHelpId = (0, $c6ZG4$useId)();\n  let fallbackLabelPropsId = (0, $c6ZG4$useId)();\n  if (label && contextualHelp && !labelProps.id) labelProps.id = fallbackLabelPropsId;\n  let labelWrapperClass = (0, $c6ZG4$classNames)((0, $parcel$interopDefault($c6ZG4$fieldlabel_vars_cssmodulejs)), 'spectrum-Field', {\n    'spectrum-Field--positionTop': labelPosition === 'top',\n    'spectrum-Field--positionSide': labelPosition === 'side',\n    'spectrum-Field--alignEnd': labelAlign === 'end',\n    'spectrum-Field--hasContextualHelp': !!props.contextualHelp\n  }, styleProps.className, wrapperClassName);\n  children = /*#__PURE__*/(0, $c6ZG4$react).cloneElement(children, (0, $c6ZG4$mergeProps)(children.props, {\n    className: (0, $c6ZG4$classNames)((0, $parcel$interopDefault($c6ZG4$fieldlabel_vars_cssmodulejs)), 'spectrum-Field-field')\n  }));\n  let renderHelpText = () => /*#__PURE__*/(0, $c6ZG4$react).createElement((0, $8e50676506611310$export$a67c0bc59081311a), {\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps,\n    description: description,\n    errorMessage: errorMessageString,\n    validationState: validationState,\n    isInvalid: isInvalid,\n    isDisabled: isDisabled,\n    showErrorIcon: showErrorIcon,\n    gridArea: (0, $parcel$interopDefault($c6ZG4$fieldlabel_vars_cssmodulejs)).helpText\n  });\n  let renderChildren = () => {\n    if (labelPosition === 'side') return /*#__PURE__*/(0, $c6ZG4$react).createElement((0, $c6ZG4$Flex), {\n      direction: \"column\",\n      UNSAFE_className: (0, $c6ZG4$classNames)((0, $parcel$interopDefault($c6ZG4$fieldlabel_vars_cssmodulejs)), 'spectrum-Field-wrapper')\n    }, children, hasHelpText && renderHelpText());\n    return /*#__PURE__*/(0, $c6ZG4$react).createElement((0, $c6ZG4$react).Fragment, null, children, hasHelpText && renderHelpText());\n  };\n  let labelAndContextualHelp = /*#__PURE__*/(0, $c6ZG4$react).createElement((0, $c6ZG4$react).Fragment, null, label && /*#__PURE__*/(0, $c6ZG4$react).createElement((0, $00af9ba397a66f43$export$b04be29aa201d4f5), {\n    ...labelProps,\n    labelPosition: labelPosition,\n    labelAlign: labelAlign,\n    isRequired: isRequired,\n    necessityIndicator: necessityIndicator,\n    includeNecessityIndicatorInAccessibilityName: includeNecessityIndicatorInAccessibilityName,\n    elementType: elementType\n  }, label), label && contextualHelp && /*#__PURE__*/(0, $c6ZG4$react).createElement((0, $c6ZG4$SlotProvider), {\n    slots: {\n      actionButton: {\n        UNSAFE_className: (0, $c6ZG4$classNames)((0, $parcel$interopDefault($c6ZG4$fieldlabel_vars_cssmodulejs)), 'spectrum-Field-contextualHelp'),\n        id: contextualHelpId,\n        'aria-labelledby': (labelProps === null || labelProps === void 0 ? void 0 : labelProps.id) ? `${labelProps.id} ${contextualHelpId}` : undefined\n      }\n    }\n  }, contextualHelp));\n  // Need to add an extra wrapper for the label and contextual help if labelPosition is side,\n  // so that the table layout works inside forms.\n  if (isInForm && labelPosition === 'side' && label && contextualHelp) labelAndContextualHelp = /*#__PURE__*/(0, $c6ZG4$react).createElement(\"div\", {\n    className: (0, $c6ZG4$classNames)((0, $parcel$interopDefault($c6ZG4$fieldlabel_vars_cssmodulejs)), 'spectrum-Field-labelCell')\n  }, /*#__PURE__*/(0, $c6ZG4$react).createElement(\"div\", {\n    className: (0, $c6ZG4$classNames)((0, $parcel$interopDefault($c6ZG4$fieldlabel_vars_cssmodulejs)), 'spectrum-Field-labelWrapper')\n  }, labelAndContextualHelp));\n  return /*#__PURE__*/(0, $c6ZG4$react).createElement(\"div\", {\n    ...styleProps,\n    ...wrapperProps,\n    ref: ref,\n    className: labelWrapperClass\n  }, labelAndContextualHelp, renderChildren());\n}\nlet $b7ca5b4454a2009d$export$a455218a85c89869 = /*#__PURE__*/(0, $c6ZG4$react).forwardRef($b7ca5b4454a2009d$var$Field);\nexport { $b7ca5b4454a2009d$export$a455218a85c89869 as Field };","map":{"version":3,"names":["$b7ca5b4454a2009d$var$Field","props","ref","formProps","$c6ZG4$useFormProps","isInForm","label","labelPosition","labelAlign","isRequired","necessityIndicator","includeNecessityIndicatorInAccessibilityName","validationState","isInvalid","description","errorMessage","e","validationErrors","join","validationDetails","isDisabled","showErrorIcon","contextualHelp","children","labelProps","descriptionProps","errorMessageProps","elementType","wrapperClassName","wrapperProps","otherProps","styleProps","$c6ZG4$useStyleProps","errorMessageString","hasHelpText","contextualHelpId","$c6ZG4$useId","fallbackLabelPropsId","id","labelWrapperClass","$c6ZG4$classNames","$parcel$interopDefault","$c6ZG4$fieldlabel_vars_cssmodulejs","className","$c6ZG4$react","cloneElement","$c6ZG4$mergeProps","renderHelpText","createElement","$8e50676506611310$export$a67c0bc59081311a","gridArea","helpText","renderChildren","$c6ZG4$Flex","direction","UNSAFE_className","Fragment","labelAndContextualHelp","$00af9ba397a66f43$export$b04be29aa201d4f5","$c6ZG4$SlotProvider","slots","actionButton","undefined","$b7ca5b4454a2009d$export$a455218a85c89869","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-spectrum/label/dist/packages/@react-spectrum/label/src/Field.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, SlotProvider, useStyleProps} from '@react-spectrum/utils';\nimport {Flex} from '@react-spectrum/layout';\nimport {HelpText} from './HelpText';\nimport {Label} from './Label';\nimport {LabelPosition, RefObject} from '@react-types/shared';\nimport labelStyles from '@adobe/spectrum-css-temp/components/fieldlabel/vars.css';\nimport {mergeProps, useId} from '@react-aria/utils';\nimport React, {ReactNode, Ref} from 'react';\nimport {SpectrumFieldProps} from '@react-types/label';\nimport {useFormProps} from '@react-spectrum/form';\n\nfunction Field(props: SpectrumFieldProps, ref: Ref<HTMLElement>) {\n  let formProps = useFormProps(props);\n  let isInForm = formProps !== props;\n  props = formProps;\n  let {\n    label,\n    labelPosition = 'top' as LabelPosition,\n    labelAlign,\n    isRequired,\n    necessityIndicator,\n    includeNecessityIndicatorInAccessibilityName,\n    validationState,\n    isInvalid,\n    description,\n    errorMessage = e => e.validationErrors.join(' '),\n    validationErrors,\n    validationDetails,\n    isDisabled,\n    showErrorIcon,\n    contextualHelp,\n    children,\n    labelProps = {},\n    // Not every component that uses <Field> supports help text.\n    descriptionProps = {},\n    errorMessageProps = {},\n    elementType,\n    wrapperClassName,\n    wrapperProps = {},\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let errorMessageString: ReactNode = null;\n  if (typeof errorMessage === 'function') {\n    errorMessageString = isInvalid != null && validationErrors != null && validationDetails != null\n      ? errorMessage({\n        isInvalid,\n        validationErrors,\n        validationDetails\n      })\n      : null;\n  } else {\n    errorMessageString = errorMessage;\n  }\n  let hasHelpText = !!description || errorMessageString && (isInvalid || validationState === 'invalid');\n  let contextualHelpId = useId();\n\n  let fallbackLabelPropsId = useId();\n  if (label && contextualHelp && !labelProps.id) {\n    labelProps.id = fallbackLabelPropsId;\n  }\n\n  let labelWrapperClass = classNames(\n      labelStyles,\n      'spectrum-Field',\n    {\n      'spectrum-Field--positionTop': labelPosition === 'top',\n      'spectrum-Field--positionSide': labelPosition === 'side',\n      'spectrum-Field--alignEnd': labelAlign === 'end',\n      'spectrum-Field--hasContextualHelp': !!props.contextualHelp\n    },\n      styleProps.className,\n      wrapperClassName\n    );\n\n  children = React.cloneElement(children, mergeProps(children.props as any, {\n    className: classNames(\n        labelStyles,\n        'spectrum-Field-field'\n      )\n  }));\n\n  let renderHelpText = () => (\n    <HelpText\n      descriptionProps={descriptionProps}\n      errorMessageProps={errorMessageProps}\n      description={description}\n      errorMessage={errorMessageString}\n      validationState={validationState}\n      isInvalid={isInvalid}\n      isDisabled={isDisabled}\n      showErrorIcon={showErrorIcon}\n      gridArea={labelStyles.helpText} />\n    );\n\n  let renderChildren = () => {\n    if (labelPosition === 'side') {\n      return (\n        <Flex direction=\"column\" UNSAFE_className={classNames(labelStyles, 'spectrum-Field-wrapper')}>\n          {children}\n          {hasHelpText && renderHelpText()}\n        </Flex>\n      );\n    }\n\n    return (\n      <>\n        {children}\n        {hasHelpText && renderHelpText()}\n      </>\n    );\n  };\n\n  let labelAndContextualHelp = (\n    <>\n      {label && (\n        <Label\n          {...labelProps}\n          labelPosition={labelPosition}\n          labelAlign={labelAlign}\n          isRequired={isRequired}\n          necessityIndicator={necessityIndicator}\n          includeNecessityIndicatorInAccessibilityName={includeNecessityIndicatorInAccessibilityName}\n          elementType={elementType}>\n          {label}\n        </Label>\n      )}\n      {label && contextualHelp &&\n        <SlotProvider\n          slots={{\n            actionButton: {\n              UNSAFE_className: classNames(labelStyles, 'spectrum-Field-contextualHelp'),\n              id: contextualHelpId,\n              'aria-labelledby': labelProps?.id ? `${labelProps.id} ${contextualHelpId}` : undefined\n            }\n          }}>\n          {contextualHelp}\n        </SlotProvider>\n      }\n    </>\n    );\n\n    // Need to add an extra wrapper for the label and contextual help if labelPosition is side,\n    // so that the table layout works inside forms.\n  if (isInForm && labelPosition === 'side' && label && contextualHelp) {\n    labelAndContextualHelp = (\n      <div className={classNames(labelStyles, 'spectrum-Field-labelCell')}>\n        <div className={classNames(labelStyles, 'spectrum-Field-labelWrapper')}>\n          {labelAndContextualHelp}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    (<div\n      {...styleProps}\n      {...wrapperProps}\n      ref={ref as RefObject<HTMLDivElement | null>}\n      className={labelWrapperClass}>\n      {labelAndContextualHelp}\n      {renderChildren()}\n    </div>)\n  );\n}\n\nlet _Field = React.forwardRef(Field);\nexport {_Field as Field};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
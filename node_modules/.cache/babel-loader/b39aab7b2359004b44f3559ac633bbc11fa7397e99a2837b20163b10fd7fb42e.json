{"ast":null,"code":"import $f3JOg$react, { createContext as $f3JOg$createContext, useContext as $f3JOg$useContext, forwardRef as $f3JOg$forwardRef, useCallback as $f3JOg$useCallback, useMemo as $f3JOg$useMemo } from \"react\";\n\n/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nconst $612b8eb6cb90e02d$export$d188a835a7bc5783 = /*#__PURE__*/(0, $f3JOg$createContext)({});\nconst $612b8eb6cb90e02d$export$f55761759794cf55 = /*#__PURE__*/(0, $f3JOg$createContext)(null);\nfunction $612b8eb6cb90e02d$var$DropIndicator(props, ref) {\n  let {\n    render: render\n  } = (0, $f3JOg$useContext)($612b8eb6cb90e02d$export$f55761759794cf55);\n  return /*#__PURE__*/(0, $f3JOg$react).createElement((0, $f3JOg$react).Fragment, null, render(props, ref));\n}\n/**\n * A DropIndicator is rendered between items in a collection to indicate where dropped data will be inserted.\n */\nconst $612b8eb6cb90e02d$export$62ed72bc21f6b8a6 = /*#__PURE__*/(0, $f3JOg$forwardRef)($612b8eb6cb90e02d$var$DropIndicator);\nfunction $612b8eb6cb90e02d$export$971707d8a129a1f7(dragAndDropHooks, dropState) {\n  var _dragAndDropHooks_isVirtualDragging;\n  let renderDropIndicator = dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.renderDropIndicator;\n  let isVirtualDragging = dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : (_dragAndDropHooks_isVirtualDragging = dragAndDropHooks.isVirtualDragging) === null || _dragAndDropHooks_isVirtualDragging === void 0 ? void 0 : _dragAndDropHooks_isVirtualDragging.call(dragAndDropHooks);\n  let fn = (0, $f3JOg$useCallback)(target => {\n    // Only show drop indicators when virtual dragging or this is the current drop target.\n    if (isVirtualDragging || (dropState === null || dropState === void 0 ? void 0 : dropState.isDropTarget(target))) return renderDropIndicator ? renderDropIndicator(target) : /*#__PURE__*/(0, $f3JOg$react).createElement($612b8eb6cb90e02d$export$62ed72bc21f6b8a6, {\n      target: target\n    });\n    // We invalidate whenever the target changes.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dropState === null || dropState === void 0 ? void 0 : dropState.target, isVirtualDragging, renderDropIndicator]);\n  return (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDropIndicator) ? fn : undefined;\n}\nfunction $612b8eb6cb90e02d$export$d1e8e3fbb7461f6(selectionManager, dragAndDropHooks, dropState) {\n  var _dragAndDropHooks_isVirtualDragging, _dropState_target;\n  // Persist the focused key and the drop target key.\n  let focusedKey = selectionManager.focusedKey;\n  let dropTargetKey = null;\n  if ((dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : (_dragAndDropHooks_isVirtualDragging = dragAndDropHooks.isVirtualDragging) === null || _dragAndDropHooks_isVirtualDragging === void 0 ? void 0 : _dragAndDropHooks_isVirtualDragging.call(dragAndDropHooks)) && (dropState === null || dropState === void 0 ? void 0 : (_dropState_target = dropState.target) === null || _dropState_target === void 0 ? void 0 : _dropState_target.type) === 'item') {\n    dropTargetKey = dropState.target.key;\n    var _dropState_collection_getKeyAfter;\n    if (dropState.target.dropPosition === 'after')\n      // Normalize to the \"before\" drop position since we only render those to the DOM.\n      dropTargetKey = (_dropState_collection_getKeyAfter = dropState.collection.getKeyAfter(dropTargetKey)) !== null && _dropState_collection_getKeyAfter !== void 0 ? _dropState_collection_getKeyAfter : dropTargetKey;\n  }\n  return (0, $f3JOg$useMemo)(() => {\n    return new Set([focusedKey, dropTargetKey].filter(k => k !== null));\n  }, [focusedKey, dropTargetKey]);\n}\nexport { $612b8eb6cb90e02d$export$d188a835a7bc5783 as DragAndDropContext, $612b8eb6cb90e02d$export$f55761759794cf55 as DropIndicatorContext, $612b8eb6cb90e02d$export$62ed72bc21f6b8a6 as DropIndicator, $612b8eb6cb90e02d$export$971707d8a129a1f7 as useRenderDropIndicator, $612b8eb6cb90e02d$export$d1e8e3fbb7461f6 as useDndPersistedKeys };","map":{"version":3,"names":["$612b8eb6cb90e02d$export$d188a835a7bc5783","$f3JOg$createContext","$612b8eb6cb90e02d$export$f55761759794cf55","$612b8eb6cb90e02d$var$DropIndicator","props","ref","render","$f3JOg$useContext","$f3JOg$react","createElement","Fragment","$612b8eb6cb90e02d$export$62ed72bc21f6b8a6","$f3JOg$forwardRef","$612b8eb6cb90e02d$export$971707d8a129a1f7","dragAndDropHooks","dropState","_dragAndDropHooks_isVirtualDragging","renderDropIndicator","isVirtualDragging","call","fn","$f3JOg$useCallback","target","isDropTarget","useDropIndicator","undefined","$612b8eb6cb90e02d$export$d1e8e3fbb7461f6","selectionManager","_dropState_target","focusedKey","dropTargetKey","type","key","_dropState_collection_getKeyAfter","dropPosition","collection","getKeyAfter","$f3JOg$useMemo","Set","filter","k"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/react-aria-components/dist/packages/react-aria-components/src/DragAndDrop.tsx"],"sourcesContent":["/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport type {DropIndicatorProps as AriaDropIndicatorProps, ItemDropTarget, Key} from 'react-aria';\nimport type {DragAndDropHooks} from './useDragAndDrop';\nimport type {DraggableCollectionState, DroppableCollectionState, MultipleSelectionManager} from 'react-stately';\nimport React, {createContext, ForwardedRef, forwardRef, JSX, ReactNode, useCallback, useContext, useMemo} from 'react';\nimport type {RenderProps} from './utils';\n\nexport interface DragAndDropContextValue {\n  dragAndDropHooks?: DragAndDropHooks,\n  dragState?: DraggableCollectionState,\n  dropState?: DroppableCollectionState\n}\n\nexport const DragAndDropContext = createContext<DragAndDropContextValue>({});\nexport const DropIndicatorContext = createContext<DropIndicatorContextValue | null>(null);\n\nexport interface DropIndicatorRenderProps {\n  /**\n   * Whether the drop indicator is currently the active drop target.\n   * @selector [data-drop-target]\n   */\n  isDropTarget: boolean\n}\n\nexport interface DropIndicatorProps extends AriaDropIndicatorProps, RenderProps<DropIndicatorRenderProps> { }\ninterface DropIndicatorContextValue {\n  render: (props: DropIndicatorProps, ref: ForwardedRef<HTMLElement>) => ReactNode\n}\n\nfunction DropIndicator(props: DropIndicatorProps, ref: ForwardedRef<HTMLElement>): JSX.Element {\n  let {render} = useContext(DropIndicatorContext)!;\n  return <>{render(props, ref)}</>;\n}\n\n/**\n * A DropIndicator is rendered between items in a collection to indicate where dropped data will be inserted.\n */\nconst _DropIndicator = forwardRef(DropIndicator);\nexport {_DropIndicator as DropIndicator};\n\nexport function useRenderDropIndicator(dragAndDropHooks?: DragAndDropHooks, dropState?: DroppableCollectionState) {\n  let renderDropIndicator = dragAndDropHooks?.renderDropIndicator;\n  let isVirtualDragging = dragAndDropHooks?.isVirtualDragging?.();\n  let fn = useCallback((target: ItemDropTarget) => {\n    // Only show drop indicators when virtual dragging or this is the current drop target.\n    if (isVirtualDragging || dropState?.isDropTarget(target)) {\n      return renderDropIndicator ? renderDropIndicator(target) : <_DropIndicator target={target} />;\n    }\n    // We invalidate whenever the target changes.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dropState?.target, isVirtualDragging, renderDropIndicator]);\n  return dragAndDropHooks?.useDropIndicator ? fn : undefined;\n}\n\nexport function useDndPersistedKeys(selectionManager: MultipleSelectionManager, dragAndDropHooks?: DragAndDropHooks, dropState?: DroppableCollectionState) {\n  // Persist the focused key and the drop target key.\n  let focusedKey = selectionManager.focusedKey;\n  let dropTargetKey: Key | null = null;\n  if (dragAndDropHooks?.isVirtualDragging?.() && dropState?.target?.type === 'item') {\n    dropTargetKey = dropState.target.key;\n    if (dropState.target.dropPosition === 'after') {\n      // Normalize to the \"before\" drop position since we only render those to the DOM.\n      dropTargetKey = dropState.collection.getKeyAfter(dropTargetKey) ?? dropTargetKey;\n    }\n  }\n\n  return useMemo(() => {\n    return new Set([focusedKey, dropTargetKey].filter(k => k !== null));\n  }, [focusedKey, dropTargetKey]);\n}\n"],"mappings":";;AAAA;;;;;;;;;;;AAuBO,MAAMA,yCAAA,gBAAqB,IAAAC,oBAAY,EAA2B,CAAC;AACnE,MAAMC,yCAAA,gBAAuB,IAAAD,oBAAY,EAAoC;AAepF,SAASE,oCAAcC,KAAyB,EAAEC,GAA8B;EAC9E,IAAI;IAAAC,MAAA,EAACA;EAAM,CAAC,GAAG,IAAAC,iBAAS,EAAEL,yCAAA;EAC1B,oBAAO,IAAAM,YAAA,EAAAC,aAAA,KAAAD,YAAA,EAAAE,QAAA,QAAGJ,MAAA,CAAOF,KAAA,EAAOC,GAAA;AAC1B;AAEA;;;AAGA,MAAMM,yCAAA,gBAAiB,IAAAC,iBAAS,EAAET,mCAAA;AAG3B,SAASU,0CAAuBC,gBAAmC,EAAEC,SAAoC;MAEtFC,mCAAA;EADxB,IAAIC,mBAAA,GAAsBH,gBAAA,aAAAA,gBAAA,uBAAAA,gBAAA,CAAkBG,mBAAmB;EAC/D,IAAIC,iBAAA,GAAoBJ,gBAAA,aAAAA,gBAAA,wBAAAE,mCAAA,GAAAF,gBAAA,CAAkBI,iBAAiB,cAAnCF,mCAAA,uBAAAA,mCAAA,CAAAG,IAAA,CAAAL,gBAAA;EACxB,IAAIM,EAAA,GAAK,IAAAC,kBAAU,EAAGC,MAAA;IACpB;IACA,IAAIJ,iBAAA,KAAqBH,SAAA,aAAAA,SAAA,uBAAAA,SAAA,CAAWQ,YAAY,CAACD,MAAA,IAC/C,OAAOL,mBAAA,GAAsBA,mBAAA,CAAoBK,MAAA,iBAAU,IAAAd,YAAA,EAAAC,aAAA,CAACE,yCAAA;MAAeW,MAAA,EAAQA;;IAErF;IACA;EACF,GAAG,CAACP,SAAA,aAAAA,SAAA,uBAAAA,SAAA,CAAWO,MAAM,EAAEJ,iBAAA,EAAmBD,mBAAA,CAAoB;EAC9D,OAAO,CAAAH,gBAAA,aAAAA,gBAAA,uBAAAA,gBAAA,CAAkBU,gBAAgB,IAAGJ,EAAA,GAAKK,SAAA;AACnD;AAEO,SAASC,yCAAoBC,gBAA0C,EAAEb,gBAAmC,EAAEC,SAAoC;MAInJC,mCAAA,EAA2CY,iBAAA;EAH/C;EACA,IAAIC,UAAA,GAAaF,gBAAA,CAAiBE,UAAU;EAC5C,IAAIC,aAAA,GAA4B;EAChC,IAAI,CAAAhB,gBAAA,aAAAA,gBAAA,wBAAAE,mCAAA,GAAAF,gBAAA,CAAkBI,iBAAiB,cAAnCF,mCAAA,uBAAAA,mCAAA,CAAAG,IAAA,CAAAL,gBAAA,MAA2C,CAAAC,SAAA,aAAAA,SAAA,wBAAAa,iBAAA,GAAAb,SAAA,CAAWO,MAAM,cAAjBM,iBAAA,uBAAAA,iBAAA,CAAmBG,IAAI,MAAK,QAAQ;IACjFD,aAAA,GAAgBf,SAAA,CAAUO,MAAM,CAACU,GAAG;QAGlBC,iCAAA;IAFlB,IAAIlB,SAAA,CAAUO,MAAM,CAACY,YAAY,KAAK;MACpC;MACAJ,aAAA,GAAgB,CAAAG,iCAAA,GAAAlB,SAAA,CAAUoB,UAAU,CAACC,WAAW,CAACN,aAAA,eAAjCG,iCAAA,cAAAA,iCAAA,GAAmDH,aAAA;EAEvE;EAEA,OAAO,IAAAO,cAAM,EAAE;IACb,OAAO,IAAIC,GAAA,CAAI,CAACT,UAAA,EAAYC,aAAA,CAAc,CAACS,MAAM,CAACC,CAAA,IAAKA,CAAA,KAAM;EAC/D,GAAG,CAACX,UAAA,EAAYC,aAAA,CAAc;AAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
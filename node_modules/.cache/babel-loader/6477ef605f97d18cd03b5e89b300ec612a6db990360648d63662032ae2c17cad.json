{"ast":null,"code":"import $0a834ddbc989a3e3$export$2e2bcd8739ae039 from \"./InsertionIndicator.mjs\";\nimport $6w3ZV$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport \"./styles.ad343ab0.css\";\nimport $6w3ZV$styles_cssmodulejs from \"./styles_css.mjs\";\nimport { ListViewItem as $d7c07ca2efc5ba02$export$c6bde0c04b033c0e } from \"./ListViewItem.mjs\";\nimport { ListViewLayout as $bc6cc67dd6240ebd$export$dab781655dfbb7d3 } from \"./ListViewLayout.mjs\";\nimport $41a60729487a82d7$export$2e2bcd8739ae039 from \"./RootDropIndicator.mjs\";\nimport { DragPreview as $cd61e55c47e3c0f5$export$905ab40ac2179daa } from \"./DragPreview.mjs\";\nimport { useGridList as $6w3ZV$useGridList } from \"@react-aria/gridlist\";\nimport { useDOMRef as $6w3ZV$useDOMRef, useStyleProps as $6w3ZV$useStyleProps, classNames as $6w3ZV$classNames } from \"@react-spectrum/utils\";\nimport { useLayoutEffect as $6w3ZV$useLayoutEffect, mergeProps as $6w3ZV$mergeProps, filterDOMProps as $6w3ZV$filterDOMProps } from \"@react-aria/utils\";\nimport { FocusScope as $6w3ZV$FocusScope, FocusRing as $6w3ZV$FocusRing } from \"@react-aria/focus\";\nimport { ListKeyboardDelegate as $6w3ZV$ListKeyboardDelegate } from \"@react-aria/selection\";\nimport { useListState as $6w3ZV$useListState } from \"@react-stately/list\";\nimport { ProgressCircle as $6w3ZV$ProgressCircle } from \"@react-spectrum/progress\";\nimport $6w3ZV$react, { useMemo as $6w3ZV$useMemo, useRef as $6w3ZV$useRef, useEffect as $6w3ZV$useEffect, useState as $6w3ZV$useState, useCallback as $6w3ZV$useCallback, useContext as $6w3ZV$useContext } from \"react\";\nimport { useLocalizedStringFormatter as $6w3ZV$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nimport { useProvider as $6w3ZV$useProvider } from \"@react-spectrum/provider\";\nimport { Virtualizer as $6w3ZV$Virtualizer } from \"@react-aria/virtualizer\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $f85fb77f9d4cbc6c$export$870039b0abfe3de0 = /*#__PURE__*/(0, $6w3ZV$react).createContext(null);\nconst $f85fb77f9d4cbc6c$var$ROW_HEIGHTS = {\n  compact: {\n    medium: 32,\n    large: 40\n  },\n  regular: {\n    medium: 40,\n    large: 50\n  },\n  spacious: {\n    medium: 48,\n    large: 60\n  }\n};\nfunction $f85fb77f9d4cbc6c$var$useListLayout(state, density, overflowMode) {\n  let {\n    scale: scale\n  } = (0, $6w3ZV$useProvider)();\n  let layout = (0, $6w3ZV$useMemo)(() => new (0, $bc6cc67dd6240ebd$export$dab781655dfbb7d3)({\n    estimatedRowHeight: $f85fb77f9d4cbc6c$var$ROW_HEIGHTS[density][scale]\n  }), [scale, density, overflowMode]);\n  return layout;\n}\nfunction $f85fb77f9d4cbc6c$var$ListView(props, ref) {\n  var _dropState_target;\n  let {\n    density = 'regular',\n    loadingState: loadingState,\n    onLoadMore: onLoadMore,\n    isQuiet: isQuiet,\n    overflowMode = 'truncate',\n    onAction: onAction,\n    dragAndDropHooks: dragAndDropHooks,\n    renderEmptyState: renderEmptyState,\n    ...otherProps\n  } = props;\n  let isListDraggable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDraggableCollectionState);\n  let isListDroppable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDroppableCollectionState);\n  let dragHooksProvided = (0, $6w3ZV$useRef)(isListDraggable);\n  let dropHooksProvided = (0, $6w3ZV$useRef)(isListDroppable);\n  (0, $6w3ZV$useEffect)(() => {\n    if (dragHooksProvided.current !== isListDraggable) console.warn('Drag hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.');\n    if (dropHooksProvided.current !== isListDroppable) console.warn('Drop hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.');\n  }, [isListDraggable, isListDroppable]);\n  let domRef = (0, $6w3ZV$useDOMRef)(ref);\n  let state = (0, $6w3ZV$useListState)({\n    ...props,\n    selectionBehavior: props.selectionStyle === 'highlight' ? 'replace' : 'toggle'\n  });\n  let {\n    collection: collection,\n    selectionManager: selectionManager\n  } = state;\n  let isLoading = loadingState === 'loading' || loadingState === 'loadingMore';\n  let {\n    styleProps: styleProps\n  } = (0, $6w3ZV$useStyleProps)(props);\n  let dragState;\n  let preview = (0, $6w3ZV$useRef)(null);\n  if (isListDraggable) {\n    dragState = dragAndDropHooks.useDraggableCollectionState({\n      collection: collection,\n      selectionManager: selectionManager,\n      preview: preview\n    });\n    dragAndDropHooks.useDraggableCollection({}, dragState, domRef);\n  }\n  let layout = $f85fb77f9d4cbc6c$var$useListLayout(state, props.density || 'regular', overflowMode);\n  let DragPreview = dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.DragPreview;\n  let dropState;\n  let droppableCollection;\n  let isRootDropTarget;\n  if (isListDroppable) {\n    dropState = dragAndDropHooks.useDroppableCollectionState({\n      collection: collection,\n      selectionManager: selectionManager\n    });\n    droppableCollection = dragAndDropHooks.useDroppableCollection({\n      keyboardDelegate: new (0, $6w3ZV$ListKeyboardDelegate)({\n        collection: collection,\n        disabledKeys: (dragState === null || dragState === void 0 ? void 0 : dragState.draggingKeys.size) ? null : selectionManager.disabledKeys,\n        ref: domRef,\n        layoutDelegate: layout\n      }),\n      dropTargetDelegate: layout\n    }, dropState, domRef);\n    isRootDropTarget = dropState.isDropTarget({\n      type: 'root'\n    });\n  }\n  let {\n    gridProps: gridProps\n  } = (0, $6w3ZV$useGridList)({\n    ...props,\n    isVirtualized: true,\n    layoutDelegate: layout,\n    onAction: onAction\n  }, state, domRef);\n  let focusedKey = selectionManager.focusedKey;\n  let dropTargetKey = null;\n  if ((dropState === null || dropState === void 0 ? void 0 : (_dropState_target = dropState.target) === null || _dropState_target === void 0 ? void 0 : _dropState_target.type) === 'item') {\n    dropTargetKey = dropState.target.key;\n    var _state_collection_getKeyAfter;\n    if (dropState.target.dropPosition === 'after')\n      // Normalize to the \"before\" drop position since we only render those in the DOM.\n      dropTargetKey = (_state_collection_getKeyAfter = state.collection.getKeyAfter(dropTargetKey)) !== null && _state_collection_getKeyAfter !== void 0 ? _state_collection_getKeyAfter : dropTargetKey;\n  }\n  let persistedKeys = (0, $6w3ZV$useMemo)(() => {\n    return new Set([focusedKey, dropTargetKey].filter(k => k !== null));\n  }, [focusedKey, dropTargetKey]);\n  // wait for layout to get accurate measurements\n  let [isVerticalScrollbarVisible, setVerticalScollbarVisible] = (0, $6w3ZV$useState)(false);\n  let [isHorizontalScrollbarVisible, setHorizontalScollbarVisible] = (0, $6w3ZV$useState)(false);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  (0, $6w3ZV$useLayoutEffect)(() => {\n    if (domRef.current) {\n      // 2 is the width of the border which is not part of the box size\n      setVerticalScollbarVisible(domRef.current.clientWidth + 2 < domRef.current.offsetWidth);\n      setHorizontalScollbarVisible(domRef.current.clientHeight + 2 < domRef.current.offsetHeight);\n    }\n  });\n  let hasAnyChildren = (0, $6w3ZV$useMemo)(() => [...collection].some(item => item.hasChildNodes), [collection]);\n  return /*#__PURE__*/(0, $6w3ZV$react).createElement($f85fb77f9d4cbc6c$export$870039b0abfe3de0.Provider, {\n    value: {\n      state: state,\n      dragState: dragState,\n      dropState: dropState,\n      dragAndDropHooks: dragAndDropHooks,\n      onAction: onAction,\n      isListDraggable: isListDraggable,\n      isListDroppable: isListDroppable,\n      layout: layout,\n      loadingState: loadingState,\n      renderEmptyState: renderEmptyState\n    }\n  }, /*#__PURE__*/(0, $6w3ZV$react).createElement((0, $6w3ZV$FocusScope), null, /*#__PURE__*/(0, $6w3ZV$react).createElement((0, $6w3ZV$FocusRing), {\n    focusRingClass: (0, $6w3ZV$classNames)((0, $parcel$interopDefault($6w3ZV$styles_cssmodulejs)), 'focus-ring')\n  }, /*#__PURE__*/(0, $6w3ZV$react).createElement((0, $6w3ZV$Virtualizer), {\n    ...(0, $6w3ZV$mergeProps)(isListDroppable && (droppableCollection === null || droppableCollection === void 0 ? void 0 : droppableCollection.collectionProps), gridProps),\n    ...(0, $6w3ZV$filterDOMProps)(otherProps),\n    ...gridProps,\n    ...styleProps,\n    isLoading: isLoading,\n    onLoadMore: onLoadMore,\n    ref: domRef,\n    persistedKeys: persistedKeys,\n    scrollDirection: \"vertical\",\n    className: (0, $6w3ZV$classNames)((0, $parcel$interopDefault($6w3ZV$styles_cssmodulejs)), 'react-spectrum-ListView', `react-spectrum-ListView--${density}`, 'react-spectrum-ListView--emphasized', {\n      'react-spectrum-ListView--quiet': isQuiet,\n      'react-spectrum-ListView--loadingMore': loadingState === 'loadingMore',\n      'react-spectrum-ListView--draggable': !!isListDraggable,\n      'react-spectrum-ListView--dropTarget': !!isRootDropTarget,\n      'react-spectrum-ListView--isVerticalScrollbarVisible': isVerticalScrollbarVisible,\n      'react-spectrum-ListView--isHorizontalScrollbarVisible': isHorizontalScrollbarVisible,\n      'react-spectrum-ListView--hasAnyChildren': hasAnyChildren,\n      'react-spectrum-ListView--wrap': overflowMode === 'wrap'\n    }, styleProps.className),\n    layout: layout,\n    layoutOptions: (0, $6w3ZV$useMemo)(() => ({\n      isLoading: isLoading\n    }), [isLoading]),\n    collection: collection\n  }, (0, $6w3ZV$useCallback)((type, item) => {\n    if (type === 'item') return /*#__PURE__*/(0, $6w3ZV$react).createElement($f85fb77f9d4cbc6c$var$Item, {\n      item: item\n    });else if (type === 'loader') return /*#__PURE__*/(0, $6w3ZV$react).createElement($f85fb77f9d4cbc6c$var$LoadingView, null);else if (type === 'placeholder') return /*#__PURE__*/(0, $6w3ZV$react).createElement($f85fb77f9d4cbc6c$var$EmptyState, null);\n  }, [])))), DragPreview && isListDraggable && /*#__PURE__*/(0, $6w3ZV$react).createElement(DragPreview, {\n    ref: preview\n  }, () => {\n    if (dragAndDropHooks.renderPreview) return dragAndDropHooks.renderPreview(dragState.draggingKeys, dragState.draggedKey);\n    let item = state.collection.getItem(dragState.draggedKey);\n    let itemCount = dragState.draggingKeys.size;\n    let itemHeight = layout.getLayoutInfo(dragState.draggedKey).rect.height;\n    return /*#__PURE__*/(0, $6w3ZV$react).createElement((0, $cd61e55c47e3c0f5$export$905ab40ac2179daa), {\n      item: item,\n      itemCount: itemCount,\n      itemHeight: itemHeight,\n      density: density\n    });\n  }));\n}\nfunction $f85fb77f9d4cbc6c$var$Item({\n  item: item\n}) {\n  let {\n    isListDroppable: isListDroppable,\n    state: state,\n    onAction: onAction\n  } = (0, $6w3ZV$useContext)($f85fb77f9d4cbc6c$export$870039b0abfe3de0);\n  return /*#__PURE__*/(0, $6w3ZV$react).createElement((0, $6w3ZV$react).Fragment, null, isListDroppable && state.collection.getKeyBefore(item.key) == null && /*#__PURE__*/(0, $6w3ZV$react).createElement((0, $41a60729487a82d7$export$2e2bcd8739ae039), {\n    key: \"root\"\n  }), isListDroppable && /*#__PURE__*/(0, $6w3ZV$react).createElement((0, $0a834ddbc989a3e3$export$2e2bcd8739ae039), {\n    key: `${item.key}-before`,\n    target: {\n      key: item.key,\n      type: 'item',\n      dropPosition: 'before'\n    }\n  }), /*#__PURE__*/(0, $6w3ZV$react).createElement((0, $d7c07ca2efc5ba02$export$c6bde0c04b033c0e), {\n    item: item,\n    isEmphasized: true,\n    hasActions: !!onAction\n  }), isListDroppable && /*#__PURE__*/(0, $6w3ZV$react).createElement((0, $0a834ddbc989a3e3$export$2e2bcd8739ae039), {\n    key: `${item.key}-after`,\n    target: {\n      key: item.key,\n      type: 'item',\n      dropPosition: 'after'\n    },\n    isPresentationOnly: state.collection.getKeyAfter(item.key) != null\n  }));\n}\nfunction $f85fb77f9d4cbc6c$var$LoadingView() {\n  let {\n    state: state\n  } = (0, $6w3ZV$useContext)($f85fb77f9d4cbc6c$export$870039b0abfe3de0);\n  let stringFormatter = (0, $6w3ZV$useLocalizedStringFormatter)((0, $parcel$interopDefault($6w3ZV$intlStringsmodulejs)), '@react-spectrum/list');\n  return /*#__PURE__*/(0, $6w3ZV$react).createElement($f85fb77f9d4cbc6c$var$CenteredWrapper, null, /*#__PURE__*/(0, $6w3ZV$react).createElement((0, $6w3ZV$ProgressCircle), {\n    isIndeterminate: true,\n    \"aria-label\": state.collection.size > 0 ? stringFormatter.format('loadingMore') : stringFormatter.format('loading')\n  }));\n}\nfunction $f85fb77f9d4cbc6c$var$EmptyState() {\n  let {\n    renderEmptyState: renderEmptyState\n  } = (0, $6w3ZV$useContext)($f85fb77f9d4cbc6c$export$870039b0abfe3de0);\n  let emptyState = renderEmptyState ? renderEmptyState() : null;\n  if (emptyState == null) return null;\n  return /*#__PURE__*/(0, $6w3ZV$react).createElement($f85fb77f9d4cbc6c$var$CenteredWrapper, null, emptyState);\n}\nfunction $f85fb77f9d4cbc6c$var$CenteredWrapper({\n  children: children\n}) {\n  let {\n    state: state\n  } = (0, $6w3ZV$useContext)($f85fb77f9d4cbc6c$export$870039b0abfe3de0);\n  return /*#__PURE__*/(0, $6w3ZV$react).createElement(\"div\", {\n    role: \"row\",\n    \"aria-rowindex\": state.collection.size + 1,\n    className: (0, $6w3ZV$classNames)((0, $parcel$interopDefault($6w3ZV$styles_cssmodulejs)), 'react-spectrum-ListView-centeredWrapper', {\n      'react-spectrum-ListView-centeredWrapper--loadingMore': state.collection.size > 0\n    })\n  }, /*#__PURE__*/(0, $6w3ZV$react).createElement(\"div\", {\n    role: \"gridcell\"\n  }, children));\n}\n/**\n * A ListView displays a list of interactive items, and allows a user to navigate, select, or perform an action.\n */\nconst $f85fb77f9d4cbc6c$export$84d0dd190d551cd1 = /*#__PURE__*/(0, $6w3ZV$react).forwardRef($f85fb77f9d4cbc6c$var$ListView);\nexport { $f85fb77f9d4cbc6c$export$870039b0abfe3de0 as ListViewContext, $f85fb77f9d4cbc6c$export$84d0dd190d551cd1 as ListView };","map":{"version":3,"names":["$f85fb77f9d4cbc6c$export$870039b0abfe3de0","$6w3ZV$react","createContext","$f85fb77f9d4cbc6c$var$ROW_HEIGHTS","compact","medium","large","regular","spacious","$f85fb77f9d4cbc6c$var$useListLayout","state","density","overflowMode","scale","$6w3ZV$useProvider","layout","$6w3ZV$useMemo","$bc6cc67dd6240ebd$export$dab781655dfbb7d3","estimatedRowHeight","$f85fb77f9d4cbc6c$var$ListView","props","ref","_dropState_target","loadingState","onLoadMore","isQuiet","onAction","dragAndDropHooks","renderEmptyState","otherProps","isListDraggable","useDraggableCollectionState","isListDroppable","useDroppableCollectionState","dragHooksProvided","$6w3ZV$useRef","dropHooksProvided","$6w3ZV$useEffect","current","console","warn","domRef","$6w3ZV$useDOMRef","$6w3ZV$useListState","selectionBehavior","selectionStyle","collection","selectionManager","isLoading","styleProps","$6w3ZV$useStyleProps","dragState","preview","useDraggableCollection","DragPreview","dropState","droppableCollection","isRootDropTarget","useDroppableCollection","keyboardDelegate","$6w3ZV$ListKeyboardDelegate","disabledKeys","draggingKeys","size","layoutDelegate","dropTargetDelegate","isDropTarget","type","gridProps","$6w3ZV$useGridList","isVirtualized","focusedKey","dropTargetKey","target","key","_state_collection_getKeyAfter","dropPosition","getKeyAfter","persistedKeys","Set","filter","k","isVerticalScrollbarVisible","setVerticalScollbarVisible","$6w3ZV$useState","isHorizontalScrollbarVisible","setHorizontalScollbarVisible","$6w3ZV$useLayoutEffect","clientWidth","offsetWidth","clientHeight","offsetHeight","hasAnyChildren","some","item","hasChildNodes","createElement","Provider","value","$6w3ZV$FocusScope","$6w3ZV$FocusRing","focusRingClass","$6w3ZV$classNames","$parcel$interopDefault","$6w3ZV$styles_cssmodulejs","$6w3ZV$Virtualizer","$6w3ZV$mergeProps","collectionProps","$6w3ZV$filterDOMProps","scrollDirection","className","layoutOptions","$6w3ZV$useCallback","$f85fb77f9d4cbc6c$var$Item","$f85fb77f9d4cbc6c$var$LoadingView","$f85fb77f9d4cbc6c$var$EmptyState","renderPreview","draggedKey","getItem","itemCount","itemHeight","getLayoutInfo","rect","height","$cd61e55c47e3c0f5$export$905ab40ac2179daa","$6w3ZV$useContext","Fragment","getKeyBefore","$41a60729487a82d7$export$2e2bcd8739ae039","$0a834ddbc989a3e3$export$2e2bcd8739ae039","$d7c07ca2efc5ba02$export$c6bde0c04b033c0e","isEmphasized","hasActions","isPresentationOnly","stringFormatter","$6w3ZV$useLocalizedStringFormatter","$6w3ZV$intlStringsmodulejs","$f85fb77f9d4cbc6c$var$CenteredWrapper","$6w3ZV$ProgressCircle","isIndeterminate","format","emptyState","children","role","$f85fb77f9d4cbc6c$export$84d0dd190d551cd1","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-spectrum/list/dist/packages/@react-spectrum/list/src/ListView.tsx"],"sourcesContent":["/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaGridListProps, useGridList} from '@react-aria/gridlist';\nimport {AsyncLoadable, DOMRef, Key, LoadingState, Node, SpectrumSelectionProps, StyleProps} from '@react-types/shared';\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport type {DragAndDropHooks} from '@react-spectrum/dnd';\nimport type {DraggableCollectionState, DroppableCollectionState} from '@react-stately/dnd';\nimport type {DroppableCollectionResult} from '@react-aria/dnd';\nimport {filterDOMProps, mergeProps, useLayoutEffect} from '@react-aria/utils';\nimport {FocusRing, FocusScope} from '@react-aria/focus';\nimport InsertionIndicator from './InsertionIndicator';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {ListKeyboardDelegate} from '@react-aria/selection';\nimport {ListState, useListState} from '@react-stately/list';\nimport listStyles from './styles.css';\nimport {ListViewItem} from './ListViewItem';\nimport {ListViewLayout} from './ListViewLayout';\nimport {ProgressCircle} from '@react-spectrum/progress';\nimport React, {JSX, ReactElement, useCallback, useContext, useEffect, useMemo, useRef, useState} from 'react';\nimport RootDropIndicator from './RootDropIndicator';\nimport {DragPreview as SpectrumDragPreview} from './DragPreview';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useProvider} from '@react-spectrum/provider';\nimport {Virtualizer} from '@react-aria/virtualizer';\n\nexport interface SpectrumListViewProps<T> extends Omit<AriaGridListProps<T>, 'keyboardNavigationBehavior'>, StyleProps, SpectrumSelectionProps, Omit<AsyncLoadable, 'isLoading'> {\n  /**\n   * Sets the amount of vertical padding within each cell.\n   * @default 'regular'\n   */\n  density?: 'compact' | 'regular' | 'spacious',\n  /** Whether the ListView should be displayed with a quiet style. */\n  isQuiet?: boolean,\n  /** The current loading state of the ListView. Determines whether or not the progress circle should be shown. */\n  loadingState?: LoadingState,\n  /**\n   * Sets the text behavior for the row contents.\n   * @default 'truncate'\n   */\n  overflowMode?: 'truncate' | 'wrap',\n  /** Sets what the ListView should render when there is no content to display. */\n  renderEmptyState?: () => JSX.Element,\n  /**\n   * Handler that is called when a user performs an action on an item. The exact user event depends on\n   * the collection's `selectionStyle` prop and the interaction modality.\n   */\n  onAction?: (key: Key) => void,\n  /**\n   * The drag and drop hooks returned by `useDragAndDrop` used to enable drag and drop behavior for the ListView.\n   */\n  dragAndDropHooks?: DragAndDropHooks['dragAndDropHooks']\n}\n\ninterface ListViewContextValue<T> {\n  state: ListState<T>,\n  dragState: DraggableCollectionState,\n  dropState: DroppableCollectionState,\n  dragAndDropHooks: DragAndDropHooks['dragAndDropHooks'],\n  onAction:(key: Key) => void,\n  isListDraggable: boolean,\n  isListDroppable: boolean,\n  layout: ListViewLayout<T>,\n  loadingState: LoadingState,\n  renderEmptyState?: () => JSX.Element\n}\n\nexport const ListViewContext = React.createContext<ListViewContextValue<unknown>>(null);\n\nconst ROW_HEIGHTS = {\n  compact: {\n    medium: 32,\n    large: 40\n  },\n  regular: {\n    medium: 40,\n    large: 50\n  },\n  spacious: {\n    medium: 48,\n    large: 60\n  }\n};\n\nfunction useListLayout<T>(state: ListState<T>, density: SpectrumListViewProps<T>['density'], overflowMode: SpectrumListViewProps<T>['overflowMode']) {\n  let {scale} = useProvider();\n  let layout = useMemo(() =>\n    new ListViewLayout<T>({\n      estimatedRowHeight: ROW_HEIGHTS[density][scale]\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    , [scale, density, overflowMode]);\n\n  return layout;\n}\n\nfunction ListView<T extends object>(props: SpectrumListViewProps<T>, ref: DOMRef<HTMLDivElement>) {\n  let {\n    density = 'regular',\n    loadingState,\n    onLoadMore,\n    isQuiet,\n    overflowMode = 'truncate',\n    onAction,\n    dragAndDropHooks,\n    renderEmptyState,\n    ...otherProps\n  } = props;\n  let isListDraggable = !!dragAndDropHooks?.useDraggableCollectionState;\n  let isListDroppable = !!dragAndDropHooks?.useDroppableCollectionState;\n  let dragHooksProvided = useRef(isListDraggable);\n  let dropHooksProvided = useRef(isListDroppable);\n  useEffect(() => {\n    if (dragHooksProvided.current !== isListDraggable) {\n      console.warn('Drag hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.');\n    }\n    if (dropHooksProvided.current !== isListDroppable) {\n      console.warn('Drop hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.');\n    }\n  }, [isListDraggable, isListDroppable]);\n\n  let domRef = useDOMRef(ref);\n  let state = useListState({\n    ...props,\n    selectionBehavior: props.selectionStyle === 'highlight' ? 'replace' : 'toggle'\n  });\n  let {collection, selectionManager} = state;\n  let isLoading = loadingState === 'loading' || loadingState === 'loadingMore';\n\n  let {styleProps} = useStyleProps(props);\n  let dragState: DraggableCollectionState;\n  let preview = useRef(null);\n  if (isListDraggable) {\n    dragState = dragAndDropHooks.useDraggableCollectionState({\n      collection,\n      selectionManager,\n      preview\n    });\n    dragAndDropHooks.useDraggableCollection({}, dragState, domRef);\n  }\n  let layout = useListLayout(\n    state,\n    props.density || 'regular',\n    overflowMode\n  );\n\n  let DragPreview = dragAndDropHooks?.DragPreview;\n  let dropState: DroppableCollectionState;\n  let droppableCollection: DroppableCollectionResult;\n  let isRootDropTarget: boolean;\n  if (isListDroppable) {\n    dropState = dragAndDropHooks.useDroppableCollectionState({\n      collection,\n      selectionManager\n    });\n    droppableCollection = dragAndDropHooks.useDroppableCollection({\n      keyboardDelegate: new ListKeyboardDelegate({\n        collection,\n        disabledKeys: dragState?.draggingKeys.size ? null : selectionManager.disabledKeys,\n        ref: domRef,\n        layoutDelegate: layout\n      }),\n      dropTargetDelegate: layout\n    }, dropState, domRef);\n\n    isRootDropTarget = dropState.isDropTarget({type: 'root'});\n  }\n\n  let {gridProps} = useGridList({\n    ...props,\n    isVirtualized: true,\n    layoutDelegate: layout,\n    onAction\n  }, state, domRef);\n\n  let focusedKey = selectionManager.focusedKey;\n  let dropTargetKey: Key | null = null;\n  if (dropState?.target?.type === 'item') {\n    dropTargetKey = dropState.target.key;\n    if (dropState.target.dropPosition === 'after') {\n      // Normalize to the \"before\" drop position since we only render those in the DOM.\n      dropTargetKey = state.collection.getKeyAfter(dropTargetKey) ?? dropTargetKey;\n    }\n  }\n\n  let persistedKeys = useMemo(() => {\n    return new Set([focusedKey, dropTargetKey].filter(k => k !== null));\n  }, [focusedKey, dropTargetKey]);\n\n  // wait for layout to get accurate measurements\n  let [isVerticalScrollbarVisible, setVerticalScollbarVisible] = useState(false);\n  let [isHorizontalScrollbarVisible, setHorizontalScollbarVisible] = useState(false);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useLayoutEffect(() => {\n    if (domRef.current) {\n      // 2 is the width of the border which is not part of the box size\n      setVerticalScollbarVisible(domRef.current.clientWidth + 2 < domRef.current.offsetWidth);\n      setHorizontalScollbarVisible(domRef.current.clientHeight + 2 < domRef.current.offsetHeight);\n    }\n  });\n\n  let hasAnyChildren = useMemo(() => [...collection].some(item => item.hasChildNodes), [collection]);\n\n  return (\n    <ListViewContext.Provider value={{state, dragState, dropState, dragAndDropHooks, onAction, isListDraggable, isListDroppable, layout, loadingState, renderEmptyState}}>\n      <FocusScope>\n        <FocusRing focusRingClass={classNames(listStyles, 'focus-ring')}>\n          <Virtualizer\n            {...mergeProps(isListDroppable && droppableCollection?.collectionProps, gridProps)}\n            {...filterDOMProps(otherProps)}\n            {...gridProps}\n            {...styleProps}\n            isLoading={isLoading}\n            onLoadMore={onLoadMore}\n            ref={domRef}\n            persistedKeys={persistedKeys}\n            scrollDirection=\"vertical\"\n            className={\n              classNames(\n                listStyles,\n                'react-spectrum-ListView',\n                `react-spectrum-ListView--${density}`,\n                'react-spectrum-ListView--emphasized',\n                {\n                  'react-spectrum-ListView--quiet': isQuiet,\n                  'react-spectrum-ListView--loadingMore': loadingState === 'loadingMore',\n                  'react-spectrum-ListView--draggable': !!isListDraggable,\n                  'react-spectrum-ListView--dropTarget': !!isRootDropTarget,\n                  'react-spectrum-ListView--isVerticalScrollbarVisible': isVerticalScrollbarVisible,\n                  'react-spectrum-ListView--isHorizontalScrollbarVisible': isHorizontalScrollbarVisible,\n                  'react-spectrum-ListView--hasAnyChildren': hasAnyChildren,\n                  'react-spectrum-ListView--wrap': overflowMode === 'wrap'\n                },\n                styleProps.className\n              )\n            }\n            layout={layout}\n            layoutOptions={useMemo(() => ({isLoading}), [isLoading])}\n            collection={collection}>\n            {useCallback((type, item) => {\n              if (type === 'item') {\n                return <Item item={item} />;\n              } else if (type === 'loader') {\n                return <LoadingView />;\n              } else if (type === 'placeholder') {\n                return <EmptyState />;\n              }\n            }, [])}\n          </Virtualizer>\n        </FocusRing>\n      </FocusScope>\n      {DragPreview && isListDraggable &&\n        <DragPreview ref={preview}>\n          {() => {\n            if (dragAndDropHooks.renderPreview) {\n              return dragAndDropHooks.renderPreview(dragState.draggingKeys, dragState.draggedKey);\n            }\n            let item = state.collection.getItem(dragState.draggedKey);\n            let itemCount = dragState.draggingKeys.size;\n            let itemHeight = layout.getLayoutInfo(dragState.draggedKey).rect.height;\n            return <SpectrumDragPreview item={item} itemCount={itemCount} itemHeight={itemHeight} density={density}  />;\n          }}\n        </DragPreview>\n      }\n    </ListViewContext.Provider>\n  );\n}\n\nfunction Item({item}: {item: Node<unknown>}) {\n  let {isListDroppable, state, onAction} = useContext(ListViewContext);\n  return (\n    <>\n      {isListDroppable && state.collection.getKeyBefore(item.key) == null &&\n        <RootDropIndicator key=\"root\" />\n      }\n      {isListDroppable &&\n        <InsertionIndicator\n          key={`${item.key}-before`}\n          target={{key: item.key, type: 'item', dropPosition: 'before'}} />\n      }\n      <ListViewItem item={item} isEmphasized hasActions={!!onAction} />\n      {isListDroppable &&\n        <InsertionIndicator\n          key={`${item.key}-after`}\n          target={{key: item.key, type: 'item', dropPosition: 'after'}}\n          isPresentationOnly={state.collection.getKeyAfter(item.key) != null} />\n      }\n    </>\n  );\n}\n\nfunction LoadingView() {\n  let {state} = useContext(ListViewContext);\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-spectrum/list');\n  return (\n    <CenteredWrapper>\n      <ProgressCircle\n        isIndeterminate\n        aria-label={state.collection.size > 0 ? stringFormatter.format('loadingMore') : stringFormatter.format('loading')} />\n    </CenteredWrapper>\n  );\n}\n\nfunction EmptyState() {\n  let {renderEmptyState} = useContext(ListViewContext);\n  let emptyState = renderEmptyState ? renderEmptyState() : null;\n  if (emptyState == null) {\n    return null;\n  }\n\n  return (\n    <CenteredWrapper>\n      {emptyState}\n    </CenteredWrapper>\n  );\n}\n\nfunction CenteredWrapper({children}) {\n  let {state} = useContext(ListViewContext);\n  return (\n    <div\n      role=\"row\"\n      aria-rowindex={state.collection.size + 1}\n      className={\n        classNames(\n          listStyles,\n          'react-spectrum-ListView-centeredWrapper',\n          {\n            'react-spectrum-ListView-centeredWrapper--loadingMore': state.collection.size > 0\n          }\n        )}>\n      <div role=\"gridcell\">\n        {children}\n      </div>\n    </div>\n  );\n}\n\n/**\n * A ListView displays a list of interactive items, and allows a user to navigate, select, or perform an action.\n */\nconst _ListView = React.forwardRef(ListView) as <T>(props: SpectrumListViewProps<T> & {ref?: DOMRef<HTMLDivElement>}) => ReactElement;\nexport {_ListView as ListView};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;AA6EO,MAAMA,yCAAA,gBAAkB,IAAAC,YAAI,EAAEC,aAAa,CAAgC;AAElF,MAAMC,iCAAA,GAAc;EAClBC,OAAA,EAAS;IACPC,MAAA,EAAQ;IACRC,KAAA,EAAO;EACT;EACAC,OAAA,EAAS;IACPF,MAAA,EAAQ;IACRC,KAAA,EAAO;EACT;EACAE,QAAA,EAAU;IACRH,MAAA,EAAQ;IACRC,KAAA,EAAO;EACT;AACF;AAEA,SAASG,oCAAiBC,KAAmB,EAAEC,OAA4C,EAAEC,YAAsD;EACjJ,IAAI;IAAAC,KAAA,EAACA;EAAK,CAAC,GAAG,IAAAC,kBAAU;EACxB,IAAIC,MAAA,GAAS,IAAAC,cAAM,EAAE,MACnB,KAAI,GAAAC,yCAAa,EAAK;IACpBC,kBAAA,EAAoBf,iCAAW,CAACQ,OAAA,CAAQ,CAACE,KAAA;EAC3C,IAEE,CAACA,KAAA,EAAOF,OAAA,EAASC,YAAA,CAAa;EAElC,OAAOG,MAAA;AACT;AAEA,SAASI,+BAA2BC,KAA+B,EAAEC,GAA2B;MAiF1FC,iBAAA;EAhFJ,IAAI;IACFX,OAAA,GAAU;IAAAY,YAAA,EACVA,YAAY;IAAAC,UAAA,EACZA,UAAU;IAAAC,OAAA,EACVA,OAAO;IACPb,YAAA,GAAe;IAAAc,QAAA,EACfA,QAAQ;IAAAC,gBAAA,EACRA,gBAAgB;IAAAC,gBAAA,EAChBA,gBAAgB;IAChB,GAAGC;EAAA,CACJ,GAAGT,KAAA;EACJ,IAAIU,eAAA,GAAkB,CAAC,EAACH,gBAAA,aAAAA,gBAAA,uBAAAA,gBAAA,CAAkBI,2BAA2B;EACrE,IAAIC,eAAA,GAAkB,CAAC,EAACL,gBAAA,aAAAA,gBAAA,uBAAAA,gBAAA,CAAkBM,2BAA2B;EACrE,IAAIC,iBAAA,GAAoB,IAAAC,aAAK,EAAEL,eAAA;EAC/B,IAAIM,iBAAA,GAAoB,IAAAD,aAAK,EAAEH,eAAA;EAC/B,IAAAK,gBAAQ,EAAE;IACR,IAAIH,iBAAA,CAAkBI,OAAO,KAAKR,eAAA,EAChCS,OAAA,CAAQC,IAAI,CAAC;IAEf,IAAIJ,iBAAA,CAAkBE,OAAO,KAAKN,eAAA,EAChCO,OAAA,CAAQC,IAAI,CAAC;EAEjB,GAAG,CAACV,eAAA,EAAiBE,eAAA,CAAgB;EAErC,IAAIS,MAAA,GAAS,IAAAC,gBAAQ,EAAErB,GAAA;EACvB,IAAIX,KAAA,GAAQ,IAAAiC,mBAAW,EAAE;IACvB,GAAGvB,KAAK;IACRwB,iBAAA,EAAmBxB,KAAA,CAAMyB,cAAc,KAAK,cAAc,YAAY;EACxE;EACA,IAAI;IAAAC,UAAA,EAACA,UAAU;IAAAC,gBAAA,EAAEA;EAAgB,CAAC,GAAGrC,KAAA;EACrC,IAAIsC,SAAA,GAAYzB,YAAA,KAAiB,aAAaA,YAAA,KAAiB;EAE/D,IAAI;IAAA0B,UAAA,EAACA;EAAU,CAAC,GAAG,IAAAC,oBAAY,EAAE9B,KAAA;EACjC,IAAI+B,SAAA;EACJ,IAAIC,OAAA,GAAU,IAAAjB,aAAK,EAAE;EACrB,IAAIL,eAAA,EAAiB;IACnBqB,SAAA,GAAYxB,gBAAA,CAAiBI,2BAA2B,CAAC;kBACvDe,UAAA;wBACAC,gBAAA;eACAK;IACF;IACAzB,gBAAA,CAAiB0B,sBAAsB,CAAC,CAAC,GAAGF,SAAA,EAAWV,MAAA;EACzD;EACA,IAAI1B,MAAA,GAASN,mCAAA,CACXC,KAAA,EACAU,KAAA,CAAMT,OAAO,IAAI,WACjBC,YAAA;EAGF,IAAI0C,WAAA,GAAc3B,gBAAA,aAAAA,gBAAA,uBAAAA,gBAAA,CAAkB2B,WAAW;EAC/C,IAAIC,SAAA;EACJ,IAAIC,mBAAA;EACJ,IAAIC,gBAAA;EACJ,IAAIzB,eAAA,EAAiB;IACnBuB,SAAA,GAAY5B,gBAAA,CAAiBM,2BAA2B,CAAC;kBACvDa,UAAA;wBACAC;IACF;IACAS,mBAAA,GAAsB7B,gBAAA,CAAiB+B,sBAAsB,CAAC;MAC5DC,gBAAA,EAAkB,KAAI,GAAAC,2BAAmB,EAAE;oBACzCd,UAAA;QACAe,YAAA,EAAc,CAAAV,SAAA,aAAAA,SAAA,uBAAAA,SAAA,CAAWW,YAAY,CAACC,IAAI,IAAG,OAAOhB,gBAAA,CAAiBc,YAAY;QACjFxC,GAAA,EAAKoB,MAAA;QACLuB,cAAA,EAAgBjD;MAClB;MACAkD,kBAAA,EAAoBlD;IACtB,GAAGwC,SAAA,EAAWd,MAAA;IAEdgB,gBAAA,GAAmBF,SAAA,CAAUW,YAAY,CAAC;MAACC,IAAA,EAAM;IAAM;EACzD;EAEA,IAAI;IAAAC,SAAA,EAACA;EAAS,CAAC,GAAG,IAAAC,kBAAU,EAAE;IAC5B,GAAGjD,KAAK;IACRkD,aAAA,EAAe;IACfN,cAAA,EAAgBjD,MAAA;cAChBW;EACF,GAAGhB,KAAA,EAAO+B,MAAA;EAEV,IAAI8B,UAAA,GAAaxB,gBAAA,CAAiBwB,UAAU;EAC5C,IAAIC,aAAA,GAA4B;EAChC,IAAI,CAAAjB,SAAA,aAAAA,SAAA,wBAAAjC,iBAAA,GAAAiC,SAAA,CAAWkB,MAAM,cAAjBnD,iBAAA,uBAAAA,iBAAA,CAAmB6C,IAAI,MAAK,QAAQ;IACtCK,aAAA,GAAgBjB,SAAA,CAAUkB,MAAM,CAACC,GAAG;QAGlBC,6BAAA;IAFlB,IAAIpB,SAAA,CAAUkB,MAAM,CAACG,YAAY,KAAK;MACpC;MACAJ,aAAA,GAAgB,CAAAG,6BAAA,GAAAjE,KAAA,CAAMoC,UAAU,CAAC+B,WAAW,CAACL,aAAA,eAA7BG,6BAAA,cAAAA,6BAAA,GAA+CH,aAAA;EAEnE;EAEA,IAAIM,aAAA,GAAgB,IAAA9D,cAAM,EAAE;IAC1B,OAAO,IAAI+D,GAAA,CAAI,CAACR,UAAA,EAAYC,aAAA,CAAc,CAACQ,MAAM,CAACC,CAAA,IAAKA,CAAA,KAAM;EAC/D,GAAG,CAACV,UAAA,EAAYC,aAAA,CAAc;EAE9B;EACA,IAAI,CAACU,0BAAA,EAA4BC,0BAAA,CAA2B,GAAG,IAAAC,eAAO,EAAE;EACxE,IAAI,CAACC,4BAAA,EAA8BC,4BAAA,CAA6B,GAAG,IAAAF,eAAO,EAAE;EAC5E;EACA,IAAAG,sBAAc,EAAE;IACd,IAAI9C,MAAA,CAAOH,OAAO,EAAE;MAClB;MACA6C,0BAAA,CAA2B1C,MAAA,CAAOH,OAAO,CAACkD,WAAW,GAAG,IAAI/C,MAAA,CAAOH,OAAO,CAACmD,WAAW;MACtFH,4BAAA,CAA6B7C,MAAA,CAAOH,OAAO,CAACoD,YAAY,GAAG,IAAIjD,MAAA,CAAOH,OAAO,CAACqD,YAAY;IAC5F;EACF;EAEA,IAAIC,cAAA,GAAiB,IAAA5E,cAAM,EAAE,MAAM,C,GAAI8B,UAAA,CAAW,CAAC+C,IAAI,CAACC,IAAA,IAAQA,IAAA,CAAKC,aAAa,GAAG,CAACjD,UAAA,CAAW;EAEjG,oBACE,IAAA7C,YAAA,EAAA+F,aAAA,CAAChG,yCAAA,CAAgBiG,QAAQ;IAACC,KAAA,EAAO;aAACxF,KAAA;iBAAOyC,SAAA;iBAAWI,SAAA;wBAAW5B,gBAAA;gBAAkBD,QAAA;uBAAUI,eAAA;uBAAiBE,eAAA;cAAiBjB,MAAA;oBAAQQ,YAAA;wBAAcK;IAAgB;kBACjK,IAAA3B,YAAA,EAAA+F,aAAA,EAAC,GAAAG,iBAAS,sBACR,IAAAlG,YAAA,EAAA+F,aAAA,EAAC,GAAAI,gBAAQ;IAAEC,cAAA,EAAgB,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,yBAAA,CAAS,GAAG;kBAChD,IAAAvG,YAAA,EAAA+F,aAAA,EAAC,GAAAS,kBAAU;IACR,GAAG,IAAAC,iBAAS,EAAE1E,eAAA,KAAmBwB,mBAAA,aAAAA,mBAAA,uBAAAA,mBAAA,CAAqBmD,eAAe,GAAEvC,SAAA,CAAU;IACjF,GAAG,IAAAwC,qBAAa,EAAE/E,UAAA,CAAW;IAC7B,GAAGuC,SAAS;IACZ,GAAGnB,UAAU;IACdD,SAAA,EAAWA,SAAA;IACXxB,UAAA,EAAYA,UAAA;IACZH,GAAA,EAAKoB,MAAA;IACLqC,aAAA,EAAeA,aAAA;IACf+B,eAAA,EAAgB;IAChBC,SAAA,EACE,IAAAR,iBAAS,GACP,GAAAC,sBAAA,CAAAC,yBAAA,CAAS,GACT,2BACA,4BAA4B7F,OAAA,EAAS,EACrC,uCACA;MACE,kCAAkCc,OAAA;MAClC,wCAAwCF,YAAA,KAAiB;MACzD,sCAAsC,CAAC,CAACO,eAAA;MACxC,uCAAuC,CAAC,CAAC2B,gBAAA;MACzC,uDAAuDyB,0BAAA;MACvD,yDAAyDG,4BAAA;MACzD,2CAA2CO,cAAA;MAC3C,iCAAiChF,YAAA,KAAiB;IACpD,GACAqC,UAAA,CAAW6D,SAAS;IAGxB/F,MAAA,EAAQA,MAAA;IACRgG,aAAA,EAAe,IAAA/F,cAAM,EAAE,OAAO;iBAACgC;IAAS,IAAI,CAACA,SAAA,CAAU;IACvDF,UAAA,EAAYA;KACX,IAAAkE,kBAAU,EAAE,CAAC7C,IAAA,EAAM2B,IAAA;IAClB,IAAI3B,IAAA,KAAS,QACX,oBAAO,IAAAlE,YAAA,EAAA+F,aAAA,CAACiB,0BAAA;MAAKnB,IAAA,EAAMA;YACd,IAAI3B,IAAA,KAAS,UAClB,oBAAO,IAAAlE,YAAA,EAAA+F,aAAA,CAACkB,iCAAA,aACH,IAAI/C,IAAA,KAAS,eAClB,oBAAO,IAAAlE,YAAA,EAAA+F,aAAA,CAACmB,gCAAA;EAEZ,GAAG,EAAE,MAIV7D,WAAA,IAAexB,eAAA,iBACd,IAAA7B,YAAA,EAAA+F,aAAA,CAAC1C,WAAA;IAAYjC,GAAA,EAAK+B;KACf;IACC,IAAIzB,gBAAA,CAAiByF,aAAa,EAChC,OAAOzF,gBAAA,CAAiByF,aAAa,CAACjE,SAAA,CAAUW,YAAY,EAAEX,SAAA,CAAUkE,UAAU;IAEpF,IAAIvB,IAAA,GAAOpF,KAAA,CAAMoC,UAAU,CAACwE,OAAO,CAACnE,SAAA,CAAUkE,UAAU;IACxD,IAAIE,SAAA,GAAYpE,SAAA,CAAUW,YAAY,CAACC,IAAI;IAC3C,IAAIyD,UAAA,GAAazG,MAAA,CAAO0G,aAAa,CAACtE,SAAA,CAAUkE,UAAU,EAAEK,IAAI,CAACC,MAAM;IACvE,oBAAO,IAAA1H,YAAA,EAAA+F,aAAA,EAAC,GAAA4B,yCAAkB;MAAE9B,IAAA,EAAMA,IAAA;MAAMyB,SAAA,EAAWA,SAAA;MAAWC,UAAA,EAAYA,UAAA;MAAY7G,OAAA,EAASA;;EACjG;AAKV;AAEA,SAASsG,2BAAK;EAAAnB,IAAA,EAACA;AAAI,CAAwB;EACzC,IAAI;IAAA9D,eAAA,EAACA,eAAe;IAAAtB,KAAA,EAAEA,KAAK;IAAAgB,QAAA,EAAEA;EAAQ,CAAC,GAAG,IAAAmG,iBAAS,EAAE7H,yCAAA;EACpD,oBACE,IAAAC,YAAA,EAAA+F,aAAA,KAAA/F,YAAA,EAAA6H,QAAA,QACG9F,eAAA,IAAmBtB,KAAA,CAAMoC,UAAU,CAACiF,YAAY,CAACjC,IAAA,CAAKpB,GAAG,KAAK,qBAC7D,IAAAzE,YAAA,EAAA+F,aAAA,EAAC,GAAAgC,wCAAgB;IAAEtD,GAAA,EAAI;MAExB1C,eAAA,iBACC,IAAA/B,YAAA,EAAA+F,aAAA,EAAC,GAAAiC,wCAAiB;IAChBvD,GAAA,EAAK,GAAGoB,IAAA,CAAKpB,GAAG,SAAS;IACzBD,MAAA,EAAQ;MAACC,GAAA,EAAKoB,IAAA,CAAKpB,GAAG;MAAEP,IAAA,EAAM;MAAQS,YAAA,EAAc;IAAQ;mBAEhE,IAAA3E,YAAA,EAAA+F,aAAA,EAAC,GAAAkC,yCAAW;IAAEpC,IAAA,EAAMA,IAAA;IAAMqC,YAAA;IAAaC,UAAA,EAAY,CAAC,CAAC1G;MACpDM,eAAA,iBACC,IAAA/B,YAAA,EAAA+F,aAAA,EAAC,GAAAiC,wCAAiB;IAChBvD,GAAA,EAAK,GAAGoB,IAAA,CAAKpB,GAAG,QAAQ;IACxBD,MAAA,EAAQ;MAACC,GAAA,EAAKoB,IAAA,CAAKpB,GAAG;MAAEP,IAAA,EAAM;MAAQS,YAAA,EAAc;IAAO;IAC3DyD,kBAAA,EAAoB3H,KAAA,CAAMoC,UAAU,CAAC+B,WAAW,CAACiB,IAAA,CAAKpB,GAAG,KAAK;;AAIxE;AAEA,SAASwC,kCAAA;EACP,IAAI;IAAAxG,KAAA,EAACA;EAAK,CAAC,GAAG,IAAAmH,iBAAS,EAAE7H,yCAAA;EACzB,IAAIsI,eAAA,GAAkB,IAAAC,kCAA0B,GAAE,GAAAhC,sBAAA,CAAAiC,0BAAA,CAAW,GAAG;EAChE,oBACE,IAAAvI,YAAA,EAAA+F,aAAA,CAACyC,qCAAA,qBACC,IAAAxI,YAAA,EAAA+F,aAAA,EAAC,GAAA0C,qBAAa;IACZC,eAAA;IACA,cAAYjI,KAAA,CAAMoC,UAAU,CAACiB,IAAI,GAAG,IAAIuE,eAAA,CAAgBM,MAAM,CAAC,iBAAiBN,eAAA,CAAgBM,MAAM,CAAC;;AAG/G;AAEA,SAASzB,iCAAA;EACP,IAAI;IAAAvF,gBAAA,EAACA;EAAgB,CAAC,GAAG,IAAAiG,iBAAS,EAAE7H,yCAAA;EACpC,IAAI6I,UAAA,GAAajH,gBAAA,GAAmBA,gBAAA,KAAqB;EACzD,IAAIiH,UAAA,IAAc,MAChB,OAAO;EAGT,oBACE,IAAA5I,YAAA,EAAA+F,aAAA,CAACyC,qCAAA,QACEI,UAAA;AAGP;AAEA,SAASJ,sCAAgB;EAAAK,QAAA,EAACA;AAAQ,CAAC;EACjC,IAAI;IAAApI,KAAA,EAACA;EAAK,CAAC,GAAG,IAAAmH,iBAAS,EAAE7H,yCAAA;EACzB,oBACE,IAAAC,YAAA,EAAA+F,aAAA,CAAC;IACC+C,IAAA,EAAK;IACL,iBAAerI,KAAA,CAAMoC,UAAU,CAACiB,IAAI,GAAG;IACvC+C,SAAA,EACE,IAAAR,iBAAS,GACP,GAAAC,sBAAA,CAAAC,yBAAA,CAAS,GACT,2CACA;MACE,wDAAwD9F,KAAA,CAAMoC,UAAU,CAACiB,IAAI,GAAG;IAClF;kBAEJ,IAAA9D,YAAA,EAAA+F,aAAA,CAAC;IAAI+C,IAAA,EAAK;KACPD,QAAA;AAIT;AAEA;;;AAGA,MAAME,yCAAA,gBAAY,IAAA/I,YAAI,EAAEgJ,UAAU,CAAC9H,8BAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
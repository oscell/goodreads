{"ast":null,"code":"import \"./vars.69a32de8.css\";\nimport $huWmf$helptext_vars_cssmodulejs from \"./helptext_vars_css.mjs\";\nimport $huWmf$spectrumiconsuiAlertMedium from \"@spectrum-icons/ui/AlertMedium\";\nimport { useDOMRef as $huWmf$useDOMRef, useStyleProps as $huWmf$useStyleProps, classNames as $huWmf$classNames } from \"@react-spectrum/utils\";\nimport $huWmf$react from \"react\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $8e50676506611310$var$HelpText(props, ref) {\n  let {\n    description: description,\n    errorMessage: errorMessage,\n    validationState: validationState,\n    isInvalid: isInvalid,\n    isDisabled: isDisabled,\n    showErrorIcon: showErrorIcon,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  } = props;\n  let domRef = (0, $huWmf$useDOMRef)(ref);\n  let isErrorMessage = errorMessage && (isInvalid || validationState === 'invalid');\n  let {\n    styleProps: styleProps\n  } = (0, $huWmf$useStyleProps)(props);\n  return /*#__PURE__*/(0, $huWmf$react).createElement(\"div\", {\n    ...styleProps,\n    className: (0, $huWmf$classNames)((0, $parcel$interopDefault($huWmf$helptext_vars_cssmodulejs)), 'spectrum-HelpText', `spectrum-HelpText--${isErrorMessage ? 'negative' : 'neutral'}`, {\n      'is-disabled': isDisabled\n    }, styleProps.className),\n    ref: domRef\n  }, isErrorMessage ? /*#__PURE__*/(0, $huWmf$react).createElement((0, $huWmf$react).Fragment, null, showErrorIcon && /*#__PURE__*/(0, $huWmf$react).createElement((0, $huWmf$spectrumiconsuiAlertMedium), {\n    UNSAFE_className: (0, $huWmf$classNames)((0, $parcel$interopDefault($huWmf$helptext_vars_cssmodulejs)), 'spectrum-HelpText-validationIcon')\n  }), /*#__PURE__*/(0, $huWmf$react).createElement(\"div\", {\n    ...errorMessageProps,\n    className: (0, $huWmf$classNames)((0, $parcel$interopDefault($huWmf$helptext_vars_cssmodulejs)), 'spectrum-HelpText-text')\n  }, errorMessage)) : /*#__PURE__*/(0, $huWmf$react).createElement(\"div\", {\n    ...descriptionProps,\n    className: (0, $huWmf$classNames)((0, $parcel$interopDefault($huWmf$helptext_vars_cssmodulejs)), 'spectrum-HelpText-text')\n  }, description));\n}\n/**\n * Help text provides either an informative description or an error message that gives more context about what a user needs to input. It's commonly used in forms.\n */\nconst $8e50676506611310$export$a67c0bc59081311a = /*#__PURE__*/(0, $huWmf$react).forwardRef($8e50676506611310$var$HelpText);\nexport { $8e50676506611310$export$a67c0bc59081311a as HelpText };","map":{"version":3,"names":["$8e50676506611310$var$HelpText","props","ref","description","errorMessage","validationState","isInvalid","isDisabled","showErrorIcon","descriptionProps","errorMessageProps","domRef","$huWmf$useDOMRef","isErrorMessage","styleProps","$huWmf$useStyleProps","$huWmf$react","createElement","className","$huWmf$classNames","$parcel$interopDefault","$huWmf$helptext_vars_cssmodulejs","Fragment","$huWmf$spectrumiconsuiAlertMedium","UNSAFE_className","$8e50676506611310$export$a67c0bc59081311a","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-spectrum/label/dist/packages/@react-spectrum/label/src/HelpText.tsx"],"sourcesContent":["/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport AlertMedium from '@spectrum-icons/ui/AlertMedium';\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef, SpectrumFieldValidation, SpectrumHelpTextProps, StyleProps, Validation} from '@react-types/shared';\nimport React, {HTMLAttributes, ReactNode} from 'react';\nimport styles from '@adobe/spectrum-css-temp/components/helptext/vars.css';\n\ninterface HelpTextProps extends Omit<SpectrumHelpTextProps, 'errorMessage'>, Omit<Validation<any>, 'validationState'>, SpectrumFieldValidation<any>, StyleProps {\n  /** Props for the help text description element. */\n  descriptionProps?: HTMLAttributes<HTMLElement>,\n  /** Props for the help text error message element. */\n  errorMessageProps?: HTMLAttributes<HTMLElement>,\n  /** An error message for the field. */\n  errorMessage?: ReactNode\n}\n\nfunction HelpText(props: HelpTextProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    description,\n    errorMessage,\n    validationState,\n    isInvalid,\n    isDisabled,\n    showErrorIcon,\n    descriptionProps,\n    errorMessageProps\n  } = props;\n  let domRef = useDOMRef(ref);\n  let isErrorMessage = errorMessage && (isInvalid || validationState === 'invalid');\n  let {styleProps} = useStyleProps(props);\n\n  return (\n    <div\n      {...styleProps}\n      className={classNames(\n        styles,\n        'spectrum-HelpText',\n        `spectrum-HelpText--${isErrorMessage ? 'negative' : 'neutral'}`,\n        {'is-disabled': isDisabled},\n        styleProps.className\n      )}\n      ref={domRef}>\n      {isErrorMessage ? (\n        <>\n          {showErrorIcon && <AlertMedium UNSAFE_className={classNames(styles, 'spectrum-HelpText-validationIcon')} />}\n          <div {...errorMessageProps} className={classNames(styles, 'spectrum-HelpText-text')}>\n            {errorMessage}\n          </div>\n        </>\n      ) : (\n        <div {...descriptionProps} className={classNames(styles, 'spectrum-HelpText-text')}>\n          {description}\n        </div>\n      )}\n    </div>\n  );\n}\n\n/**\n * Help text provides either an informative description or an error message that gives more context about what a user needs to input. It's commonly used in forms.\n */\nconst _HelpText = React.forwardRef(HelpText);\nexport {_HelpText as HelpText};\n"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;AA2BA,SAASA,+BAASC,KAAoB,EAAEC,GAA2B;EACjE,IAAI;IAAAC,WAAA,EACFA,WAAW;IAAAC,YAAA,EACXA,YAAY;IAAAC,eAAA,EACZA,eAAe;IAAAC,SAAA,EACfA,SAAS;IAAAC,UAAA,EACTA,UAAU;IAAAC,aAAA,EACVA,aAAa;IAAAC,gBAAA,EACbA,gBAAgB;IAAAC,iBAAA,EAChBA;EAAiB,CAClB,GAAGT,KAAA;EACJ,IAAIU,MAAA,GAAS,IAAAC,gBAAQ,EAAEV,GAAA;EACvB,IAAIW,cAAA,GAAiBT,YAAA,KAAiBE,SAAA,IAAaD,eAAA,KAAoB,SAAQ;EAC/E,IAAI;IAAAS,UAAA,EAACA;EAAU,CAAC,GAAG,IAAAC,oBAAY,EAAEd,KAAA;EAEjC,oBACE,IAAAe,YAAA,EAAAC,aAAA,CAAC;IACE,GAAGH,UAAU;IACdI,SAAA,EAAW,IAAAC,iBAAS,GAClB,GAAAC,sBAAA,CAAAC,gCAAA,CAAK,GACL,qBACA,sBAAsBR,cAAA,GAAiB,aAAa,WAAW,EAC/D;MAAC,eAAeN;IAAU,GAC1BO,UAAA,CAAWI,SAAS;IAEtBhB,GAAA,EAAKS;KACJE,cAAA,gBACC,IAAAG,YAAA,EAAAC,aAAA,KAAAD,YAAA,EAAAM,QAAA,QACGd,aAAA,iBAAiB,IAAAQ,YAAA,EAAAC,aAAA,EAAC,GAAAM,iCAAU;IAAEC,gBAAA,EAAkB,IAAAL,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,gCAAA,CAAK,GAAG;mBACpE,IAAAL,YAAA,EAAAC,aAAA,CAAC;IAAK,GAAGP,iBAAiB;IAAEQ,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,gCAAA,CAAK,GAAG;KACvDjB,YAAA,kBAIL,IAAAY,YAAA,EAAAC,aAAA,CAAC;IAAK,GAAGR,gBAAgB;IAAES,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,gCAAA,CAAK,GAAG;KACtDlB,WAAA;AAKX;AAEA;;;AAGA,MAAMsB,yCAAA,gBAAY,IAAAT,YAAI,EAAEU,UAAU,CAAC1B,8BAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { snippet, reverseSnippet, highlight, reverseHighlight, insights, getInsightsAnonymousUserToken } from \"./helpers/index.js\";\nimport { createInfiniteHitsSessionStorageCache } from \"./lib/infiniteHitsCache/index.js\";\nimport InstantSearch from \"./lib/InstantSearch.js\";\nimport { deprecate } from \"./lib/utils/index.js\";\nimport version from \"./lib/version.js\";\n/**\n * InstantSearch is the main component of InstantSearch.js. This object\n * manages the widget and lets you add new ones.\n *\n * Two parameters are required to get you started with InstantSearch.js:\n *  - `indexName`: the main index that you will use for your new search UI\n *  - `searchClient`: the search client to plug to InstantSearch.js\n *\n * The [search client provided by Algolia](algolia.com/doc/api-client/getting-started/what-is-the-api-client/javascript/)\n * needs an `appId` and an `apiKey`. Those parameters can be found in your\n * [Algolia dashboard](https://www.algolia.com/api-keys).\n *\n * If you want to get up and running quickly with InstantSearch.js, have a\n * look at the [getting started](https://www.algolia.com/doc/guides/building-search-ui/getting-started/js/).\n */\nvar instantsearch = function instantsearch(options) {\n  return new InstantSearch(options);\n};\ninstantsearch.version = version;\ninstantsearch.createInfiniteHitsSessionStorageCache = deprecate(createInfiniteHitsSessionStorageCache, \"import { createInfiniteHitsSessionStorageCache } from 'instantsearch.js/es/lib/infiniteHitsCache'\");\ninstantsearch.highlight = deprecate(highlight, \"import { highlight } from 'instantsearch.js/es/helpers'\");\ninstantsearch.reverseHighlight = deprecate(reverseHighlight, \"import { reverseHighlight } from 'instantsearch.js/es/helpers'\");\ninstantsearch.snippet = deprecate(snippet, \"import { snippet } from 'instantsearch.js/es/helpers'\");\ninstantsearch.reverseSnippet = deprecate(reverseSnippet, \"import { reverseSnippet } from 'instantsearch.js/es/helpers'\");\ninstantsearch.insights = insights;\ninstantsearch.getInsightsAnonymousUserToken = getInsightsAnonymousUserToken;\nObject.defineProperty(instantsearch, 'widgets', {\n  get: function get() {\n    throw new ReferenceError(\"\\\"instantsearch.widgets\\\" are not available from the ES build.\\n\\nTo import the widgets:\\n\\nimport { searchBox } from 'instantsearch.js/es/widgets'\");\n  }\n});\nObject.defineProperty(instantsearch, 'connectors', {\n  get: function get() {\n    throw new ReferenceError(\"\\\"instantsearch.connectors\\\" are not available from the ES build.\\n\\nTo import the connectors:\\n\\nimport { connectSearchBox } from 'instantsearch.js/es/connectors'\");\n  }\n});\nObject.defineProperty(instantsearch, 'templates', {\n  get: function get() {\n    throw new ReferenceError(\"\\\"instantsearch.templates\\\" are not available from the ES build.\\n\\nTo import the templates:\\n\\nimport { carousel } from 'instantsearch.js/es/templates'\");\n  }\n});\nexport default instantsearch;\nexport * from \"./types/index.js\";","map":{"version":3,"names":["snippet","reverseSnippet","highlight","reverseHighlight","insights","getInsightsAnonymousUserToken","createInfiniteHitsSessionStorageCache","InstantSearch","deprecate","version","instantsearch","options","Object","defineProperty","get","ReferenceError"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/instantsearch.js/es/index.js"],"sourcesContent":["import { snippet, reverseSnippet, highlight, reverseHighlight, insights, getInsightsAnonymousUserToken } from \"./helpers/index.js\";\nimport { createInfiniteHitsSessionStorageCache } from \"./lib/infiniteHitsCache/index.js\";\nimport InstantSearch from \"./lib/InstantSearch.js\";\nimport { deprecate } from \"./lib/utils/index.js\";\nimport version from \"./lib/version.js\";\n/**\n * InstantSearch is the main component of InstantSearch.js. This object\n * manages the widget and lets you add new ones.\n *\n * Two parameters are required to get you started with InstantSearch.js:\n *  - `indexName`: the main index that you will use for your new search UI\n *  - `searchClient`: the search client to plug to InstantSearch.js\n *\n * The [search client provided by Algolia](algolia.com/doc/api-client/getting-started/what-is-the-api-client/javascript/)\n * needs an `appId` and an `apiKey`. Those parameters can be found in your\n * [Algolia dashboard](https://www.algolia.com/api-keys).\n *\n * If you want to get up and running quickly with InstantSearch.js, have a\n * look at the [getting started](https://www.algolia.com/doc/guides/building-search-ui/getting-started/js/).\n */\nvar instantsearch = function instantsearch(options) {\n  return new InstantSearch(options);\n};\ninstantsearch.version = version;\ninstantsearch.createInfiniteHitsSessionStorageCache = deprecate(createInfiniteHitsSessionStorageCache, \"import { createInfiniteHitsSessionStorageCache } from 'instantsearch.js/es/lib/infiniteHitsCache'\");\ninstantsearch.highlight = deprecate(highlight, \"import { highlight } from 'instantsearch.js/es/helpers'\");\ninstantsearch.reverseHighlight = deprecate(reverseHighlight, \"import { reverseHighlight } from 'instantsearch.js/es/helpers'\");\ninstantsearch.snippet = deprecate(snippet, \"import { snippet } from 'instantsearch.js/es/helpers'\");\ninstantsearch.reverseSnippet = deprecate(reverseSnippet, \"import { reverseSnippet } from 'instantsearch.js/es/helpers'\");\ninstantsearch.insights = insights;\ninstantsearch.getInsightsAnonymousUserToken = getInsightsAnonymousUserToken;\nObject.defineProperty(instantsearch, 'widgets', {\n  get: function get() {\n    throw new ReferenceError(\"\\\"instantsearch.widgets\\\" are not available from the ES build.\\n\\nTo import the widgets:\\n\\nimport { searchBox } from 'instantsearch.js/es/widgets'\");\n  }\n});\nObject.defineProperty(instantsearch, 'connectors', {\n  get: function get() {\n    throw new ReferenceError(\"\\\"instantsearch.connectors\\\" are not available from the ES build.\\n\\nTo import the connectors:\\n\\nimport { connectSearchBox } from 'instantsearch.js/es/connectors'\");\n  }\n});\nObject.defineProperty(instantsearch, 'templates', {\n  get: function get() {\n    throw new ReferenceError(\"\\\"instantsearch.templates\\\" are not available from the ES build.\\n\\nTo import the templates:\\n\\nimport { carousel } from 'instantsearch.js/es/templates'\");\n  }\n});\nexport default instantsearch;\nexport * from \"./types/index.js\";\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,cAAc,EAAEC,SAAS,EAAEC,gBAAgB,EAAEC,QAAQ,EAAEC,6BAA6B,QAAQ,oBAAoB;AAClI,SAASC,qCAAqC,QAAQ,kCAAkC;AACxF,OAAOC,aAAa,MAAM,wBAAwB;AAClD,SAASC,SAAS,QAAQ,sBAAsB;AAChD,OAAOC,OAAO,MAAM,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,aAAa,GAAG,SAASA,aAAaA,CAACC,OAAO,EAAE;EAClD,OAAO,IAAIJ,aAAa,CAACI,OAAO,CAAC;AACnC,CAAC;AACDD,aAAa,CAACD,OAAO,GAAGA,OAAO;AAC/BC,aAAa,CAACJ,qCAAqC,GAAGE,SAAS,CAACF,qCAAqC,EAAE,mGAAmG,CAAC;AAC3MI,aAAa,CAACR,SAAS,GAAGM,SAAS,CAACN,SAAS,EAAE,yDAAyD,CAAC;AACzGQ,aAAa,CAACP,gBAAgB,GAAGK,SAAS,CAACL,gBAAgB,EAAE,gEAAgE,CAAC;AAC9HO,aAAa,CAACV,OAAO,GAAGQ,SAAS,CAACR,OAAO,EAAE,uDAAuD,CAAC;AACnGU,aAAa,CAACT,cAAc,GAAGO,SAAS,CAACP,cAAc,EAAE,8DAA8D,CAAC;AACxHS,aAAa,CAACN,QAAQ,GAAGA,QAAQ;AACjCM,aAAa,CAACL,6BAA6B,GAAGA,6BAA6B;AAC3EO,MAAM,CAACC,cAAc,CAACH,aAAa,EAAE,SAAS,EAAE;EAC9CI,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;IAClB,MAAM,IAAIC,cAAc,CAAC,qJAAqJ,CAAC;EACjL;AACF,CAAC,CAAC;AACFH,MAAM,CAACC,cAAc,CAACH,aAAa,EAAE,YAAY,EAAE;EACjDI,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;IAClB,MAAM,IAAIC,cAAc,CAAC,qKAAqK,CAAC;EACjM;AACF,CAAC,CAAC;AACFH,MAAM,CAACC,cAAc,CAACH,aAAa,EAAE,WAAW,EAAE;EAChDI,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;IAClB,MAAM,IAAIC,cAAc,CAAC,0JAA0J,CAAC;EACtL;AACF,CAAC,CAAC;AACF,eAAeL,aAAa;AAC5B,cAAc,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
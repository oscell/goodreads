{"ast":null,"code":"import { parseColor as $799cddbef784668f$export$6e865ea70d7724f } from \"./Color.mjs\";\nimport { useColor as $aa90ad8b2b1d015f$export$5aadd9c0606af5c2 } from \"./useColor.mjs\";\nimport { useControlledState as $5GESt$useControlledState } from \"@react-stately/utils\";\nfunction $309d2b7669014898$export$dc6b73b623f8645f(props) {\n  let value = (0, $aa90ad8b2b1d015f$export$5aadd9c0606af5c2)(props.value);\n  let defaultValue = (0, $aa90ad8b2b1d015f$export$5aadd9c0606af5c2)(props.defaultValue || '#000000');\n  let [color, setColor] = (0, $5GESt$useControlledState)(value || undefined, defaultValue, props.onChange);\n  return {\n    color: color,\n    setColor(color) {\n      if (color != null) setColor(color || (0, $799cddbef784668f$export$6e865ea70d7724f)('#000000'));\n    }\n  };\n}\nexport { $309d2b7669014898$export$dc6b73b623f8645f as useColorPickerState };","map":{"version":3,"names":["$309d2b7669014898$export$dc6b73b623f8645f","props","value","$aa90ad8b2b1d015f$export$5aadd9c0606af5c2","defaultValue","color","setColor","$5GESt$useControlledState","undefined","onChange","$799cddbef784668f$export$6e865ea70d7724f"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-stately/color/dist/packages/@react-stately/color/src/useColorPickerState.ts"],"sourcesContent":["import {Color} from '@react-types/color';\nimport {parseColor} from './Color';\nimport {useColor} from './useColor';\nimport {useControlledState} from '@react-stately/utils';\nimport {ValueBase} from '@react-types/shared';\n\nexport interface ColorPickerProps extends ValueBase<string | Color, Color> {}\n\nexport interface ColorPickerState {\n  /** The current color value of the color picker. */\n  color: Color,\n  /** Sets the current color value of the color picker. */\n  setColor(color: Color | null): void\n}\n\nexport function useColorPickerState(props: ColorPickerProps): ColorPickerState {\n  let value = useColor(props.value);\n  let defaultValue = useColor(props.defaultValue || '#000000')!;\n  let [color, setColor] = useControlledState(value || undefined, defaultValue, props.onChange);\n  \n  return {\n    color,\n    setColor(color) {\n      if (color != null) {\n        setColor(color || parseColor('#000000'));\n      }\n    }\n  };\n}\n"],"mappings":";;;AAeO,SAASA,0CAAoBC,KAAuB;EACzD,IAAIC,KAAA,GAAQ,IAAAC,yCAAO,EAAEF,KAAA,CAAMC,KAAK;EAChC,IAAIE,YAAA,GAAe,IAAAD,yCAAO,EAAEF,KAAA,CAAMG,YAAY,IAAI;EAClD,IAAI,CAACC,KAAA,EAAOC,QAAA,CAAS,GAAG,IAAAC,yBAAiB,EAAEL,KAAA,IAASM,SAAA,EAAWJ,YAAA,EAAcH,KAAA,CAAMQ,QAAQ;EAE3F,OAAO;WACLJ,KAAA;IACAC,SAASD,KAAK;MACZ,IAAIA,KAAA,IAAS,MACXC,QAAA,CAASD,KAAA,IAAS,IAAAK,wCAAS,EAAE;IAEjC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
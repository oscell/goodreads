{"ast":null,"code":"/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n(function (Hogan) {\n  // Setup regex  assignments\n  // remove whitespace according to Mustache spec\n  var rIsWhitespace = /\\S/,\n    rQuot = /\\\"/g,\n    rNewline = /\\n/g,\n    rCr = /\\r/g,\n    rSlash = /\\\\/g,\n    rLineSep = /\\u2028/,\n    rParagraphSep = /\\u2029/;\n  Hogan.tags = {\n    '#': 1,\n    '^': 2,\n    '<': 3,\n    '$': 4,\n    '/': 5,\n    '!': 6,\n    '>': 7,\n    '=': 8,\n    '_v': 9,\n    '{': 10,\n    '&': 11,\n    '_t': 12\n  };\n  Hogan.scan = function scan(text, delimiters) {\n    var len = text.length,\n      IN_TEXT = 0,\n      IN_TAG_TYPE = 1,\n      IN_TAG = 2,\n      state = IN_TEXT,\n      tagType = null,\n      tag = null,\n      buf = '',\n      tokens = [],\n      seenTag = false,\n      i = 0,\n      lineStart = 0,\n      otag = '{{',\n      ctag = '}}';\n    function addBuf() {\n      if (buf.length > 0) {\n        tokens.push({\n          tag: '_t',\n          text: new String(buf)\n        });\n        buf = '';\n      }\n    }\n    function lineIsWhitespace() {\n      var isAllWhitespace = true;\n      for (var j = lineStart; j < tokens.length; j++) {\n        isAllWhitespace = Hogan.tags[tokens[j].tag] < Hogan.tags['_v'] || tokens[j].tag == '_t' && tokens[j].text.match(rIsWhitespace) === null;\n        if (!isAllWhitespace) {\n          return false;\n        }\n      }\n      return isAllWhitespace;\n    }\n    function filterLine(haveSeenTag, noNewLine) {\n      addBuf();\n      if (haveSeenTag && lineIsWhitespace()) {\n        for (var j = lineStart, next; j < tokens.length; j++) {\n          if (tokens[j].text) {\n            if ((next = tokens[j + 1]) && next.tag == '>') {\n              // set indent to token value\n              next.indent = tokens[j].text.toString();\n            }\n            tokens.splice(j, 1);\n          }\n        }\n      } else if (!noNewLine) {\n        tokens.push({\n          tag: '\\n'\n        });\n      }\n      seenTag = false;\n      lineStart = tokens.length;\n    }\n    function changeDelimiters(text, index) {\n      var close = '=' + ctag,\n        closeIndex = text.indexOf(close, index),\n        delimiters = trim(text.substring(text.indexOf('=', index) + 1, closeIndex)).split(' ');\n      otag = delimiters[0];\n      ctag = delimiters[delimiters.length - 1];\n      return closeIndex + close.length - 1;\n    }\n    if (delimiters) {\n      delimiters = delimiters.split(' ');\n      otag = delimiters[0];\n      ctag = delimiters[1];\n    }\n    for (i = 0; i < len; i++) {\n      if (state == IN_TEXT) {\n        if (tagChange(otag, text, i)) {\n          --i;\n          addBuf();\n          state = IN_TAG_TYPE;\n        } else {\n          if (text.charAt(i) == '\\n') {\n            filterLine(seenTag);\n          } else {\n            buf += text.charAt(i);\n          }\n        }\n      } else if (state == IN_TAG_TYPE) {\n        i += otag.length - 1;\n        tag = Hogan.tags[text.charAt(i + 1)];\n        tagType = tag ? text.charAt(i + 1) : '_v';\n        if (tagType == '=') {\n          i = changeDelimiters(text, i);\n          state = IN_TEXT;\n        } else {\n          if (tag) {\n            i++;\n          }\n          state = IN_TAG;\n        }\n        seenTag = i;\n      } else {\n        if (tagChange(ctag, text, i)) {\n          tokens.push({\n            tag: tagType,\n            n: trim(buf),\n            otag: otag,\n            ctag: ctag,\n            i: tagType == '/' ? seenTag - otag.length : i + ctag.length\n          });\n          buf = '';\n          i += ctag.length - 1;\n          state = IN_TEXT;\n          if (tagType == '{') {\n            if (ctag == '}}') {\n              i++;\n            } else {\n              cleanTripleStache(tokens[tokens.length - 1]);\n            }\n          }\n        } else {\n          buf += text.charAt(i);\n        }\n      }\n    }\n    filterLine(seenTag, true);\n    return tokens;\n  };\n  function cleanTripleStache(token) {\n    if (token.n.substr(token.n.length - 1) === '}') {\n      token.n = token.n.substring(0, token.n.length - 1);\n    }\n  }\n  function trim(s) {\n    if (s.trim) {\n      return s.trim();\n    }\n    return s.replace(/^\\s*|\\s*$/g, '');\n  }\n  function tagChange(tag, text, index) {\n    if (text.charAt(index) != tag.charAt(0)) {\n      return false;\n    }\n    for (var i = 1, l = tag.length; i < l; i++) {\n      if (text.charAt(index + i) != tag.charAt(i)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // the tags allowed inside super templates\n  var allowedInSuper = {\n    '_t': true,\n    '\\n': true,\n    '$': true,\n    '/': true\n  };\n  function buildTree(tokens, kind, stack, customTags) {\n    var instructions = [],\n      opener = null,\n      tail = null,\n      token = null;\n    tail = stack[stack.length - 1];\n    while (tokens.length > 0) {\n      token = tokens.shift();\n      if (tail && tail.tag == '<' && !(token.tag in allowedInSuper)) {\n        throw new Error('Illegal content in < super tag.');\n      }\n      if (Hogan.tags[token.tag] <= Hogan.tags['$'] || isOpener(token, customTags)) {\n        stack.push(token);\n        token.nodes = buildTree(tokens, token.tag, stack, customTags);\n      } else if (token.tag == '/') {\n        if (stack.length === 0) {\n          throw new Error('Closing tag without opener: /' + token.n);\n        }\n        opener = stack.pop();\n        if (token.n != opener.n && !isCloser(token.n, opener.n, customTags)) {\n          throw new Error('Nesting error: ' + opener.n + ' vs. ' + token.n);\n        }\n        opener.end = token.i;\n        return instructions;\n      } else if (token.tag == '\\n') {\n        token.last = tokens.length == 0 || tokens[0].tag == '\\n';\n      }\n      instructions.push(token);\n    }\n    if (stack.length > 0) {\n      throw new Error('missing closing tag: ' + stack.pop().n);\n    }\n    return instructions;\n  }\n  function isOpener(token, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].o == token.n) {\n        token.tag = '#';\n        return true;\n      }\n    }\n  }\n  function isCloser(close, open, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].c == close && tags[i].o == open) {\n        return true;\n      }\n    }\n  }\n  function stringifySubstitutions(obj) {\n    var items = [];\n    for (var key in obj) {\n      items.push('\"' + esc(key) + '\": function(c,p,t,i) {' + obj[key] + '}');\n    }\n    return \"{ \" + items.join(\",\") + \" }\";\n  }\n  function stringifyPartials(codeObj) {\n    var partials = [];\n    for (var key in codeObj.partials) {\n      partials.push('\"' + esc(key) + '\":{name:\"' + esc(codeObj.partials[key].name) + '\", ' + stringifyPartials(codeObj.partials[key]) + \"}\");\n    }\n    return \"partials: {\" + partials.join(\",\") + \"}, subs: \" + stringifySubstitutions(codeObj.subs);\n  }\n  Hogan.stringify = function (codeObj, text, options) {\n    return \"{code: function (c,p,i) { \" + Hogan.wrapMain(codeObj.code) + \" },\" + stringifyPartials(codeObj) + \"}\";\n  };\n  var serialNo = 0;\n  Hogan.generate = function (tree, text, options) {\n    serialNo = 0;\n    var context = {\n      code: '',\n      subs: {},\n      partials: {}\n    };\n    Hogan.walk(tree, context);\n    if (options.asString) {\n      return this.stringify(context, text, options);\n    }\n    return this.makeTemplate(context, text, options);\n  };\n  Hogan.wrapMain = function (code) {\n    return 'var t=this;t.b(i=i||\"\");' + code + 'return t.fl();';\n  };\n  Hogan.template = Hogan.Template;\n  Hogan.makeTemplate = function (codeObj, text, options) {\n    var template = this.makePartials(codeObj);\n    template.code = new Function('c', 'p', 'i', this.wrapMain(codeObj.code));\n    return new this.template(template, text, this, options);\n  };\n  Hogan.makePartials = function (codeObj) {\n    var key,\n      template = {\n        subs: {},\n        partials: codeObj.partials,\n        name: codeObj.name\n      };\n    for (key in template.partials) {\n      template.partials[key] = this.makePartials(template.partials[key]);\n    }\n    for (key in codeObj.subs) {\n      template.subs[key] = new Function('c', 'p', 't', 'i', codeObj.subs[key]);\n    }\n    return template;\n  };\n  function esc(s) {\n    return s.replace(rSlash, '\\\\\\\\').replace(rQuot, '\\\\\\\"').replace(rNewline, '\\\\n').replace(rCr, '\\\\r').replace(rLineSep, '\\\\u2028').replace(rParagraphSep, '\\\\u2029');\n  }\n  function chooseMethod(s) {\n    return ~s.indexOf('.') ? 'd' : 'f';\n  }\n  function createPartial(node, context) {\n    var prefix = \"<\" + (context.prefix || \"\");\n    var sym = prefix + node.n + serialNo++;\n    context.partials[sym] = {\n      name: node.n,\n      partials: {}\n    };\n    context.code += 't.b(t.rp(\"' + esc(sym) + '\",c,p,\"' + (node.indent || '') + '\"));';\n    return sym;\n  }\n  Hogan.codegen = {\n    '#': function (node, context) {\n      context.code += 'if(t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),' + 'c,p,0,' + node.i + ',' + node.end + ',\"' + node.otag + \" \" + node.ctag + '\")){' + 't.rs(c,p,' + 'function(c,p,t){';\n      Hogan.walk(node.nodes, context);\n      context.code += '});c.pop();}';\n    },\n    '^': function (node, context) {\n      context.code += 'if(!t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),c,p,1,0,0,\"\")){';\n      Hogan.walk(node.nodes, context);\n      context.code += '};';\n    },\n    '>': createPartial,\n    '<': function (node, context) {\n      var ctx = {\n        partials: {},\n        code: '',\n        subs: {},\n        inPartial: true\n      };\n      Hogan.walk(node.nodes, ctx);\n      var template = context.partials[createPartial(node, context)];\n      template.subs = ctx.subs;\n      template.partials = ctx.partials;\n    },\n    '$': function (node, context) {\n      var ctx = {\n        subs: {},\n        code: '',\n        partials: context.partials,\n        prefix: node.n\n      };\n      Hogan.walk(node.nodes, ctx);\n      context.subs[node.n] = ctx.code;\n      if (!context.inPartial) {\n        context.code += 't.sub(\"' + esc(node.n) + '\",c,p,i);';\n      }\n    },\n    '\\n': function (node, context) {\n      context.code += write('\"\\\\n\"' + (node.last ? '' : ' + i'));\n    },\n    '_v': function (node, context) {\n      context.code += 't.b(t.v(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n    },\n    '_t': function (node, context) {\n      context.code += write('\"' + esc(node.text) + '\"');\n    },\n    '{': tripleStache,\n    '&': tripleStache\n  };\n  function tripleStache(node, context) {\n    context.code += 't.b(t.t(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n  }\n  function write(s) {\n    return 't.b(' + s + ');';\n  }\n  Hogan.walk = function (nodelist, context) {\n    var func;\n    for (var i = 0, l = nodelist.length; i < l; i++) {\n      func = Hogan.codegen[nodelist[i].tag];\n      func && func(nodelist[i], context);\n    }\n    return context;\n  };\n  Hogan.parse = function (tokens, text, options) {\n    options = options || {};\n    return buildTree(tokens, '', [], options.sectionTags || []);\n  };\n  Hogan.cache = {};\n  Hogan.cacheKey = function (text, options) {\n    return [text, !!options.asString, !!options.disableLambda, options.delimiters, !!options.modelGet].join('||');\n  };\n  Hogan.compile = function (text, options) {\n    options = options || {};\n    var key = Hogan.cacheKey(text, options);\n    var template = this.cache[key];\n    if (template) {\n      var partials = template.partials;\n      for (var name in partials) {\n        delete partials[name].instance;\n      }\n      return template;\n    }\n    template = this.generate(this.parse(this.scan(text, options.delimiters), text, options), text, options);\n    return this.cache[key] = template;\n  };\n})(typeof exports !== 'undefined' ? exports : Hogan);","map":{"version":3,"names":["Hogan","rIsWhitespace","rQuot","rNewline","rCr","rSlash","rLineSep","rParagraphSep","tags","scan","text","delimiters","len","length","IN_TEXT","IN_TAG_TYPE","IN_TAG","state","tagType","tag","buf","tokens","seenTag","i","lineStart","otag","ctag","addBuf","push","String","lineIsWhitespace","isAllWhitespace","j","match","filterLine","haveSeenTag","noNewLine","next","indent","toString","splice","changeDelimiters","index","close","closeIndex","indexOf","trim","substring","split","tagChange","charAt","n","cleanTripleStache","token","substr","s","replace","l","allowedInSuper","buildTree","kind","stack","customTags","instructions","opener","tail","shift","Error","isOpener","nodes","pop","isCloser","end","last","o","open","c","stringifySubstitutions","obj","items","key","esc","join","stringifyPartials","codeObj","partials","name","subs","stringify","options","wrapMain","code","serialNo","generate","tree","context","walk","asString","makeTemplate","template","Template","makePartials","Function","chooseMethod","createPartial","node","prefix","sym","codegen","#","^","<","ctx","inPartial","$","\n","write","_v","_t","tripleStache","nodelist","func","parse","sectionTags","cache","cacheKey","disableLambda","modelGet","compile","instance","exports"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/hogan.js/lib/compiler.js"],"sourcesContent":["/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n(function (Hogan) {\n  // Setup regex  assignments\n  // remove whitespace according to Mustache spec\n  var rIsWhitespace = /\\S/,\n      rQuot = /\\\"/g,\n      rNewline =  /\\n/g,\n      rCr = /\\r/g,\n      rSlash = /\\\\/g,\n      rLineSep = /\\u2028/,\n      rParagraphSep = /\\u2029/;\n\n  Hogan.tags = {\n    '#': 1, '^': 2, '<': 3, '$': 4,\n    '/': 5, '!': 6, '>': 7, '=': 8, '_v': 9,\n    '{': 10, '&': 11, '_t': 12\n  };\n\n  Hogan.scan = function scan(text, delimiters) {\n    var len = text.length,\n        IN_TEXT = 0,\n        IN_TAG_TYPE = 1,\n        IN_TAG = 2,\n        state = IN_TEXT,\n        tagType = null,\n        tag = null,\n        buf = '',\n        tokens = [],\n        seenTag = false,\n        i = 0,\n        lineStart = 0,\n        otag = '{{',\n        ctag = '}}';\n\n    function addBuf() {\n      if (buf.length > 0) {\n        tokens.push({tag: '_t', text: new String(buf)});\n        buf = '';\n      }\n    }\n\n    function lineIsWhitespace() {\n      var isAllWhitespace = true;\n      for (var j = lineStart; j < tokens.length; j++) {\n        isAllWhitespace =\n          (Hogan.tags[tokens[j].tag] < Hogan.tags['_v']) ||\n          (tokens[j].tag == '_t' && tokens[j].text.match(rIsWhitespace) === null);\n        if (!isAllWhitespace) {\n          return false;\n        }\n      }\n\n      return isAllWhitespace;\n    }\n\n    function filterLine(haveSeenTag, noNewLine) {\n      addBuf();\n\n      if (haveSeenTag && lineIsWhitespace()) {\n        for (var j = lineStart, next; j < tokens.length; j++) {\n          if (tokens[j].text) {\n            if ((next = tokens[j+1]) && next.tag == '>') {\n              // set indent to token value\n              next.indent = tokens[j].text.toString()\n            }\n            tokens.splice(j, 1);\n          }\n        }\n      } else if (!noNewLine) {\n        tokens.push({tag:'\\n'});\n      }\n\n      seenTag = false;\n      lineStart = tokens.length;\n    }\n\n    function changeDelimiters(text, index) {\n      var close = '=' + ctag,\n          closeIndex = text.indexOf(close, index),\n          delimiters = trim(\n            text.substring(text.indexOf('=', index) + 1, closeIndex)\n          ).split(' ');\n\n      otag = delimiters[0];\n      ctag = delimiters[delimiters.length - 1];\n\n      return closeIndex + close.length - 1;\n    }\n\n    if (delimiters) {\n      delimiters = delimiters.split(' ');\n      otag = delimiters[0];\n      ctag = delimiters[1];\n    }\n\n    for (i = 0; i < len; i++) {\n      if (state == IN_TEXT) {\n        if (tagChange(otag, text, i)) {\n          --i;\n          addBuf();\n          state = IN_TAG_TYPE;\n        } else {\n          if (text.charAt(i) == '\\n') {\n            filterLine(seenTag);\n          } else {\n            buf += text.charAt(i);\n          }\n        }\n      } else if (state == IN_TAG_TYPE) {\n        i += otag.length - 1;\n        tag = Hogan.tags[text.charAt(i + 1)];\n        tagType = tag ? text.charAt(i + 1) : '_v';\n        if (tagType == '=') {\n          i = changeDelimiters(text, i);\n          state = IN_TEXT;\n        } else {\n          if (tag) {\n            i++;\n          }\n          state = IN_TAG;\n        }\n        seenTag = i;\n      } else {\n        if (tagChange(ctag, text, i)) {\n          tokens.push({tag: tagType, n: trim(buf), otag: otag, ctag: ctag,\n                       i: (tagType == '/') ? seenTag - otag.length : i + ctag.length});\n          buf = '';\n          i += ctag.length - 1;\n          state = IN_TEXT;\n          if (tagType == '{') {\n            if (ctag == '}}') {\n              i++;\n            } else {\n              cleanTripleStache(tokens[tokens.length - 1]);\n            }\n          }\n        } else {\n          buf += text.charAt(i);\n        }\n      }\n    }\n\n    filterLine(seenTag, true);\n\n    return tokens;\n  }\n\n  function cleanTripleStache(token) {\n    if (token.n.substr(token.n.length - 1) === '}') {\n      token.n = token.n.substring(0, token.n.length - 1);\n    }\n  }\n\n  function trim(s) {\n    if (s.trim) {\n      return s.trim();\n    }\n\n    return s.replace(/^\\s*|\\s*$/g, '');\n  }\n\n  function tagChange(tag, text, index) {\n    if (text.charAt(index) != tag.charAt(0)) {\n      return false;\n    }\n\n    for (var i = 1, l = tag.length; i < l; i++) {\n      if (text.charAt(index + i) != tag.charAt(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // the tags allowed inside super templates\n  var allowedInSuper = {'_t': true, '\\n': true, '$': true, '/': true};\n\n  function buildTree(tokens, kind, stack, customTags) {\n    var instructions = [],\n        opener = null,\n        tail = null,\n        token = null;\n\n    tail = stack[stack.length - 1];\n\n    while (tokens.length > 0) {\n      token = tokens.shift();\n\n      if (tail && tail.tag == '<' && !(token.tag in allowedInSuper)) {\n        throw new Error('Illegal content in < super tag.');\n      }\n\n      if (Hogan.tags[token.tag] <= Hogan.tags['$'] || isOpener(token, customTags)) {\n        stack.push(token);\n        token.nodes = buildTree(tokens, token.tag, stack, customTags);\n      } else if (token.tag == '/') {\n        if (stack.length === 0) {\n          throw new Error('Closing tag without opener: /' + token.n);\n        }\n        opener = stack.pop();\n        if (token.n != opener.n && !isCloser(token.n, opener.n, customTags)) {\n          throw new Error('Nesting error: ' + opener.n + ' vs. ' + token.n);\n        }\n        opener.end = token.i;\n        return instructions;\n      } else if (token.tag == '\\n') {\n        token.last = (tokens.length == 0) || (tokens[0].tag == '\\n');\n      }\n\n      instructions.push(token);\n    }\n\n    if (stack.length > 0) {\n      throw new Error('missing closing tag: ' + stack.pop().n);\n    }\n\n    return instructions;\n  }\n\n  function isOpener(token, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].o == token.n) {\n        token.tag = '#';\n        return true;\n      }\n    }\n  }\n\n  function isCloser(close, open, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].c == close && tags[i].o == open) {\n        return true;\n      }\n    }\n  }\n\n  function stringifySubstitutions(obj) {\n    var items = [];\n    for (var key in obj) {\n      items.push('\"' + esc(key) + '\": function(c,p,t,i) {' + obj[key] + '}');\n    }\n    return \"{ \" + items.join(\",\") + \" }\";\n  }\n\n  function stringifyPartials(codeObj) {\n    var partials = [];\n    for (var key in codeObj.partials) {\n      partials.push('\"' + esc(key) + '\":{name:\"' + esc(codeObj.partials[key].name) + '\", ' + stringifyPartials(codeObj.partials[key]) + \"}\");\n    }\n    return \"partials: {\" + partials.join(\",\") + \"}, subs: \" + stringifySubstitutions(codeObj.subs);\n  }\n\n  Hogan.stringify = function(codeObj, text, options) {\n    return \"{code: function (c,p,i) { \" + Hogan.wrapMain(codeObj.code) + \" },\" + stringifyPartials(codeObj) +  \"}\";\n  }\n\n  var serialNo = 0;\n  Hogan.generate = function(tree, text, options) {\n    serialNo = 0;\n    var context = { code: '', subs: {}, partials: {} };\n    Hogan.walk(tree, context);\n\n    if (options.asString) {\n      return this.stringify(context, text, options);\n    }\n\n    return this.makeTemplate(context, text, options);\n  }\n\n  Hogan.wrapMain = function(code) {\n    return 'var t=this;t.b(i=i||\"\");' + code + 'return t.fl();';\n  }\n\n  Hogan.template = Hogan.Template;\n\n  Hogan.makeTemplate = function(codeObj, text, options) {\n    var template = this.makePartials(codeObj);\n    template.code = new Function('c', 'p', 'i', this.wrapMain(codeObj.code));\n    return new this.template(template, text, this, options);\n  }\n\n  Hogan.makePartials = function(codeObj) {\n    var key, template = {subs: {}, partials: codeObj.partials, name: codeObj.name};\n    for (key in template.partials) {\n      template.partials[key] = this.makePartials(template.partials[key]);\n    }\n    for (key in codeObj.subs) {\n      template.subs[key] = new Function('c', 'p', 't', 'i', codeObj.subs[key]);\n    }\n    return template;\n  }\n\n  function esc(s) {\n    return s.replace(rSlash, '\\\\\\\\')\n            .replace(rQuot, '\\\\\\\"')\n            .replace(rNewline, '\\\\n')\n            .replace(rCr, '\\\\r')\n            .replace(rLineSep, '\\\\u2028')\n            .replace(rParagraphSep, '\\\\u2029');\n  }\n\n  function chooseMethod(s) {\n    return (~s.indexOf('.')) ? 'd' : 'f';\n  }\n\n  function createPartial(node, context) {\n    var prefix = \"<\" + (context.prefix || \"\");\n    var sym = prefix + node.n + serialNo++;\n    context.partials[sym] = {name: node.n, partials: {}};\n    context.code += 't.b(t.rp(\"' +  esc(sym) + '\",c,p,\"' + (node.indent || '') + '\"));';\n    return sym;\n  }\n\n  Hogan.codegen = {\n    '#': function(node, context) {\n      context.code += 'if(t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),' +\n                      'c,p,0,' + node.i + ',' + node.end + ',\"' + node.otag + \" \" + node.ctag + '\")){' +\n                      't.rs(c,p,' + 'function(c,p,t){';\n      Hogan.walk(node.nodes, context);\n      context.code += '});c.pop();}';\n    },\n\n    '^': function(node, context) {\n      context.code += 'if(!t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),c,p,1,0,0,\"\")){';\n      Hogan.walk(node.nodes, context);\n      context.code += '};';\n    },\n\n    '>': createPartial,\n    '<': function(node, context) {\n      var ctx = {partials: {}, code: '', subs: {}, inPartial: true};\n      Hogan.walk(node.nodes, ctx);\n      var template = context.partials[createPartial(node, context)];\n      template.subs = ctx.subs;\n      template.partials = ctx.partials;\n    },\n\n    '$': function(node, context) {\n      var ctx = {subs: {}, code: '', partials: context.partials, prefix: node.n};\n      Hogan.walk(node.nodes, ctx);\n      context.subs[node.n] = ctx.code;\n      if (!context.inPartial) {\n        context.code += 't.sub(\"' + esc(node.n) + '\",c,p,i);';\n      }\n    },\n\n    '\\n': function(node, context) {\n      context.code += write('\"\\\\n\"' + (node.last ? '' : ' + i'));\n    },\n\n    '_v': function(node, context) {\n      context.code += 't.b(t.v(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n    },\n\n    '_t': function(node, context) {\n      context.code += write('\"' + esc(node.text) + '\"');\n    },\n\n    '{': tripleStache,\n\n    '&': tripleStache\n  }\n\n  function tripleStache(node, context) {\n    context.code += 't.b(t.t(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n  }\n\n  function write(s) {\n    return 't.b(' + s + ');';\n  }\n\n  Hogan.walk = function(nodelist, context) {\n    var func;\n    for (var i = 0, l = nodelist.length; i < l; i++) {\n      func = Hogan.codegen[nodelist[i].tag];\n      func && func(nodelist[i], context);\n    }\n    return context;\n  }\n\n  Hogan.parse = function(tokens, text, options) {\n    options = options || {};\n    return buildTree(tokens, '', [], options.sectionTags || []);\n  }\n\n  Hogan.cache = {};\n\n  Hogan.cacheKey = function(text, options) {\n    return [text, !!options.asString, !!options.disableLambda, options.delimiters, !!options.modelGet].join('||');\n  }\n\n  Hogan.compile = function(text, options) {\n    options = options || {};\n    var key = Hogan.cacheKey(text, options);\n    var template = this.cache[key];\n\n    if (template) {\n      var partials = template.partials;\n      for (var name in partials) {\n        delete partials[name].instance;\n      }\n      return template;\n    }\n\n    template = this.generate(this.parse(this.scan(text, options.delimiters), text, options), text, options);\n    return this.cache[key] = template;\n  }\n})(typeof exports !== 'undefined' ? exports : Hogan);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
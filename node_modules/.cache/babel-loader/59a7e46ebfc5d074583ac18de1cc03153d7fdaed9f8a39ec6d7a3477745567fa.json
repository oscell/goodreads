{"ast":null,"code":"import { CheckboxGroupContext as $8c8ab388b155237e$export$baf37c4be89255b8 } from \"./context.mjs\";\nimport \"./vars.1be3e4c7.css\";\nimport $8sUxO$fieldgroup_vars_cssmodulejs from \"./fieldgroup_vars_css.mjs\";\nimport { useDOMRef as $8sUxO$useDOMRef, classNames as $8sUxO$classNames } from \"@react-spectrum/utils\";\nimport { Field as $8sUxO$Field } from \"@react-spectrum/label\";\nimport { useProviderProps as $8sUxO$useProviderProps, Provider as $8sUxO$Provider } from \"@react-spectrum/provider\";\nimport $8sUxO$react from \"react\";\nimport { useCheckboxGroup as $8sUxO$useCheckboxGroup } from \"@react-aria/checkbox\";\nimport { useCheckboxGroupState as $8sUxO$useCheckboxGroupState } from \"@react-stately/checkbox\";\nimport { useFormProps as $8sUxO$useFormProps } from \"@react-spectrum/form\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $73f43ce9d441cc69$var$CheckboxGroup(props, ref) {\n  props = (0, $8sUxO$useProviderProps)(props);\n  props = (0, $8sUxO$useFormProps)(props);\n  let {\n    isEmphasized: isEmphasized,\n    children: children,\n    orientation = 'vertical'\n  } = props;\n  let domRef = (0, $8sUxO$useDOMRef)(ref);\n  let state = (0, $8sUxO$useCheckboxGroupState)(props);\n  let {\n    groupProps: groupProps,\n    ...otherProps\n  } = (0, $8sUxO$useCheckboxGroup)(props, state);\n  return /*#__PURE__*/(0, $8sUxO$react).createElement((0, $8sUxO$Field), {\n    ...props,\n    ...otherProps,\n    ref: domRef,\n    wrapperClassName: (0, $8sUxO$classNames)((0, $parcel$interopDefault($8sUxO$fieldgroup_vars_cssmodulejs)), 'spectrum-FieldGroup'),\n    elementType: \"span\",\n    includeNecessityIndicatorInAccessibilityName: true\n  }, /*#__PURE__*/(0, $8sUxO$react).createElement(\"div\", {\n    ...groupProps,\n    className: (0, $8sUxO$classNames)((0, $parcel$interopDefault($8sUxO$fieldgroup_vars_cssmodulejs)), 'spectrum-FieldGroup-group', {\n      'spectrum-FieldGroup-group--horizontal': orientation === 'horizontal'\n    })\n  }, /*#__PURE__*/(0, $8sUxO$react).createElement((0, $8sUxO$Provider), {\n    isEmphasized: isEmphasized\n  }, /*#__PURE__*/(0, $8sUxO$react).createElement((0, $8c8ab388b155237e$export$baf37c4be89255b8).Provider, {\n    value: state\n  }, children))));\n}\n/**\n * A CheckboxGroup allows users to select one or more items from a list of choices.\n */\nconst $73f43ce9d441cc69$export$4aa08d5625cb8ead = /*#__PURE__*/(0, $8sUxO$react).forwardRef($73f43ce9d441cc69$var$CheckboxGroup);\nexport { $73f43ce9d441cc69$export$4aa08d5625cb8ead as CheckboxGroup };","map":{"version":3,"names":["$73f43ce9d441cc69$var$CheckboxGroup","props","ref","$8sUxO$useProviderProps","$8sUxO$useFormProps","isEmphasized","children","orientation","domRef","$8sUxO$useDOMRef","state","$8sUxO$useCheckboxGroupState","groupProps","otherProps","$8sUxO$useCheckboxGroup","$8sUxO$react","createElement","$8sUxO$Field","wrapperClassName","$8sUxO$classNames","$parcel$interopDefault","$8sUxO$fieldgroup_vars_cssmodulejs","elementType","includeNecessityIndicatorInAccessibilityName","className","$8sUxO$Provider","$8c8ab388b155237e$export$baf37c4be89255b8","Provider","value","$73f43ce9d441cc69$export$4aa08d5625cb8ead","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-spectrum/checkbox/dist/packages/@react-spectrum/checkbox/src/CheckboxGroup.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CheckboxGroupContext} from './context';\nimport {classNames, useDOMRef} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {Field} from '@react-spectrum/label';\nimport {Provider, useProviderProps} from '@react-spectrum/provider';\nimport React from 'react';\nimport {SpectrumCheckboxGroupProps} from '@react-types/checkbox';\nimport styles from '@adobe/spectrum-css-temp/components/fieldgroup/vars.css';\nimport {useCheckboxGroup} from '@react-aria/checkbox';\nimport {useCheckboxGroupState} from '@react-stately/checkbox';\nimport {useFormProps} from '@react-spectrum/form';\n\nfunction CheckboxGroup(props: SpectrumCheckboxGroupProps, ref: DOMRef<HTMLDivElement>) {\n  props = useProviderProps(props);\n  props = useFormProps(props);\n  let {\n    isEmphasized,\n    children,\n    orientation = 'vertical'\n  } = props;\n  let domRef = useDOMRef(ref);\n  let state = useCheckboxGroupState(props);\n  let {groupProps, ...otherProps} = useCheckboxGroup(props, state);\n\n  return (\n    <Field\n      {...props}\n      {...otherProps}\n      ref={domRef}\n      wrapperClassName={classNames(styles, 'spectrum-FieldGroup')}\n      elementType=\"span\"\n      includeNecessityIndicatorInAccessibilityName>\n      <div\n        {...groupProps}\n        className={\n          classNames(\n            styles,\n            'spectrum-FieldGroup-group',\n            {\n              'spectrum-FieldGroup-group--horizontal': orientation === 'horizontal'\n            }\n          )\n        }>\n        <Provider isEmphasized={isEmphasized}>\n          <CheckboxGroupContext.Provider value={state}>\n            {children}\n          </CheckboxGroupContext.Provider>\n        </Provider>\n      </div>\n    </Field>\n  );\n}\n\n/**\n * A CheckboxGroup allows users to select one or more items from a list of choices.\n */\nconst _CheckboxGroup = React.forwardRef(CheckboxGroup);\nexport {_CheckboxGroup as CheckboxGroup};\n"],"mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;AAwBA,SAASA,oCAAcC,KAAiC,EAAEC,GAA2B;EACnFD,KAAA,GAAQ,IAAAE,uBAAe,EAAEF,KAAA;EACzBA,KAAA,GAAQ,IAAAG,mBAAW,EAAEH,KAAA;EACrB,IAAI;IAAAI,YAAA,EACFA,YAAY;IAAAC,QAAA,EACZA,QAAQ;IACRC,WAAA,GAAc;EAAA,CACf,GAAGN,KAAA;EACJ,IAAIO,MAAA,GAAS,IAAAC,gBAAQ,EAAEP,GAAA;EACvB,IAAIQ,KAAA,GAAQ,IAAAC,4BAAoB,EAAEV,KAAA;EAClC,IAAI;IAAAW,UAAA,EAACA,UAAU;IAAE,GAAGC;EAAA,CAAW,GAAG,IAAAC,uBAAe,EAAEb,KAAA,EAAOS,KAAA;EAE1D,oBACE,IAAAK,YAAA,EAAAC,aAAA,EAAC,GAAAC,YAAI;IACF,GAAGhB,KAAK;IACR,GAAGY,UAAU;IACdX,GAAA,EAAKM,MAAA;IACLU,gBAAA,EAAkB,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,kCAAA,CAAK,GAAG;IACrCC,WAAA,EAAY;IACZC,4CAAA;kBACA,IAAAR,YAAA,EAAAC,aAAA,CAAC;IACE,GAAGJ,UAAU;IACdY,SAAA,EACE,IAAAL,iBAAS,GACP,GAAAC,sBAAA,CAAAC,kCAAA,CAAK,GACL,6BACA;MACE,yCAAyCd,WAAA,KAAgB;IAC3D;kBAGJ,IAAAQ,YAAA,EAAAC,aAAA,EAAC,GAAAS,eAAO;IAAEpB,YAAA,EAAcA;kBACtB,IAAAU,YAAA,EAAAC,aAAA,CAAC,IAAAU,yCAAmB,EAAEC,QAAQ;IAACC,KAAA,EAAOlB;KACnCJ,QAAA;AAMb;AAEA;;;AAGA,MAAMuB,yCAAA,gBAAiB,IAAAd,YAAI,EAAEe,UAAU,CAAC9B,mCAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
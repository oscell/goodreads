{"ast":null,"code":"import { Provider as $64fa3d84918910a7$export$2881499e37b75b9a, useContextProps as $64fa3d84918910a7$export$29f1550f4b0d4415, useEnterAnimation as $64fa3d84918910a7$export$6d3443f2c48bfc20, useExitAnimation as $64fa3d84918910a7$export$45fda7c47f93fd48, useRenderProps as $64fa3d84918910a7$export$4d86445c2cf5e3 } from \"./utils.mjs\";\nimport { OverlayArrowContext as $44f671af83e7d9e0$export$2de4954e8ae13b9f } from \"./OverlayArrow.mjs\";\nimport { useTooltipTrigger as $cCslV$useTooltipTrigger, OverlayContainer as $cCslV$OverlayContainer, useOverlayPosition as $cCslV$useOverlayPosition, mergeProps as $cCslV$mergeProps, useTooltip as $cCslV$useTooltip } from \"react-aria\";\nimport { FocusableProvider as $cCslV$FocusableProvider } from \"@react-aria/focus\";\nimport { useTooltipTriggerState as $cCslV$useTooltipTriggerState } from \"react-stately\";\nimport $cCslV$react, { createContext as $cCslV$createContext, useRef as $cCslV$useRef, useContext as $cCslV$useContext, forwardRef as $cCslV$forwardRef, useState as $cCslV$useState } from \"react\";\nimport { useLayoutEffect as $cCslV$useLayoutEffect } from \"@react-aria/utils\";\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $4e3b923658d69c60$export$7a7623236eec67fa = /*#__PURE__*/(0, $cCslV$createContext)(null);\nconst $4e3b923658d69c60$export$39ae08fa83328b12 = /*#__PURE__*/(0, $cCslV$createContext)(null);\nfunction $4e3b923658d69c60$export$8c610744efcf8a1d(props) {\n  let state = (0, $cCslV$useTooltipTriggerState)(props);\n  let ref = (0, $cCslV$useRef)(null);\n  let {\n    triggerProps: triggerProps,\n    tooltipProps: tooltipProps\n  } = (0, $cCslV$useTooltipTrigger)(props, state, ref);\n  return /*#__PURE__*/(0, $cCslV$react).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {\n    values: [[$4e3b923658d69c60$export$7a7623236eec67fa, state], [$4e3b923658d69c60$export$39ae08fa83328b12, {\n      ...tooltipProps,\n      triggerRef: ref\n    }]]\n  }, /*#__PURE__*/(0, $cCslV$react).createElement((0, $cCslV$FocusableProvider), {\n    ...triggerProps,\n    ref: ref\n  }, props.children));\n}\nfunction $4e3b923658d69c60$var$Tooltip({\n  UNSTABLE_portalContainer: UNSTABLE_portalContainer,\n  ...props\n}, ref) {\n  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $4e3b923658d69c60$export$39ae08fa83328b12);\n  let contextState = (0, $cCslV$useContext)($4e3b923658d69c60$export$7a7623236eec67fa);\n  let localState = (0, $cCslV$useTooltipTriggerState)(props);\n  let state = props.isOpen != null || props.defaultOpen != null || !contextState ? localState : contextState;\n  let isExiting = (0, $64fa3d84918910a7$export$45fda7c47f93fd48)(ref, state.isOpen) || props.isExiting || false;\n  if (!state.isOpen && !isExiting) return null;\n  return /*#__PURE__*/(0, $cCslV$react).createElement((0, $cCslV$OverlayContainer), {\n    portalContainer: UNSTABLE_portalContainer\n  }, /*#__PURE__*/(0, $cCslV$react).createElement($4e3b923658d69c60$var$TooltipInner, {\n    ...props,\n    tooltipRef: ref,\n    isExiting: isExiting\n  }));\n}\n/**\n * A tooltip displays a description of an element on hover or focus.\n */\nconst $4e3b923658d69c60$export$28c660c63b792dea = /*#__PURE__*/(0, $cCslV$forwardRef)($4e3b923658d69c60$var$Tooltip);\nfunction $4e3b923658d69c60$var$TooltipInner(props) {\n  let state = (0, $cCslV$useContext)($4e3b923658d69c60$export$7a7623236eec67fa);\n  // Calculate the arrow size internally\n  // Referenced from: packages/@react-spectrum/tooltip/src/TooltipTrigger.tsx\n  let arrowRef = (0, $cCslV$useRef)(null);\n  let [arrowWidth, setArrowWidth] = (0, $cCslV$useState)(0);\n  (0, $cCslV$useLayoutEffect)(() => {\n    if (arrowRef.current && state.isOpen) setArrowWidth(arrowRef.current.getBoundingClientRect().width);\n  }, [state.isOpen, arrowRef]);\n  let {\n    overlayProps: overlayProps,\n    arrowProps: arrowProps,\n    placement: placement\n  } = (0, $cCslV$useOverlayPosition)({\n    placement: props.placement || 'top',\n    targetRef: props.triggerRef,\n    overlayRef: props.tooltipRef,\n    offset: props.offset,\n    crossOffset: props.crossOffset,\n    isOpen: state.isOpen,\n    arrowSize: arrowWidth,\n    arrowBoundaryOffset: props.arrowBoundaryOffset,\n    shouldFlip: props.shouldFlip\n  });\n  let isEntering = (0, $64fa3d84918910a7$export$6d3443f2c48bfc20)(props.tooltipRef, !!placement) || props.isEntering || false;\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({\n    ...props,\n    defaultClassName: 'react-aria-Tooltip',\n    values: {\n      placement: placement,\n      isEntering: isEntering,\n      isExiting: props.isExiting,\n      state: state\n    }\n  });\n  props = (0, $cCslV$mergeProps)(props, overlayProps);\n  let {\n    tooltipProps: tooltipProps\n  } = (0, $cCslV$useTooltip)(props, state);\n  return /*#__PURE__*/(0, $cCslV$react).createElement(\"div\", {\n    ...tooltipProps,\n    ref: props.tooltipRef,\n    ...renderProps,\n    style: {\n      ...overlayProps.style,\n      ...renderProps.style\n    },\n    \"data-placement\": placement,\n    \"data-entering\": isEntering || undefined,\n    \"data-exiting\": props.isExiting || undefined\n  }, /*#__PURE__*/(0, $cCslV$react).createElement((0, $44f671af83e7d9e0$export$2de4954e8ae13b9f).Provider, {\n    value: {\n      ...arrowProps,\n      placement: placement,\n      ref: arrowRef\n    }\n  }, renderProps.children));\n}\nexport { $4e3b923658d69c60$export$7a7623236eec67fa as TooltipTriggerStateContext, $4e3b923658d69c60$export$39ae08fa83328b12 as TooltipContext, $4e3b923658d69c60$export$8c610744efcf8a1d as TooltipTrigger, $4e3b923658d69c60$export$28c660c63b792dea as Tooltip };","map":{"version":3,"names":["$4e3b923658d69c60$export$7a7623236eec67fa","$cCslV$createContext","$4e3b923658d69c60$export$39ae08fa83328b12","$4e3b923658d69c60$export$8c610744efcf8a1d","props","state","$cCslV$useTooltipTriggerState","ref","$cCslV$useRef","triggerProps","tooltipProps","$cCslV$useTooltipTrigger","$cCslV$react","createElement","$64fa3d84918910a7$export$2881499e37b75b9a","values","triggerRef","$cCslV$FocusableProvider","children","$4e3b923658d69c60$var$Tooltip","UNSTABLE_portalContainer","$64fa3d84918910a7$export$29f1550f4b0d4415","contextState","$cCslV$useContext","localState","isOpen","defaultOpen","isExiting","$64fa3d84918910a7$export$45fda7c47f93fd48","$cCslV$OverlayContainer","portalContainer","$4e3b923658d69c60$var$TooltipInner","tooltipRef","$4e3b923658d69c60$export$28c660c63b792dea","$cCslV$forwardRef","arrowRef","arrowWidth","setArrowWidth","$cCslV$useState","$cCslV$useLayoutEffect","current","getBoundingClientRect","width","overlayProps","arrowProps","placement","$cCslV$useOverlayPosition","targetRef","overlayRef","offset","crossOffset","arrowSize","arrowBoundaryOffset","shouldFlip","isEntering","$64fa3d84918910a7$export$6d3443f2c48bfc20","renderProps","$64fa3d84918910a7$export$4d86445c2cf5e3","defaultClassName","$cCslV$mergeProps","$cCslV$useTooltip","style","undefined","$44f671af83e7d9e0$export$2de4954e8ae13b9f","Provider","value"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/react-aria-components/dist/packages/react-aria-components/src/Tooltip.tsx"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, FocusableElement, forwardRefType, RefObject} from '@react-types/shared';\nimport {AriaPositionProps, mergeProps, OverlayContainer, Placement, PlacementAxis, PositionProps, useOverlayPosition, useTooltip, useTooltipTrigger} from 'react-aria';\nimport {ContextValue, Provider, RenderProps, useContextProps, useEnterAnimation, useExitAnimation, useRenderProps} from './utils';\nimport {FocusableProvider} from '@react-aria/focus';\nimport {OverlayArrowContext} from './OverlayArrow';\nimport {OverlayTriggerProps, TooltipTriggerProps, TooltipTriggerState, useTooltipTriggerState} from 'react-stately';\nimport React, {createContext, ForwardedRef, forwardRef, ReactNode, useContext, useRef, useState} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\nexport interface TooltipTriggerComponentProps extends TooltipTriggerProps {\n  children: ReactNode\n}\n\nexport interface TooltipProps extends PositionProps, Pick<AriaPositionProps, 'arrowBoundaryOffset'>, OverlayTriggerProps, AriaLabelingProps, RenderProps<TooltipRenderProps> {\n  /**\n   * The ref for the element which the tooltip positions itself with respect to.\n   *\n   * When used within a TooltipTrigger this is set automatically. It is only required when used standalone.\n   */\n  triggerRef?: RefObject<Element | null>,\n  /**\n   * Whether the tooltip is currently performing an entry animation.\n   */\n  isEntering?: boolean,\n  /**\n   * Whether the tooltip is currently performing an exit animation.\n   */\n  isExiting?: boolean,\n  /**\n   * The container element in which the overlay portal will be placed. This may have unknown behavior depending on where it is portalled to.\n   * @default document.body\n   */\n  UNSTABLE_portalContainer?: Element,\n  /**\n   * The placement of the tooltip with respect to the trigger.\n   * @default 'top'\n   */\n  placement?: Placement\n}\n\nexport interface TooltipRenderProps {\n  /**\n   * The placement of the tooltip relative to the trigger.\n   * @selector [data-placement=\"left | right | top | bottom\"]\n   */\n  placement: PlacementAxis,\n  /**\n   * Whether the tooltip is currently entering. Use this to apply animations.\n   * @selector [data-entering]\n   */\n  isEntering: boolean,\n  /**\n   * Whether the tooltip is currently exiting. Use this to apply animations.\n   * @selector [data-exiting]\n   */\n  isExiting: boolean,\n  /**\n   * State of the tooltip.\n   */\n  state: TooltipTriggerState\n}\n\nexport const TooltipTriggerStateContext = createContext<TooltipTriggerState | null>(null);\nexport const TooltipContext = createContext<ContextValue<TooltipProps, HTMLDivElement>>(null);\n\n/**\n * TooltipTrigger wraps around a trigger element and a Tooltip. It handles opening and closing\n * the Tooltip when the user hovers over or focuses the trigger, and positioning the Tooltip\n * relative to the trigger.\n */\nexport function TooltipTrigger(props: TooltipTriggerComponentProps) {\n  let state = useTooltipTriggerState(props);\n  let ref = useRef<FocusableElement>(null);\n  let {triggerProps, tooltipProps} = useTooltipTrigger(props, state, ref);\n\n  return (\n    <Provider\n      values={[\n        [TooltipTriggerStateContext, state],\n        [TooltipContext, {...tooltipProps, triggerRef: ref}]\n      ]}>\n      <FocusableProvider {...triggerProps} ref={ref}>\n        {props.children}\n      </FocusableProvider>\n    </Provider>\n  );\n}\n\nfunction Tooltip({UNSTABLE_portalContainer, ...props}: TooltipProps, ref: ForwardedRef<HTMLDivElement>) {\n  [props, ref] = useContextProps(props, ref, TooltipContext);\n  let contextState = useContext(TooltipTriggerStateContext);\n  let localState = useTooltipTriggerState(props);\n  let state = props.isOpen != null || props.defaultOpen != null || !contextState ? localState : contextState;\n  let isExiting = useExitAnimation(ref, state.isOpen) || props.isExiting || false;\n  if (!state.isOpen && !isExiting) {\n    return null;\n  }\n\n  return (\n    <OverlayContainer portalContainer={UNSTABLE_portalContainer}>\n      <TooltipInner {...props} tooltipRef={ref} isExiting={isExiting} />\n    </OverlayContainer>\n  );\n}\n\n/**\n * A tooltip displays a description of an element on hover or focus.\n */\nconst _Tooltip = /*#__PURE__*/ (forwardRef as forwardRefType)(Tooltip);\nexport {_Tooltip as Tooltip};\n\nfunction TooltipInner(props: TooltipProps & {isExiting: boolean, tooltipRef: RefObject<HTMLDivElement | null>}) {\n  let state = useContext(TooltipTriggerStateContext)!;\n\n  // Calculate the arrow size internally\n  // Referenced from: packages/@react-spectrum/tooltip/src/TooltipTrigger.tsx\n  let arrowRef = useRef<HTMLDivElement>(null);\n  let [arrowWidth, setArrowWidth] = useState(0);\n  useLayoutEffect(() => {\n    if (arrowRef.current && state.isOpen) {\n      setArrowWidth(arrowRef.current.getBoundingClientRect().width);\n    }\n  }, [state.isOpen, arrowRef]);\n\n  let {overlayProps, arrowProps, placement} = useOverlayPosition({\n    placement: props.placement || 'top',\n    targetRef: props.triggerRef!,\n    overlayRef: props.tooltipRef,\n    offset: props.offset,\n    crossOffset: props.crossOffset,\n    isOpen: state.isOpen,\n    arrowSize: arrowWidth,\n    arrowBoundaryOffset: props.arrowBoundaryOffset,\n    shouldFlip: props.shouldFlip\n  });\n\n  let isEntering = useEnterAnimation(props.tooltipRef, !!placement) || props.isEntering || false;\n  let renderProps = useRenderProps({\n    ...props,\n    defaultClassName: 'react-aria-Tooltip',\n    values: {\n      placement,\n      isEntering,\n      isExiting: props.isExiting,\n      state\n    }\n  });\n\n  props = mergeProps(props, overlayProps);\n  let {tooltipProps} = useTooltip(props, state);\n\n  return (\n    <div\n      {...tooltipProps}\n      ref={props.tooltipRef}\n      {...renderProps}\n      style={{...overlayProps.style, ...renderProps.style}}\n      data-placement={placement}\n      data-entering={isEntering || undefined}\n      data-exiting={props.isExiting || undefined}>\n      <OverlayArrowContext.Provider value={{...arrowProps, placement, ref: arrowRef}}>\n        {renderProps.children}\n      </OverlayArrowContext.Provider>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
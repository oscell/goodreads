{"ast":null,"code":"import { ProgressBarBase as $ddf9337e928b5fe6$export$7c6ed87244065f3a } from \"./ProgressBarBase.mjs\";\nimport \"./vars.67d165e1.css\";\nimport $b214y$barloader_vars_cssmodulejs from \"./barloader_vars_css.mjs\";\nimport { classNames as $b214y$classNames } from \"@react-spectrum/utils\";\nimport $b214y$react from \"react\";\nimport { useProgressBar as $b214y$useProgressBar } from \"@react-aria/progress\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $551ca31cb687f352$var$ProgressBar(props, ref) {\n  let {\n    staticColor: staticColor,\n    variant: variant,\n    ...otherProps\n  } = props;\n  const {\n    progressBarProps: progressBarProps,\n    labelProps: labelProps\n  } = (0, $b214y$useProgressBar)(props);\n  return /*#__PURE__*/(0, $b214y$react).createElement((0, $ddf9337e928b5fe6$export$7c6ed87244065f3a), {\n    ...otherProps,\n    ref: ref,\n    barProps: progressBarProps,\n    labelProps: labelProps,\n    barClassName: (0, $b214y$classNames)((0, $parcel$interopDefault($b214y$barloader_vars_cssmodulejs)), {\n      'spectrum-BarLoader--overBackground': variant === 'overBackground',\n      'spectrum-BarLoader--staticWhite': staticColor === 'white',\n      'spectrum-BarLoader--staticBlack': staticColor === 'black'\n    })\n  });\n}\n/**\n * ProgressBars show the progression of a system operation: downloading, uploading, processing, etc., in a visual way.\n * They can represent either determinate or indeterminate progress.\n */\nlet $551ca31cb687f352$export$c17561cb55d4db30 = /*#__PURE__*/(0, $b214y$react).forwardRef($551ca31cb687f352$var$ProgressBar);\nexport { $551ca31cb687f352$export$c17561cb55d4db30 as ProgressBar };","map":{"version":3,"names":["$551ca31cb687f352$var$ProgressBar","props","ref","staticColor","variant","otherProps","progressBarProps","labelProps","$b214y$useProgressBar","$b214y$react","createElement","$ddf9337e928b5fe6$export$7c6ed87244065f3a","barProps","barClassName","$b214y$classNames","$parcel$interopDefault","$b214y$barloader_vars_cssmodulejs","$551ca31cb687f352$export$c17561cb55d4db30","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-spectrum/progress/dist/packages/@react-spectrum/progress/src/ProgressBar.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {ProgressBarBase} from './ProgressBarBase';\nimport React from 'react';\nimport {SpectrumProgressBarProps} from '@react-types/progress';\nimport styles from '@adobe/spectrum-css-temp/components/barloader/vars.css';\nimport {useProgressBar} from '@react-aria/progress';\n\nfunction ProgressBar(props: SpectrumProgressBarProps, ref: DOMRef<HTMLDivElement>) {\n  let {staticColor, variant, ...otherProps} = props;\n  const {\n    progressBarProps,\n    labelProps\n  } = useProgressBar(props);\n\n  return (\n    <ProgressBarBase\n      {...otherProps}\n      ref={ref}\n      barProps={progressBarProps}\n      labelProps={labelProps}\n      barClassName={\n        classNames(\n          styles,\n          {\n            'spectrum-BarLoader--overBackground': variant === 'overBackground',\n            'spectrum-BarLoader--staticWhite': staticColor === 'white',\n            'spectrum-BarLoader--staticBlack': staticColor === 'black'\n          }\n        )\n      } />\n  );\n}\n\n/**\n * ProgressBars show the progression of a system operation: downloading, uploading, processing, etc., in a visual way.\n * They can represent either determinate or indeterminate progress.\n */\nlet _ProgressBar = React.forwardRef(ProgressBar);\nexport {_ProgressBar as ProgressBar};\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;AAoBA,SAASA,kCAAYC,KAA+B,EAAEC,GAA2B;EAC/E,IAAI;IAAAC,WAAA,EAACA,WAAW;IAAAC,OAAA,EAAEA,OAAO;IAAE,GAAGC;EAAA,CAAW,GAAGJ,KAAA;EAC5C,MAAM;IAAAK,gBAAA,EACJA,gBAAgB;IAAAC,UAAA,EAChBA;EAAU,CACX,GAAG,IAAAC,qBAAa,EAAEP,KAAA;EAEnB,oBACE,IAAAQ,YAAA,EAAAC,aAAA,EAAC,GAAAC,yCAAc;IACZ,GAAGN,UAAU;IACdH,GAAA,EAAKA,GAAA;IACLU,QAAA,EAAUN,gBAAA;IACVC,UAAA,EAAYA,UAAA;IACZM,YAAA,EACE,IAAAC,iBAAS,GACP,GAAAC,sBAAA,CAAAC,iCAAA,CAAK,GACL;MACE,sCAAsCZ,OAAA,KAAY;MAClD,mCAAmCD,WAAA,KAAgB;MACnD,mCAAmCA,WAAA,KAAgB;IACrD;;AAIV;AAEA;;;;AAIA,IAAIc,yCAAA,gBAAe,IAAAR,YAAI,EAAES,UAAU,CAAClB,iCAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
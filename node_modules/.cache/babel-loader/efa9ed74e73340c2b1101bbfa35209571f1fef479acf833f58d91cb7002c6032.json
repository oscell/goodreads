{"ast":null,"code":"import \"./vars.afa33fec.css\";\nimport $14nVg$tabs_vars_cssmodulejs from \"./tabs_vars_css.mjs\";\nimport { useDOMRef as $14nVg$useDOMRef, useStyleProps as $14nVg$useStyleProps, classNames as $14nVg$classNames, SlotProvider as $14nVg$SlotProvider, unwrapDOMRef as $14nVg$unwrapDOMRef } from \"@react-spectrum/utils\";\nimport { useResizeObserver as $14nVg$useResizeObserver, useId as $14nVg$useId, filterDOMProps as $14nVg$filterDOMProps, mergeProps as $14nVg$mergeProps, useLayoutEffect as $14nVg$useLayoutEffect } from \"@react-aria/utils\";\nimport { FocusRing as $14nVg$FocusRing } from \"@react-aria/focus\";\nimport { Picker as $14nVg$Picker, Item as $14nVg$Item } from \"@react-spectrum/picker\";\nimport { ListCollection as $14nVg$ListCollection } from \"@react-stately/list\";\nimport $14nVg$react, { useRef as $14nVg$useRef, useState as $14nVg$useState, useEffect as $14nVg$useEffect, useCallback as $14nVg$useCallback, useContext as $14nVg$useContext } from \"react\";\nimport { useTabListState as $14nVg$useTabListState } from \"@react-stately/tabs\";\nimport { Text as $14nVg$Text } from \"@react-spectrum/text\";\nimport { useCollection as $14nVg$useCollection } from \"@react-stately/collections\";\nimport { useHover as $14nVg$useHover } from \"@react-aria/interactions\";\nimport { useLocale as $14nVg$useLocale } from \"@react-aria/i18n\";\nimport { useProviderProps as $14nVg$useProviderProps, useProvider as $14nVg$useProvider } from \"@react-spectrum/provider\";\nimport { useTab as $14nVg$useTab, useTabList as $14nVg$useTabList, useTabPanel as $14nVg$useTabPanel } from \"@react-aria/tabs\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $65ab70ddbed1564b$var$TabContext = /*#__PURE__*/(0, $14nVg$react).createContext(null);\nfunction $65ab70ddbed1564b$var$Tabs(props, ref) {\n  props = (0, $14nVg$useProviderProps)(props);\n  let {\n    orientation = 'horizontal',\n    density = 'regular',\n    children: children,\n    ...otherProps\n  } = props;\n  let domRef = (0, $14nVg$useDOMRef)(ref);\n  let tablistRef = (0, $14nVg$useRef)(null);\n  let wrapperRef = (0, $14nVg$useRef)(null);\n  let {\n    direction: direction\n  } = (0, $14nVg$useLocale)();\n  let {\n    styleProps: styleProps\n  } = (0, $14nVg$useStyleProps)(otherProps);\n  let [collapsed, setCollapsed] = (0, $14nVg$useState)(false);\n  let [selectedTab, setSelectedTab] = (0, $14nVg$useState)(null);\n  const [tabListState, setTabListState] = (0, $14nVg$useState)(null);\n  let [tabPositions, setTabPositions] = (0, $14nVg$useState)([]);\n  let prevTabPositions = (0, $14nVg$useRef)(tabPositions);\n  (0, $14nVg$useEffect)(() => {\n    if (tablistRef.current) {\n      var _tabListState_selectedKey;\n      var _tabListState_selectedKey_toString;\n      let selectedTab = tablistRef.current.querySelector(`[data-key=\"${CSS.escape((_tabListState_selectedKey_toString = tabListState === null || tabListState === void 0 ? void 0 : (_tabListState_selectedKey = tabListState.selectedKey) === null || _tabListState_selectedKey === void 0 ? void 0 : _tabListState_selectedKey.toString()) !== null && _tabListState_selectedKey_toString !== void 0 ? _tabListState_selectedKey_toString : '')}\"]`);\n      if (selectedTab != null) setSelectedTab(selectedTab);\n    }\n    // collapse is in the dep array so selectedTab can be updated for TabLine positioning\n  }, [children, tabListState === null || tabListState === void 0 ? void 0 : tabListState.selectedKey, collapsed, tablistRef]);\n  let checkShouldCollapse = (0, $14nVg$useCallback)(() => {\n    if (wrapperRef.current && orientation !== 'vertical') {\n      var _tablistRef_current;\n      let tabsComponent = wrapperRef.current;\n      var _tablistRef_current_querySelectorAll;\n      let tabs = (_tablistRef_current_querySelectorAll = (_tablistRef_current = tablistRef.current) === null || _tablistRef_current === void 0 ? void 0 : _tablistRef_current.querySelectorAll('[role=\"tab\"]')) !== null && _tablistRef_current_querySelectorAll !== void 0 ? _tablistRef_current_querySelectorAll : new NodeList();\n      let tabDimensions = [...tabs].map(tab => tab.getBoundingClientRect());\n      let end = direction === 'rtl' ? 'left' : 'right';\n      let farEdgeTabList = tabsComponent.getBoundingClientRect()[end];\n      let farEdgeLastTab = tabDimensions[tabDimensions.length - 1][end];\n      let shouldCollapse = direction === 'rtl' ? farEdgeLastTab < farEdgeTabList : farEdgeTabList < farEdgeLastTab;\n      setCollapsed(shouldCollapse);\n      if (tabDimensions.length !== prevTabPositions.current.length || tabDimensions.some((box, index) => {\n        var _prevTabPositions_current_index, _prevTabPositions_current_index1;\n        return (box === null || box === void 0 ? void 0 : box.left) !== ((_prevTabPositions_current_index = prevTabPositions.current[index]) === null || _prevTabPositions_current_index === void 0 ? void 0 : _prevTabPositions_current_index.left) || (box === null || box === void 0 ? void 0 : box.right) !== ((_prevTabPositions_current_index1 = prevTabPositions.current[index]) === null || _prevTabPositions_current_index1 === void 0 ? void 0 : _prevTabPositions_current_index1.right);\n      })) {\n        setTabPositions(tabDimensions);\n        prevTabPositions.current = tabDimensions;\n      }\n    }\n  }, [tablistRef, wrapperRef, direction, orientation, setCollapsed, prevTabPositions, setTabPositions]);\n  (0, $14nVg$useEffect)(() => {\n    checkShouldCollapse();\n  }, [children, checkShouldCollapse]);\n  (0, $14nVg$useResizeObserver)({\n    ref: wrapperRef,\n    onResize: checkShouldCollapse\n  });\n  let tabPanelProps = {\n    'aria-labelledby': undefined\n  };\n  // When the tabs are collapsed, the tabPanel should be labelled by the Picker button element.\n  let collapsibleTabListId = (0, $14nVg$useId)();\n  if (collapsed && orientation !== 'vertical') tabPanelProps['aria-labelledby'] = collapsibleTabListId;\n  return /*#__PURE__*/(0, $14nVg$react).createElement($65ab70ddbed1564b$var$TabContext.Provider, {\n    value: {\n      tabProps: {\n        ...props,\n        orientation: orientation,\n        density: density\n      },\n      tabState: {\n        tabListState: tabListState,\n        setTabListState: setTabListState,\n        selectedTab: selectedTab,\n        collapsed: collapsed\n      },\n      refs: {\n        tablistRef: tablistRef,\n        wrapperRef: wrapperRef\n      },\n      tabPanelProps: tabPanelProps,\n      tabLineState: tabPositions\n    }\n  }, /*#__PURE__*/(0, $14nVg$react).createElement(\"div\", {\n    ...(0, $14nVg$filterDOMProps)(otherProps),\n    ...styleProps,\n    ref: domRef,\n    className: (0, $14nVg$classNames)((0, $parcel$interopDefault($14nVg$tabs_vars_cssmodulejs)), 'spectrum-TabsPanel', `spectrum-TabsPanel--${orientation}`, styleProps.className)\n  }, props.children));\n}\n// @private\nfunction $65ab70ddbed1564b$var$Tab(props) {\n  let {\n    item: item,\n    state: state\n  } = props;\n  let {\n    key: key,\n    rendered: rendered\n  } = item;\n  let ref = (0, $14nVg$useRef)(undefined);\n  let {\n    tabProps: tabProps,\n    isSelected: isSelected,\n    isDisabled: isDisabled\n  } = (0, $14nVg$useTab)({\n    key: key\n  }, state, ref);\n  let {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  } = (0, $14nVg$useHover)({\n    ...props\n  });\n  let ElementType = item.props.href ? 'a' : 'div';\n  return /*#__PURE__*/(0, $14nVg$react).createElement((0, $14nVg$FocusRing), {\n    focusRingClass: (0, $14nVg$classNames)((0, $parcel$interopDefault($14nVg$tabs_vars_cssmodulejs)), 'focus-ring')\n  }, /*#__PURE__*/(0, $14nVg$react).createElement(ElementType, {\n    ...(0, $14nVg$mergeProps)(tabProps, hoverProps),\n    ref: ref,\n    className: (0, $14nVg$classNames)((0, $parcel$interopDefault($14nVg$tabs_vars_cssmodulejs)), 'spectrum-Tabs-item', {\n      'is-selected': isSelected,\n      'is-disabled': isDisabled,\n      'is-hovered': isHovered\n    })\n  }, /*#__PURE__*/(0, $14nVg$react).createElement((0, $14nVg$SlotProvider), {\n    slots: {\n      icon: {\n        size: 'S',\n        UNSAFE_className: (0, $14nVg$classNames)((0, $parcel$interopDefault($14nVg$tabs_vars_cssmodulejs)), 'spectrum-Icon')\n      },\n      text: {\n        UNSAFE_className: (0, $14nVg$classNames)((0, $parcel$interopDefault($14nVg$tabs_vars_cssmodulejs)), 'spectrum-Tabs-itemLabel')\n      }\n    }\n  }, typeof rendered === 'string' ? /*#__PURE__*/(0, $14nVg$react).createElement((0, $14nVg$Text), null, rendered) : rendered)));\n}\n// @private\nfunction $65ab70ddbed1564b$var$TabLine(props) {\n  let {\n    orientation: orientation,\n    selectedTab:\n    // Is either the tab node (non-collapsed) or the picker node (collapsed)\n    selectedTab,\n    selectedKey:\n    // selectedKey is provided so that the TabLine styles are updated when the TabPicker's width updates from a selection change\n    selectedKey\n  } = props;\n  let {\n    direction: direction\n  } = (0, $14nVg$useLocale)();\n  let {\n    scale: scale\n  } = (0, $14nVg$useProvider)();\n  let {\n    tabLineState: tabLineState\n  } = (0, $14nVg$useContext)($65ab70ddbed1564b$var$TabContext);\n  let [style, setStyle] = (0, $14nVg$useState)({\n    width: undefined,\n    height: undefined\n  });\n  let onResize = (0, $14nVg$useCallback)(() => {\n    if (selectedTab) {\n      var _selectedTab_offsetParent;\n      let styleObj = {\n        transform: undefined,\n        width: undefined,\n        height: undefined\n      };\n      // In RTL, calculate the transform from the right edge of the tablist so that resizing the window doesn't break the Tabline position due to offsetLeft changes\n      let offset = direction === 'rtl' ? -1 * (((_selectedTab_offsetParent = selectedTab.offsetParent) === null || _selectedTab_offsetParent === void 0 ? void 0 : _selectedTab_offsetParent.offsetWidth) - selectedTab.offsetWidth - selectedTab.offsetLeft) : selectedTab.offsetLeft;\n      styleObj.transform = orientation === 'vertical' ? `translateY(${selectedTab.offsetTop}px)` : `translateX(${offset}px)`;\n      if (orientation === 'horizontal') styleObj.width = `${selectedTab.offsetWidth}px`;else styleObj.height = `${selectedTab.offsetHeight}px`;\n      setStyle(styleObj);\n    }\n  }, [direction, setStyle, selectedTab, orientation]);\n  (0, $14nVg$useLayoutEffect)(() => {\n    onResize();\n  }, [onResize, scale, selectedKey, tabLineState]);\n  return /*#__PURE__*/(0, $14nVg$react).createElement(\"div\", {\n    className: (0, $14nVg$classNames)((0, $parcel$interopDefault($14nVg$tabs_vars_cssmodulejs)), 'spectrum-Tabs-selectionIndicator'),\n    role: \"presentation\",\n    style: style\n  });\n}\nfunction $65ab70ddbed1564b$export$e51a686c67fdaa2d(props) {\n  const tabContext = (0, $14nVg$useContext)($65ab70ddbed1564b$var$TabContext);\n  const {\n    refs: refs,\n    tabState: tabState,\n    tabProps: tabProps,\n    tabPanelProps: tabPanelProps\n  } = tabContext;\n  const {\n    isQuiet: isQuiet,\n    density: density,\n    isEmphasized: isEmphasized,\n    orientation: orientation\n  } = tabProps;\n  const {\n    selectedTab: selectedTab,\n    collapsed: collapsed,\n    setTabListState: setTabListState\n  } = tabState;\n  const {\n    tablistRef: tablistRef,\n    wrapperRef: wrapperRef\n  } = refs;\n  // Pass original Tab props but override children to create the collection.\n  const state = (0, $14nVg$useTabListState)({\n    ...tabProps,\n    children: props.children\n  });\n  let {\n    styleProps: styleProps\n  } = (0, $14nVg$useStyleProps)(props);\n  const {\n    tabListProps: tabListProps\n  } = (0, $14nVg$useTabList)({\n    ...tabProps,\n    ...props\n  }, state, tablistRef);\n  (0, $14nVg$useEffect)(() => {\n    // Passing back to root as useTabPanel needs the TabListState\n    setTabListState(state);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.disabledKeys, state.selectedItem, state.selectedKey, props.children]);\n  let collapseStyle = collapsed && orientation !== 'vertical' ? {\n    maxWidth: 'calc(100% + 1px)',\n    overflow: 'hidden',\n    visibility: 'hidden',\n    position: 'absolute'\n  } : {\n    maxWidth: 'calc(100% + 1px)'\n  };\n  let stylePropsFinal = orientation === 'vertical' ? styleProps : {\n    style: collapseStyle\n  };\n  if (collapsed && orientation !== 'vertical') tabListProps['aria-hidden'] = true;\n  let tabListclassName = (0, $14nVg$classNames)((0, $parcel$interopDefault($14nVg$tabs_vars_cssmodulejs)), 'spectrum-TabsPanel-tabs');\n  const tabContent = /*#__PURE__*/(0, $14nVg$react).createElement(\"div\", {\n    ...stylePropsFinal,\n    ...tabListProps,\n    ref: tablistRef,\n    className: (0, $14nVg$classNames)((0, $parcel$interopDefault($14nVg$tabs_vars_cssmodulejs)), 'spectrum-Tabs', `spectrum-Tabs--${orientation}`, tabListclassName, {\n      'spectrum-Tabs--quiet': isQuiet,\n      'spectrum-Tabs--emphasized': isEmphasized,\n      ['spectrum-Tabs--compact']: density === 'compact'\n    }, orientation === 'vertical' && styleProps.className)\n  }, [...state.collection].map(item => /*#__PURE__*/(0, $14nVg$react).createElement($65ab70ddbed1564b$var$Tab, {\n    key: item.key,\n    item: item,\n    state: state,\n    orientation: orientation\n  })), /*#__PURE__*/(0, $14nVg$react).createElement($65ab70ddbed1564b$var$TabLine, {\n    orientation: orientation,\n    selectedTab: selectedTab\n  }));\n  if (orientation === 'vertical') return tabContent;else return /*#__PURE__*/(0, $14nVg$react).createElement(\"div\", {\n    ...styleProps,\n    ref: wrapperRef,\n    className: (0, $14nVg$classNames)((0, $parcel$interopDefault($14nVg$tabs_vars_cssmodulejs)), 'spectrum-TabsPanel-collapseWrapper', styleProps.className)\n  }, /*#__PURE__*/(0, $14nVg$react).createElement($65ab70ddbed1564b$var$TabPicker, {\n    ...props,\n    ...tabProps,\n    visible: collapsed,\n    id: tabPanelProps['aria-labelledby'],\n    state: state,\n    className: tabListclassName\n  }), tabContent);\n}\nfunction $65ab70ddbed1564b$export$5dae8d435677f210(props) {\n  const {\n    tabState: tabState,\n    tabProps: tabProps\n  } = (0, $14nVg$useContext)($65ab70ddbed1564b$var$TabContext);\n  const {\n    tabListState: tabListState\n  } = tabState;\n  const factory = (0, $14nVg$useCallback)(nodes => new (0, $14nVg$ListCollection)(nodes), []);\n  const collection = (0, $14nVg$useCollection)({\n    items: tabProps.items,\n    ...props\n  }, factory, {\n    suppressTextValueWarning: true\n  });\n  const selectedItem = tabListState && tabListState.selectedKey != null ? collection.getItem(tabListState.selectedKey) : null;\n  return /*#__PURE__*/(0, $14nVg$react).createElement($65ab70ddbed1564b$var$TabPanel, {\n    ...props,\n    key: tabListState === null || tabListState === void 0 ? void 0 : tabListState.selectedKey\n  }, selectedItem && selectedItem.props.children);\n}\n// @private\nfunction $65ab70ddbed1564b$var$TabPanel(props) {\n  const {\n    tabState: tabState,\n    tabPanelProps: ctxTabPanelProps\n  } = (0, $14nVg$useContext)($65ab70ddbed1564b$var$TabContext);\n  const {\n    tabListState: tabListState\n  } = tabState;\n  let ref = (0, $14nVg$useRef)(null);\n  const {\n    tabPanelProps: tabPanelProps\n  } = (0, $14nVg$useTabPanel)(props, tabListState, ref);\n  let {\n    styleProps: styleProps\n  } = (0, $14nVg$useStyleProps)(props);\n  if (ctxTabPanelProps['aria-labelledby']) tabPanelProps['aria-labelledby'] = ctxTabPanelProps['aria-labelledby'];\n  return /*#__PURE__*/(0, $14nVg$react).createElement((0, $14nVg$FocusRing), {\n    focusRingClass: (0, $14nVg$classNames)((0, $parcel$interopDefault($14nVg$tabs_vars_cssmodulejs)), 'focus-ring')\n  }, /*#__PURE__*/(0, $14nVg$react).createElement(\"div\", {\n    ...styleProps,\n    ...tabPanelProps,\n    ref: ref,\n    className: (0, $14nVg$classNames)((0, $parcel$interopDefault($14nVg$tabs_vars_cssmodulejs)), 'spectrum-TabsPanel-tabpanel', styleProps.className)\n  }, props.children));\n}\nfunction $65ab70ddbed1564b$var$TabPicker(props) {\n  let {\n    isDisabled: isDisabled,\n    isEmphasized: isEmphasized,\n    isQuiet: isQuiet,\n    state: state,\n    'aria-labelledby': ariaLabeledBy,\n    'aria-label': ariaLabel,\n    density: density,\n    className: className,\n    id: id,\n    visible: visible\n  } = props;\n  let ref = (0, $14nVg$useRef)(null);\n  let [pickerNode, setPickerNode] = (0, $14nVg$useState)(null);\n  (0, $14nVg$useEffect)(() => {\n    let node = (0, $14nVg$unwrapDOMRef)(ref);\n    setPickerNode(node.current);\n  }, [ref]);\n  let items = [...state.collection];\n  let pickerProps = {\n    'aria-labelledby': ariaLabeledBy,\n    'aria-label': ariaLabel\n  };\n  const style = visible ? {} : {\n    visibility: 'hidden',\n    position: 'absolute'\n  };\n  return /*#__PURE__*/(0, $14nVg$react).createElement(\"div\", {\n    className: (0, $14nVg$classNames)((0, $parcel$interopDefault($14nVg$tabs_vars_cssmodulejs)), 'spectrum-Tabs', 'spectrum-Tabs--horizontal', 'spectrum-Tabs--isCollapsed', {\n      'spectrum-Tabs--quiet': isQuiet,\n      ['spectrum-Tabs--compact']: density === 'compact',\n      'spectrum-Tabs--emphasized': isEmphasized\n    }, className),\n    style: style,\n    \"aria-hidden\": visible ? undefined : true\n  }, /*#__PURE__*/(0, $14nVg$react).createElement((0, $14nVg$SlotProvider), {\n    slots: {\n      icon: {\n        size: 'S',\n        UNSAFE_className: (0, $14nVg$classNames)((0, $parcel$interopDefault($14nVg$tabs_vars_cssmodulejs)), 'spectrum-Icon')\n      },\n      button: {\n        focusRingClass: (0, $14nVg$classNames)((0, $parcel$interopDefault($14nVg$tabs_vars_cssmodulejs)), 'focus-ring')\n      }\n    }\n  }, /*#__PURE__*/(0, $14nVg$react).createElement((0, $14nVg$Picker), {\n    ...pickerProps,\n    id: id,\n    items: items,\n    ref: ref,\n    isQuiet: true,\n    isDisabled: !visible || isDisabled,\n    selectedKey: state.selectedKey,\n    disabledKeys: state.disabledKeys,\n    onSelectionChange: state.setSelectedKey,\n    UNSAFE_className: (0, $14nVg$classNames)((0, $parcel$interopDefault($14nVg$tabs_vars_cssmodulejs)), 'spectrum-Tabs-picker')\n  }, item => /*#__PURE__*/(0, $14nVg$react).createElement((0, $14nVg$Item), item.props, item.rendered)), pickerNode && /*#__PURE__*/(0, $14nVg$react).createElement($65ab70ddbed1564b$var$TabLine, {\n    orientation: \"horizontal\",\n    selectedTab: pickerNode,\n    selectedKey: state.selectedKey\n  })));\n}\n/**\n * Tabs organize content into multiple sections and allow users to navigate between them. The content under the set of tabs should be related and form a coherent unit.\n */ // forwardRef doesn't support generic parameters, so cast the result to the correct type\n// https://stackoverflow.com/questions/58469229/react-with-typescript-generics-while-using-react-forwardref\nconst $65ab70ddbed1564b$export$b2539bed5023c21c = /*#__PURE__*/(0, $14nVg$react).forwardRef($65ab70ddbed1564b$var$Tabs);\nexport { $65ab70ddbed1564b$export$e51a686c67fdaa2d as TabList, $65ab70ddbed1564b$export$5dae8d435677f210 as TabPanels, $65ab70ddbed1564b$export$b2539bed5023c21c as Tabs };","map":{"version":3,"names":["$65ab70ddbed1564b$var$TabContext","$14nVg$react","createContext","$65ab70ddbed1564b$var$Tabs","props","ref","$14nVg$useProviderProps","orientation","density","children","otherProps","domRef","$14nVg$useDOMRef","tablistRef","$14nVg$useRef","wrapperRef","direction","$14nVg$useLocale","styleProps","$14nVg$useStyleProps","collapsed","setCollapsed","$14nVg$useState","selectedTab","setSelectedTab","tabListState","setTabListState","tabPositions","setTabPositions","prevTabPositions","$14nVg$useEffect","current","_tabListState_selectedKey","_tabListState_selectedKey_toString","querySelector","CSS","escape","selectedKey","toString","checkShouldCollapse","$14nVg$useCallback","_tablistRef_current","tabsComponent","_tablistRef_current_querySelectorAll","tabs","querySelectorAll","NodeList","tabDimensions","map","tab","getBoundingClientRect","end","farEdgeTabList","farEdgeLastTab","length","shouldCollapse","some","box","index","_prevTabPositions_current_index","_prevTabPositions_current_index1","left","right","$14nVg$useResizeObserver","onResize","tabPanelProps","undefined","collapsibleTabListId","$14nVg$useId","createElement","Provider","value","tabProps","tabState","refs","tabLineState","$14nVg$filterDOMProps","className","$14nVg$classNames","$parcel$interopDefault","$14nVg$tabs_vars_cssmodulejs","$65ab70ddbed1564b$var$Tab","item","state","key","rendered","isSelected","isDisabled","$14nVg$useTab","hoverProps","isHovered","$14nVg$useHover","ElementType","href","$14nVg$FocusRing","focusRingClass","$14nVg$mergeProps","$14nVg$SlotProvider","slots","icon","size","UNSAFE_className","text","$14nVg$Text","$65ab70ddbed1564b$var$TabLine","scale","$14nVg$useProvider","$14nVg$useContext","style","setStyle","width","height","_selectedTab_offsetParent","styleObj","transform","offset","offsetParent","offsetWidth","offsetLeft","offsetTop","offsetHeight","$14nVg$useLayoutEffect","role","$65ab70ddbed1564b$export$e51a686c67fdaa2d","tabContext","isQuiet","isEmphasized","$14nVg$useTabListState","tabListProps","$14nVg$useTabList","disabledKeys","selectedItem","collapseStyle","maxWidth","overflow","visibility","position","stylePropsFinal","tabListclassName","tabContent","collection","$65ab70ddbed1564b$var$TabPicker","visible","id","$65ab70ddbed1564b$export$5dae8d435677f210","factory","nodes","$14nVg$ListCollection","$14nVg$useCollection","items","suppressTextValueWarning","getItem","$65ab70ddbed1564b$var$TabPanel","ctxTabPanelProps","$14nVg$useTabPanel","ariaLabeledBy","ariaLabel","pickerNode","setPickerNode","node","$14nVg$unwrapDOMRef","pickerProps","button","$14nVg$Picker","onSelectionChange","setSelectedKey","$14nVg$Item","$65ab70ddbed1564b$export$b2539bed5023c21c","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-spectrum/tabs/dist/packages/@react-spectrum/tabs/src/Tabs.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTabPanelProps, SpectrumTabListProps, SpectrumTabPanelsProps, SpectrumTabsProps} from '@react-types/tabs';\nimport {classNames, SlotProvider, unwrapDOMRef, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMProps, DOMRef, DOMRefValue, Key, Node, Orientation, RefObject, StyleProps} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, useId, useLayoutEffect, useResizeObserver} from '@react-aria/utils';\nimport {FocusRing} from '@react-aria/focus';\nimport {Item, Picker} from '@react-spectrum/picker';\nimport {ListCollection} from '@react-stately/list';\nimport React, {\n  CSSProperties,\n  HTMLAttributes,\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState\n} from 'react';\nimport {SpectrumPickerProps} from '@react-types/select';\nimport styles from '@adobe/spectrum-css-temp/components/tabs/vars.css';\nimport {TabListState, useTabListState} from '@react-stately/tabs';\nimport {Text} from '@react-spectrum/text';\nimport {useCollection} from '@react-stately/collections';\nimport {useHover} from '@react-aria/interactions';\nimport {useLocale} from '@react-aria/i18n';\nimport {useProvider, useProviderProps} from '@react-spectrum/provider';\nimport {useTab, useTabList, useTabPanel} from '@react-aria/tabs';\n\ninterface TabsContext<T> {\n  tabProps: SpectrumTabsProps<T>,\n  tabState: {\n    tabListState: TabListState<T> | null,\n    setTabListState: (state: TabListState<T>) => void,\n    selectedTab: HTMLElement | null,\n    collapsed: boolean\n  },\n  refs: {\n    wrapperRef: RefObject<HTMLDivElement | null>,\n    tablistRef: RefObject<HTMLDivElement | null>\n  },\n  tabPanelProps: HTMLAttributes<HTMLElement>,\n  tabLineState: Array<DOMRect>\n}\n\nconst TabContext = React.createContext<TabsContext<any> | null>(null);\n\nfunction Tabs<T extends object>(props: SpectrumTabsProps<T>, ref: DOMRef<HTMLDivElement>) {\n  props = useProviderProps(props);\n  let {\n    orientation = 'horizontal' as Orientation,\n    density = 'regular',\n    children,\n    ...otherProps\n  } = props;\n\n  let domRef = useDOMRef(ref);\n  let tablistRef = useRef<HTMLDivElement>(null);\n  let wrapperRef = useRef<HTMLDivElement>(null);\n\n  let {direction} = useLocale();\n  let {styleProps} = useStyleProps(otherProps);\n  let [collapsed, setCollapsed] = useState(false);\n  let [selectedTab, setSelectedTab] = useState<HTMLElement | null>(null);\n  const [tabListState, setTabListState] = useState<TabListState<T> | null>(null);\n  let [tabPositions, setTabPositions] = useState<DOMRect[]>([]);\n  let prevTabPositions = useRef<DOMRect[]>(tabPositions);\n\n  useEffect(() => {\n    if (tablistRef.current) {\n      let selectedTab: HTMLElement | null = tablistRef.current.querySelector(`[data-key=\"${CSS.escape(tabListState?.selectedKey?.toString() ?? '')}\"]`);\n\n      if (selectedTab != null) {\n        setSelectedTab(selectedTab);\n      }\n    }\n    // collapse is in the dep array so selectedTab can be updated for TabLine positioning\n  }, [children, tabListState?.selectedKey, collapsed, tablistRef]);\n\n  let checkShouldCollapse = useCallback(() => {\n    if (wrapperRef.current && orientation !== 'vertical') {\n      let tabsComponent = wrapperRef.current;\n      let tabs: NodeListOf<Element> = tablistRef.current?.querySelectorAll('[role=\"tab\"]') ?? new NodeList() as NodeListOf<Element>;\n      let tabDimensions = [...tabs].map((tab: Element) => tab.getBoundingClientRect());\n\n      let end = direction === 'rtl' ? 'left' : 'right';\n      let farEdgeTabList = tabsComponent.getBoundingClientRect()[end];\n      let farEdgeLastTab = tabDimensions[tabDimensions.length - 1][end];\n      let shouldCollapse = direction === 'rtl' ? farEdgeLastTab < farEdgeTabList : farEdgeTabList < farEdgeLastTab;\n      setCollapsed(shouldCollapse);\n      if (tabDimensions.length !== prevTabPositions.current.length\n        || tabDimensions.some((box, index) => box?.left !== prevTabPositions.current[index]?.left || box?.right !== prevTabPositions.current[index]?.right)) {\n        setTabPositions(tabDimensions);\n        prevTabPositions.current = tabDimensions;\n      }\n    }\n  }, [tablistRef, wrapperRef, direction, orientation, setCollapsed, prevTabPositions, setTabPositions]);\n\n  useEffect(() => {\n    checkShouldCollapse();\n  }, [children, checkShouldCollapse]);\n\n  useResizeObserver({ref: wrapperRef, onResize: checkShouldCollapse});\n\n  let tabPanelProps: HTMLAttributes<HTMLElement> = {\n    'aria-labelledby': undefined\n  };\n\n  // When the tabs are collapsed, the tabPanel should be labelled by the Picker button element.\n  let collapsibleTabListId = useId();\n  if (collapsed && orientation !== 'vertical') {\n    tabPanelProps['aria-labelledby'] = collapsibleTabListId;\n  }\n  return (\n    <TabContext.Provider\n      value={{\n        tabProps: {...props, orientation, density},\n        tabState: {tabListState, setTabListState, selectedTab, collapsed},\n        refs: {tablistRef, wrapperRef},\n        tabPanelProps,\n        tabLineState: tabPositions\n      }}>\n      <div\n        {...filterDOMProps(otherProps)}\n        {...styleProps}\n        ref={domRef}\n        className={classNames(\n          styles,\n          'spectrum-TabsPanel',\n          `spectrum-TabsPanel--${orientation}`,\n          styleProps.className\n        )}>\n        {props.children}\n      </div>\n    </TabContext.Provider>\n  );\n}\n\ninterface TabProps<T> extends DOMProps {\n  item: Node<T>,\n  state: TabListState<T>,\n  isDisabled?: boolean,\n  orientation?: Orientation\n}\n\n// @private\nfunction Tab<T>(props: TabProps<T>) {\n  let {item, state} = props;\n  let {key, rendered} = item;\n\n  let ref = useRef<any>(undefined);\n  let {tabProps, isSelected, isDisabled} = useTab({key}, state, ref);\n\n  let {hoverProps, isHovered} = useHover({\n    ...props\n  });\n  let ElementType: React.ElementType = item.props.href ? 'a' : 'div';\n\n  return (\n    <FocusRing focusRingClass={classNames(styles, 'focus-ring')}>\n      <ElementType\n        {...mergeProps(tabProps, hoverProps)}\n        ref={ref}\n        className={classNames(\n          styles,\n          'spectrum-Tabs-item',\n          {\n            'is-selected': isSelected,\n            'is-disabled': isDisabled,\n            'is-hovered': isHovered\n          }\n        )}>\n        <SlotProvider\n          slots={{\n            icon: {\n              size: 'S',\n              UNSAFE_className: classNames(styles, 'spectrum-Icon')\n            },\n            text: {\n              UNSAFE_className: classNames(styles, 'spectrum-Tabs-itemLabel')\n            }\n          }}>\n          {typeof rendered === 'string'\n            ? <Text>{rendered}</Text>\n            : rendered}\n        </SlotProvider>\n      </ElementType>\n    </FocusRing>\n  );\n}\n\ninterface TabLineProps {\n  orientation?: Orientation,\n  selectedTab?: HTMLElement | null,\n  selectedKey?: Key | null\n}\n\n// @private\nfunction TabLine(props: TabLineProps) {\n  let {\n    orientation,\n    // Is either the tab node (non-collapsed) or the picker node (collapsed)\n    selectedTab,\n    // selectedKey is provided so that the TabLine styles are updated when the TabPicker's width updates from a selection change\n    selectedKey\n  } = props;\n\n  let {direction} = useLocale();\n  let {scale} = useProvider();\n  let {tabLineState} = useContext(TabContext)!;\n\n  let [style, setStyle] = useState<CSSProperties>({\n    width: undefined,\n    height: undefined\n  });\n\n  let onResize = useCallback(() => {\n    if (selectedTab) {\n      let styleObj: CSSProperties = {transform: undefined, width: undefined, height: undefined};\n      // In RTL, calculate the transform from the right edge of the tablist so that resizing the window doesn't break the Tabline position due to offsetLeft changes\n      let offset = direction === 'rtl' ?\n        -1 * ((selectedTab.offsetParent as HTMLElement)?.offsetWidth - selectedTab.offsetWidth - selectedTab.offsetLeft) :\n        selectedTab.offsetLeft;\n      styleObj.transform = orientation === 'vertical'\n        ? `translateY(${selectedTab.offsetTop}px)`\n        : `translateX(${offset}px)`;\n\n      if (orientation === 'horizontal') {\n        styleObj.width = `${selectedTab.offsetWidth}px`;\n      } else {\n        styleObj.height = `${selectedTab.offsetHeight}px`;\n      }\n      setStyle(styleObj);\n    }\n  }, [direction, setStyle, selectedTab, orientation]);\n\n  useLayoutEffect(() => {\n    onResize();\n  }, [onResize, scale, selectedKey, tabLineState]);\n\n  return <div className={classNames(styles, 'spectrum-Tabs-selectionIndicator')} role=\"presentation\" style={style} />;\n}\n\n/**\n * A TabList is used within Tabs to group tabs that a user can switch between.\n * The keys of the items within the <TabList> must match up with a corresponding item inside the <TabPanels>.\n */\nexport function TabList<T>(props: SpectrumTabListProps<T>) {\n  const tabContext = useContext(TabContext)!;\n  const {refs, tabState, tabProps, tabPanelProps} = tabContext;\n  const {isQuiet, density, isEmphasized, orientation} = tabProps;\n  const {selectedTab, collapsed, setTabListState} = tabState;\n  const {tablistRef, wrapperRef} = refs;\n  // Pass original Tab props but override children to create the collection.\n  const state = useTabListState({...tabProps, children: props.children});\n\n  let {styleProps} = useStyleProps(props);\n  const {tabListProps} = useTabList({...tabProps, ...props}, state, tablistRef);\n\n  useEffect(() => {\n    // Passing back to root as useTabPanel needs the TabListState\n    setTabListState(state);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.disabledKeys, state.selectedItem, state.selectedKey, props.children]);\n\n  let collapseStyle : React.CSSProperties = collapsed && orientation !== 'vertical' ? {maxWidth: 'calc(100% + 1px)', overflow: 'hidden', visibility: 'hidden', position: 'absolute'} : {maxWidth: 'calc(100% + 1px)'};\n  let stylePropsFinal = orientation === 'vertical' ? styleProps : {style: collapseStyle};\n\n  if (collapsed && orientation !== 'vertical') {\n    tabListProps['aria-hidden'] = true;\n  }\n\n  let tabListclassName = classNames(styles, 'spectrum-TabsPanel-tabs');\n\n  const tabContent = (\n    <div\n      {...stylePropsFinal}\n      {...tabListProps}\n      ref={tablistRef}\n      className={classNames(\n        styles,\n        'spectrum-Tabs',\n        `spectrum-Tabs--${orientation}`,\n        tabListclassName,\n        {\n          'spectrum-Tabs--quiet': isQuiet,\n          'spectrum-Tabs--emphasized': isEmphasized,\n          ['spectrum-Tabs--compact']: density === 'compact'\n        },\n        orientation === 'vertical' && styleProps.className\n      )\n      }>\n      {[...state.collection].map((item) => (\n        <Tab key={item.key} item={item} state={state} orientation={orientation} />\n      ))}\n      <TabLine orientation={orientation} selectedTab={selectedTab} />\n    </div>\n  );\n\n\n  if (orientation === 'vertical') {\n    return tabContent;\n  } else {\n    return (\n      <div\n        {...styleProps}\n        ref={wrapperRef}\n        className={classNames(\n          styles,\n          'spectrum-TabsPanel-collapseWrapper',\n          styleProps.className\n        )}>\n        <TabPicker {...props} {...tabProps} visible={collapsed} id={tabPanelProps['aria-labelledby']} state={state} className={tabListclassName} />\n        {tabContent}\n      </div>\n    );\n  }\n}\n\n/**\n * TabPanels is used within Tabs as a container for the content of each tab.\n * The keys of the items within the <TabPanels> must match up with a corresponding item inside the <TabList>.\n */\nexport function TabPanels<T extends object>(props: SpectrumTabPanelsProps<T>) {\n  const {tabState, tabProps} = useContext(TabContext)!;\n  const {tabListState} = tabState;\n\n  const factory = useCallback((nodes: Iterable<Node<T>>) => new ListCollection(nodes), []);\n  const collection = useCollection({items: tabProps.items, ...props}, factory, {suppressTextValueWarning: true});\n  const selectedItem = tabListState && tabListState.selectedKey != null ? collection.getItem(tabListState.selectedKey) : null;\n\n  return (\n    <TabPanel {...props} key={tabListState?.selectedKey}>\n      {selectedItem && selectedItem.props.children}\n    </TabPanel>\n  );\n}\n\ninterface TabPanelProps extends AriaTabPanelProps, StyleProps {\n  children?: ReactNode\n}\n\n// @private\nfunction TabPanel(props: TabPanelProps) {\n  const {tabState, tabPanelProps: ctxTabPanelProps} = useContext(TabContext)!;\n  const {tabListState} = tabState;\n  let ref = useRef<HTMLDivElement | null>(null);\n  const {tabPanelProps} = useTabPanel(props, tabListState, ref);\n  let {styleProps} = useStyleProps(props);\n\n  if (ctxTabPanelProps['aria-labelledby']) {\n    tabPanelProps['aria-labelledby'] = ctxTabPanelProps['aria-labelledby'];\n  }\n\n  return (\n    <FocusRing focusRingClass={classNames(styles, 'focus-ring')}>\n      <div {...styleProps} {...tabPanelProps} ref={ref} className={classNames(styles, 'spectrum-TabsPanel-tabpanel', styleProps.className)}>\n        {props.children}\n      </div>\n    </FocusRing>\n  );\n}\n\ninterface TabPickerProps<T> extends Omit<SpectrumPickerProps<T>, 'children'> {\n  density?: 'compact' | 'regular',\n  isEmphasized?: boolean,\n  state: TabListState<T>,\n  className?: string,\n  visible: boolean\n}\n\nfunction TabPicker<T>(props: TabPickerProps<T>) {\n  let {\n    isDisabled,\n    isEmphasized,\n    isQuiet,\n    state,\n    'aria-labelledby': ariaLabeledBy,\n    'aria-label': ariaLabel,\n    density,\n    className,\n    id,\n    visible\n  } = props;\n\n  let ref = useRef<DOMRefValue<HTMLDivElement>>(null);\n  let [pickerNode, setPickerNode] = useState<HTMLElement | null>(null);\n\n  useEffect(() => {\n    let node = unwrapDOMRef(ref);\n    setPickerNode(node.current);\n  }, [ref]);\n\n  let items = [...state.collection];\n  let pickerProps = {\n    'aria-labelledby': ariaLabeledBy,\n    'aria-label': ariaLabel\n  };\n\n  const style : React.CSSProperties = visible ? {} : {visibility: 'hidden', position: 'absolute'};\n\n  return (\n    <div\n      className={classNames(\n        styles,\n        'spectrum-Tabs',\n        'spectrum-Tabs--horizontal',\n        'spectrum-Tabs--isCollapsed',\n        {\n          'spectrum-Tabs--quiet': isQuiet,\n          ['spectrum-Tabs--compact']: density === 'compact',\n          'spectrum-Tabs--emphasized': isEmphasized\n        },\n        className\n      )}\n      style={style}\n      aria-hidden={visible ? undefined : true}>\n      <SlotProvider\n        slots={{\n          icon: {\n            size: 'S',\n            UNSAFE_className: classNames(styles, 'spectrum-Icon')\n          },\n          button: {\n            focusRingClass: classNames(styles, 'focus-ring')\n          }\n        }}>\n        <Picker\n          {...pickerProps}\n          id={id}\n          items={items}\n          ref={ref}\n          isQuiet\n          isDisabled={!visible || isDisabled}\n          selectedKey={state.selectedKey}\n          disabledKeys={state.disabledKeys}\n          onSelectionChange={state.setSelectedKey}\n          UNSAFE_className={classNames(styles, 'spectrum-Tabs-picker')}>\n          {item => <Item {...item.props}>{item.rendered}</Item>}\n        </Picker>\n        {pickerNode && <TabLine orientation=\"horizontal\" selectedTab={pickerNode} selectedKey={state.selectedKey} />}\n      </SlotProvider>\n    </div>\n  );\n}\n\n/**\n * Tabs organize content into multiple sections and allow users to navigate between them. The content under the set of tabs should be related and form a coherent unit.\n */\n// forwardRef doesn't support generic parameters, so cast the result to the correct type\n// https://stackoverflow.com/questions/58469229/react-with-typescript-generics-while-using-react-forwardref\nconst _Tabs = React.forwardRef(Tabs) as <T>(props: SpectrumTabsProps<T> & {ref?: DOMRef<HTMLDivElement>}) => ReactElement;\nexport {_Tabs as Tabs};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
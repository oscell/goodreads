{"ast":null,"code":"import { h } from 'preact';\nimport Template from \"../Template/Template.js\";\nvar VoiceSearch = function VoiceSearch(_ref) {\n  var cssClasses = _ref.cssClasses,\n    isBrowserSupported = _ref.isBrowserSupported,\n    isListening = _ref.isListening,\n    toggleListening = _ref.toggleListening,\n    voiceListeningState = _ref.voiceListeningState,\n    templates = _ref.templates;\n  var handleClick = function handleClick(event) {\n    if (event.currentTarget instanceof HTMLElement) {\n      event.currentTarget.blur();\n    }\n    toggleListening();\n  };\n  var status = voiceListeningState.status,\n    transcript = voiceListeningState.transcript,\n    isSpeechFinal = voiceListeningState.isSpeechFinal,\n    errorCode = voiceListeningState.errorCode;\n  return h(\"div\", {\n    className: cssClasses.root\n  }, h(Template, {\n    templateKey: \"buttonText\",\n    rootTagName: \"button\",\n    rootProps: {\n      className: cssClasses.button,\n      type: 'button',\n      title: \"Search by voice\".concat(isBrowserSupported ? '' : ' (not supported on this browser)'),\n      onClick: handleClick,\n      disabled: !isBrowserSupported\n    },\n    data: {\n      status: status,\n      errorCode: errorCode,\n      isListening: isListening,\n      transcript: transcript,\n      isSpeechFinal: isSpeechFinal,\n      isBrowserSupported: isBrowserSupported\n    },\n    templates: templates\n  }), h(Template, {\n    templateKey: \"status\",\n    rootProps: {\n      className: cssClasses.status\n    },\n    data: {\n      status: status,\n      errorCode: errorCode,\n      isListening: isListening,\n      transcript: transcript,\n      isSpeechFinal: isSpeechFinal,\n      isBrowserSupported: isBrowserSupported\n    },\n    templates: templates\n  }));\n};\nexport default VoiceSearch;","map":{"version":3,"names":["h","Template","VoiceSearch","_ref","cssClasses","isBrowserSupported","isListening","toggleListening","voiceListeningState","templates","handleClick","event","currentTarget","HTMLElement","blur","status","transcript","isSpeechFinal","errorCode","className","root","templateKey","rootTagName","rootProps","button","type","title","concat","onClick","disabled","data"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/instantsearch.js/es/components/VoiceSearch/VoiceSearch.js"],"sourcesContent":["import { h } from 'preact';\nimport Template from \"../Template/Template.js\";\nvar VoiceSearch = function VoiceSearch(_ref) {\n  var cssClasses = _ref.cssClasses,\n    isBrowserSupported = _ref.isBrowserSupported,\n    isListening = _ref.isListening,\n    toggleListening = _ref.toggleListening,\n    voiceListeningState = _ref.voiceListeningState,\n    templates = _ref.templates;\n  var handleClick = function handleClick(event) {\n    if (event.currentTarget instanceof HTMLElement) {\n      event.currentTarget.blur();\n    }\n    toggleListening();\n  };\n  var status = voiceListeningState.status,\n    transcript = voiceListeningState.transcript,\n    isSpeechFinal = voiceListeningState.isSpeechFinal,\n    errorCode = voiceListeningState.errorCode;\n  return h(\"div\", {\n    className: cssClasses.root\n  }, h(Template, {\n    templateKey: \"buttonText\",\n    rootTagName: \"button\",\n    rootProps: {\n      className: cssClasses.button,\n      type: 'button',\n      title: \"Search by voice\".concat(isBrowserSupported ? '' : ' (not supported on this browser)'),\n      onClick: handleClick,\n      disabled: !isBrowserSupported\n    },\n    data: {\n      status: status,\n      errorCode: errorCode,\n      isListening: isListening,\n      transcript: transcript,\n      isSpeechFinal: isSpeechFinal,\n      isBrowserSupported: isBrowserSupported\n    },\n    templates: templates\n  }), h(Template, {\n    templateKey: \"status\",\n    rootProps: {\n      className: cssClasses.status\n    },\n    data: {\n      status: status,\n      errorCode: errorCode,\n      isListening: isListening,\n      transcript: transcript,\n      isSpeechFinal: isSpeechFinal,\n      isBrowserSupported: isBrowserSupported\n    },\n    templates: templates\n  }));\n};\nexport default VoiceSearch;"],"mappings":"AAAA,SAASA,CAAC,QAAQ,QAAQ;AAC1B,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,IAAIC,WAAW,GAAG,SAASA,WAAWA,CAACC,IAAI,EAAE;EAC3C,IAAIC,UAAU,GAAGD,IAAI,CAACC,UAAU;IAC9BC,kBAAkB,GAAGF,IAAI,CAACE,kBAAkB;IAC5CC,WAAW,GAAGH,IAAI,CAACG,WAAW;IAC9BC,eAAe,GAAGJ,IAAI,CAACI,eAAe;IACtCC,mBAAmB,GAAGL,IAAI,CAACK,mBAAmB;IAC9CC,SAAS,GAAGN,IAAI,CAACM,SAAS;EAC5B,IAAIC,WAAW,GAAG,SAASA,WAAWA,CAACC,KAAK,EAAE;IAC5C,IAAIA,KAAK,CAACC,aAAa,YAAYC,WAAW,EAAE;MAC9CF,KAAK,CAACC,aAAa,CAACE,IAAI,CAAC,CAAC;IAC5B;IACAP,eAAe,CAAC,CAAC;EACnB,CAAC;EACD,IAAIQ,MAAM,GAAGP,mBAAmB,CAACO,MAAM;IACrCC,UAAU,GAAGR,mBAAmB,CAACQ,UAAU;IAC3CC,aAAa,GAAGT,mBAAmB,CAACS,aAAa;IACjDC,SAAS,GAAGV,mBAAmB,CAACU,SAAS;EAC3C,OAAOlB,CAAC,CAAC,KAAK,EAAE;IACdmB,SAAS,EAAEf,UAAU,CAACgB;EACxB,CAAC,EAAEpB,CAAC,CAACC,QAAQ,EAAE;IACboB,WAAW,EAAE,YAAY;IACzBC,WAAW,EAAE,QAAQ;IACrBC,SAAS,EAAE;MACTJ,SAAS,EAAEf,UAAU,CAACoB,MAAM;MAC5BC,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAE,iBAAiB,CAACC,MAAM,CAACtB,kBAAkB,GAAG,EAAE,GAAG,kCAAkC,CAAC;MAC7FuB,OAAO,EAAElB,WAAW;MACpBmB,QAAQ,EAAE,CAACxB;IACb,CAAC;IACDyB,IAAI,EAAE;MACJf,MAAM,EAAEA,MAAM;MACdG,SAAS,EAAEA,SAAS;MACpBZ,WAAW,EAAEA,WAAW;MACxBU,UAAU,EAAEA,UAAU;MACtBC,aAAa,EAAEA,aAAa;MAC5BZ,kBAAkB,EAAEA;IACtB,CAAC;IACDI,SAAS,EAAEA;EACb,CAAC,CAAC,EAAET,CAAC,CAACC,QAAQ,EAAE;IACdoB,WAAW,EAAE,QAAQ;IACrBE,SAAS,EAAE;MACTJ,SAAS,EAAEf,UAAU,CAACW;IACxB,CAAC;IACDe,IAAI,EAAE;MACJf,MAAM,EAAEA,MAAM;MACdG,SAAS,EAAEA,SAAS;MACpBZ,WAAW,EAAEA,WAAW;MACxBU,UAAU,EAAEA,UAAU;MACtBC,aAAa,EAAEA,aAAa;MAC5BZ,kBAAkB,EAAEA;IACtB,CAAC;IACDI,SAAS,EAAEA;EACb,CAAC,CAAC,CAAC;AACL,CAAC;AACD,eAAeP,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
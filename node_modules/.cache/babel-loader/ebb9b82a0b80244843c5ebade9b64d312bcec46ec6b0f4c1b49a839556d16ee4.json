{"ast":null,"code":"import { DatePickerSegment as $cfa347761f172638$export$6388987c5223b54e } from \"./DatePickerSegment.mjs\";\nimport \"./styles.4bf108e6.css\";\nimport $6iHxC$styles_cssmodulejs from \"./styles_css.mjs\";\nimport { Input as $79348162c55d687f$export$f5b8910cec6cf069 } from \"./Input.mjs\";\nimport { useFocusManagerRef as $04e96200274b03de$export$71a23a36270e4bf0, useFormatHelpText as $04e96200274b03de$export$322f4580ccd8dde6, useFormattedDateWidth as $04e96200274b03de$export$31e22e3c931fc056 } from \"./utils.mjs\";\nimport { classNames as $6iHxC$classNames } from \"@react-spectrum/utils\";\nimport { createCalendar as $6iHxC$createCalendar } from \"@internationalized/date\";\nimport { Field as $6iHxC$Field } from \"@react-spectrum/label\";\nimport $6iHxC$react, { useRef as $6iHxC$useRef } from \"react\";\nimport { useDateField as $6iHxC$useDateField } from \"@react-aria/datepicker\";\nimport { useDateFieldState as $6iHxC$useDateFieldState } from \"@react-stately/datepicker\";\nimport { useFormProps as $6iHxC$useFormProps } from \"@react-spectrum/form\";\nimport { useLocale as $6iHxC$useLocale } from \"@react-aria/i18n\";\nimport { useProviderProps as $6iHxC$useProviderProps } from \"@react-spectrum/provider\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $0129798af6791690$var$DateField(props, ref) {\n  props = (0, $6iHxC$useProviderProps)(props);\n  props = (0, $6iHxC$useFormProps)(props);\n  let {\n    autoFocus: autoFocus,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isRequired: isRequired,\n    isQuiet: isQuiet\n  } = props;\n  let domRef = (0, $04e96200274b03de$export$71a23a36270e4bf0)(ref);\n  let {\n    locale: locale\n  } = (0, $6iHxC$useLocale)();\n  let state = (0, $6iHxC$useDateFieldState)({\n    ...props,\n    locale: locale,\n    createCalendar: $6iHxC$createCalendar\n  });\n  let fieldRef = (0, $6iHxC$useRef)(null);\n  let inputRef = (0, $6iHxC$useRef)(null);\n  let {\n    labelProps: labelProps,\n    fieldProps: fieldProps,\n    inputProps: inputProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps,\n    isInvalid: isInvalid,\n    validationErrors: validationErrors,\n    validationDetails: validationDetails\n  } = (0, $6iHxC$useDateField)({\n    ...props,\n    inputRef: inputRef\n  }, state, fieldRef);\n  // Note: this description is intentionally not passed to useDatePicker.\n  // The format help text is unnecessary for screen reader users because each segment already has a label.\n  let description = (0, $04e96200274b03de$export$322f4580ccd8dde6)(props);\n  if (description && !props.description) descriptionProps.id = null;\n  let validationState = state.validationState || (isInvalid ? 'invalid' : null);\n  let approximateWidth = (0, $04e96200274b03de$export$31e22e3c931fc056)(state) + 'ch';\n  return /*#__PURE__*/(0, $6iHxC$react).createElement((0, $6iHxC$Field), {\n    ...props,\n    ref: domRef,\n    elementType: \"span\",\n    description: description,\n    labelProps: labelProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps,\n    validationState: validationState,\n    isInvalid: isInvalid,\n    validationErrors: validationErrors,\n    validationDetails: validationDetails,\n    wrapperClassName: (0, $6iHxC$classNames)((0, $parcel$interopDefault($6iHxC$styles_cssmodulejs)), 'react-spectrum-Datepicker-fieldWrapper')\n  }, /*#__PURE__*/(0, $6iHxC$react).createElement((0, $79348162c55d687f$export$f5b8910cec6cf069), {\n    ref: fieldRef,\n    fieldProps: fieldProps,\n    isDisabled: isDisabled,\n    isQuiet: isQuiet,\n    autoFocus: autoFocus,\n    validationState: validationState,\n    minWidth: approximateWidth,\n    className: (0, $6iHxC$classNames)((0, $parcel$interopDefault($6iHxC$styles_cssmodulejs)), 'react-spectrum-DateField')\n  }, state.segments.map((segment, i) => /*#__PURE__*/(0, $6iHxC$react).createElement((0, $cfa347761f172638$export$6388987c5223b54e), {\n    key: i,\n    segment: segment,\n    state: state,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isRequired: isRequired\n  })), /*#__PURE__*/(0, $6iHxC$react).createElement(\"input\", {\n    ...inputProps,\n    ref: inputRef\n  })));\n}\n/**\n * DateFields allow users to enter and edit date and time values using a keyboard.\n * Each part of a date value is displayed in an individually editable segment.\n */\nconst $0129798af6791690$export$d9781c7894a82487 = /*#__PURE__*/(0, $6iHxC$react).forwardRef($0129798af6791690$var$DateField);\nexport { $0129798af6791690$export$d9781c7894a82487 as DateField };","map":{"version":3,"names":["$0129798af6791690$var$DateField","props","ref","$6iHxC$useProviderProps","$6iHxC$useFormProps","autoFocus","isDisabled","isReadOnly","isRequired","isQuiet","domRef","$04e96200274b03de$export$71a23a36270e4bf0","locale","$6iHxC$useLocale","state","$6iHxC$useDateFieldState","$6iHxC$createCalendar","fieldRef","$6iHxC$useRef","inputRef","labelProps","fieldProps","inputProps","descriptionProps","errorMessageProps","isInvalid","validationErrors","validationDetails","$6iHxC$useDateField","description","$04e96200274b03de$export$322f4580ccd8dde6","id","validationState","approximateWidth","$04e96200274b03de$export$31e22e3c931fc056","$6iHxC$react","createElement","$6iHxC$Field","elementType","wrapperClassName","$6iHxC$classNames","$parcel$interopDefault","$6iHxC$styles_cssmodulejs","$79348162c55d687f$export$f5b8910cec6cf069","minWidth","className","segments","map","segment","i","$cfa347761f172638$export$6388987c5223b54e","key","$0129798af6791690$export$d9781c7894a82487","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-spectrum/datepicker/dist/packages/@react-spectrum/datepicker/src/DateField.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames} from '@react-spectrum/utils';\nimport {createCalendar} from '@internationalized/date';\nimport {DatePickerSegment} from './DatePickerSegment';\nimport datepickerStyles from './styles.css';\nimport {DateValue, SpectrumDateFieldProps} from '@react-types/datepicker';\nimport {Field} from '@react-spectrum/label';\nimport {FocusableRef} from '@react-types/shared';\nimport {Input} from './Input';\nimport React, {ReactElement, useRef} from 'react';\nimport {useDateField} from '@react-aria/datepicker';\nimport {useDateFieldState} from '@react-stately/datepicker';\nimport {useFocusManagerRef, useFormatHelpText, useFormattedDateWidth} from './utils';\nimport {useFormProps} from '@react-spectrum/form';\nimport {useLocale} from '@react-aria/i18n';\nimport {useProviderProps} from '@react-spectrum/provider';\n\nfunction DateField<T extends DateValue>(props: SpectrumDateFieldProps<T>, ref: FocusableRef<HTMLElement>) {\n  props = useProviderProps(props);\n  props = useFormProps(props);\n  let {\n    autoFocus,\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isQuiet\n  } = props;\n\n  let domRef = useFocusManagerRef(ref);\n  let {locale} = useLocale();\n  let state = useDateFieldState({\n    ...props,\n    locale,\n    createCalendar\n  });\n\n  let fieldRef = useRef(null);\n  let inputRef = useRef(null);\n  let {labelProps, fieldProps, inputProps, descriptionProps, errorMessageProps, isInvalid, validationErrors, validationDetails} = useDateField({\n    ...props,\n    inputRef\n  }, state, fieldRef);\n\n  // Note: this description is intentionally not passed to useDatePicker.\n  // The format help text is unnecessary for screen reader users because each segment already has a label.\n  let description = useFormatHelpText(props);\n  if (description && !props.description) {\n    descriptionProps.id = null;\n  }\n\n  let validationState = state.validationState || (isInvalid ? 'invalid' : null);\n\n  let approximateWidth = useFormattedDateWidth(state) + 'ch';\n\n  return (\n    <Field\n      {...props}\n      ref={domRef}\n      elementType=\"span\"\n      description={description}\n      labelProps={labelProps}\n      descriptionProps={descriptionProps}\n      errorMessageProps={errorMessageProps}\n      validationState={validationState}\n      isInvalid={isInvalid}\n      validationErrors={validationErrors}\n      validationDetails={validationDetails}\n      wrapperClassName={classNames(datepickerStyles, 'react-spectrum-Datepicker-fieldWrapper')}>\n      <Input\n        ref={fieldRef}\n        fieldProps={fieldProps}\n        isDisabled={isDisabled}\n        isQuiet={isQuiet}\n        autoFocus={autoFocus}\n        validationState={validationState}\n        minWidth={approximateWidth}\n        className={classNames(datepickerStyles, 'react-spectrum-DateField')}>\n        {state.segments.map((segment, i) =>\n          (<DatePickerSegment\n            key={i}\n            segment={segment}\n            state={state}\n            isDisabled={isDisabled}\n            isReadOnly={isReadOnly}\n            isRequired={isRequired} />)\n        )}\n        <input {...inputProps} ref={inputRef} />\n      </Input>\n    </Field>\n  );\n}\n\n/**\n * DateFields allow users to enter and edit date and time values using a keyboard.\n * Each part of a date value is displayed in an individually editable segment.\n */\nconst _DateField = React.forwardRef(DateField) as <T extends DateValue>(props: SpectrumDateFieldProps<T> & {ref?: FocusableRef<HTMLElement>}) => ReactElement;\nexport {_DateField as DateField};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
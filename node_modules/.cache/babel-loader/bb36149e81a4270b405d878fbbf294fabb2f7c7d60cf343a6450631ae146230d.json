{"ast":null,"code":"import { getDragModality as $7252cd45fc48c07c$export$1fb2158d224b542c, getTypes as $7252cd45fc48c07c$export$e1d41611756c6326 } from \"./utils.mjs\";\nimport { announce as $irqIb$announce } from \"@react-aria/live-announcer\";\nimport { ariaHideOutside as $irqIb$ariaHideOutside } from \"@react-aria/overlays\";\nimport { isVirtualClick as $irqIb$isVirtualClick, isVirtualPointerEvent as $irqIb$isVirtualPointerEvent } from \"@react-aria/utils\";\nimport { useState as $irqIb$useState, useEffect as $irqIb$useEffect } from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nlet $67560de7c78cb232$var$dropTargets = new Map();\nlet $67560de7c78cb232$var$dropItems = new Map();\nlet $67560de7c78cb232$var$dragSession = null;\nlet $67560de7c78cb232$var$subscriptions = new Set();\nfunction $67560de7c78cb232$export$c28d9fb4a54e471a(target) {\n  $67560de7c78cb232$var$dropTargets.set(target.element, target);\n  $67560de7c78cb232$var$dragSession === null || $67560de7c78cb232$var$dragSession === void 0 ? void 0 : $67560de7c78cb232$var$dragSession.updateValidDropTargets();\n  return () => {\n    $67560de7c78cb232$var$dropTargets.delete(target.element);\n    $67560de7c78cb232$var$dragSession === null || $67560de7c78cb232$var$dragSession === void 0 ? void 0 : $67560de7c78cb232$var$dragSession.updateValidDropTargets();\n  };\n}\nfunction $67560de7c78cb232$export$aef80212ac99c003(item) {\n  $67560de7c78cb232$var$dropItems.set(item.element, item);\n  return () => {\n    $67560de7c78cb232$var$dropItems.delete(item.element);\n  };\n}\nfunction $67560de7c78cb232$export$549dbcf8649bf3b2(target, stringFormatter) {\n  if ($67560de7c78cb232$var$dragSession) throw new Error('Cannot begin dragging while already dragging');\n  $67560de7c78cb232$var$dragSession = new $67560de7c78cb232$var$DragSession(target, stringFormatter);\n  requestAnimationFrame(() => {\n    $67560de7c78cb232$var$dragSession.setup();\n    if ((0, $7252cd45fc48c07c$export$1fb2158d224b542c)() === 'keyboard') $67560de7c78cb232$var$dragSession.next();\n  });\n  for (let cb of $67560de7c78cb232$var$subscriptions) cb();\n}\nfunction $67560de7c78cb232$export$418e185dd3f1b968() {\n  let [session, setSession] = (0, $irqIb$useState)($67560de7c78cb232$var$dragSession);\n  (0, $irqIb$useEffect)(() => {\n    let cb = () => setSession($67560de7c78cb232$var$dragSession);\n    $67560de7c78cb232$var$subscriptions.add(cb);\n    return () => {\n      $67560de7c78cb232$var$subscriptions.delete(cb);\n    };\n  }, []);\n  return session;\n}\nfunction $67560de7c78cb232$export$403bc76cbf68cf60() {\n  return !!$67560de7c78cb232$var$dragSession;\n}\nfunction $67560de7c78cb232$var$endDragging() {\n  $67560de7c78cb232$var$dragSession = null;\n  for (let cb of $67560de7c78cb232$var$subscriptions) cb();\n}\nfunction $67560de7c78cb232$export$7454aff2e161f241(element) {\n  for (let target of $67560de7c78cb232$var$dropTargets.keys()) {\n    if (target.contains(element)) return true;\n  }\n  return false;\n}\nconst $67560de7c78cb232$var$CANCELED_EVENTS = ['pointerdown', 'pointermove', 'pointerenter', 'pointerleave', 'pointerover', 'pointerout', 'pointerup', 'mousedown', 'mousemove', 'mouseenter', 'mouseleave', 'mouseover', 'mouseout', 'mouseup', 'touchstart', 'touchmove', 'touchend', 'focusin', 'focusout'];\nconst $67560de7c78cb232$var$CLICK_EVENTS = ['pointerup', 'mouseup', 'touchend'];\nconst $67560de7c78cb232$var$MESSAGES = {\n  keyboard: 'dragStartedKeyboard',\n  touch: 'dragStartedTouch',\n  virtual: 'dragStartedVirtual'\n};\nclass $67560de7c78cb232$var$DragSession {\n  setup() {\n    document.addEventListener('keydown', this.onKeyDown, true);\n    document.addEventListener('keyup', this.onKeyUp, true);\n    window.addEventListener('focus', this.onFocus, true);\n    window.addEventListener('blur', this.onBlur, true);\n    document.addEventListener('click', this.onClick, true);\n    document.addEventListener('pointerdown', this.onPointerDown, true);\n    for (let event of $67560de7c78cb232$var$CANCELED_EVENTS) document.addEventListener(event, this.cancelEvent, true);\n    this.mutationObserver = new MutationObserver(() => this.updateValidDropTargets());\n    this.updateValidDropTargets();\n    (0, $irqIb$announce)(this.stringFormatter.format($67560de7c78cb232$var$MESSAGES[(0, $7252cd45fc48c07c$export$1fb2158d224b542c)()]));\n  }\n  teardown() {\n    document.removeEventListener('keydown', this.onKeyDown, true);\n    document.removeEventListener('keyup', this.onKeyUp, true);\n    window.removeEventListener('focus', this.onFocus, true);\n    window.removeEventListener('blur', this.onBlur, true);\n    document.removeEventListener('click', this.onClick, true);\n    document.removeEventListener('pointerdown', this.onPointerDown, true);\n    for (let event of $67560de7c78cb232$var$CANCELED_EVENTS) document.removeEventListener(event, this.cancelEvent, true);\n    this.mutationObserver.disconnect();\n    this.restoreAriaHidden();\n  }\n  onKeyDown(e) {\n    var _this_currentDropTarget;\n    this.cancelEvent(e);\n    if (e.key === 'Escape') {\n      this.cancel();\n      return;\n    }\n    if (e.key === 'Tab' && !(e.metaKey || e.altKey || e.ctrlKey)) {\n      if (e.shiftKey) this.previous();else this.next();\n    }\n    if (typeof ((_this_currentDropTarget = this.currentDropTarget) === null || _this_currentDropTarget === void 0 ? void 0 : _this_currentDropTarget.onKeyDown) === 'function') this.currentDropTarget.onKeyDown(e, this.dragTarget);\n  }\n  onKeyUp(e) {\n    this.cancelEvent(e);\n    if (e.key === 'Enter') {\n      if (e.altKey) this.activate();else this.drop();\n    }\n  }\n  onFocus(e) {\n    // Prevent focus events, except to the original drag target.\n    if (e.target !== this.dragTarget.element) this.cancelEvent(e);\n    // Ignore focus events on the window/document (JSDOM). Will be handled in onBlur, below.\n    if (!(e.target instanceof HTMLElement) || e.target === this.dragTarget.element) return;\n    let dropTarget = this.validDropTargets.find(target => target.element === e.target) || this.validDropTargets.find(target => target.element.contains(e.target));\n    if (!dropTarget) {\n      if (this.currentDropTarget) this.currentDropTarget.element.focus();else this.dragTarget.element.focus();\n      return;\n    }\n    let item = $67560de7c78cb232$var$dropItems.get(e.target);\n    this.setCurrentDropTarget(dropTarget, item);\n  }\n  onBlur(e) {\n    if (e.target !== this.dragTarget.element) this.cancelEvent(e);\n    // If nothing is gaining focus, or e.relatedTarget is the window/document (JSDOM),\n    // restore focus back to the current drop target if any, or the original drag target.\n    if (!e.relatedTarget || !(e.relatedTarget instanceof HTMLElement)) {\n      if (this.currentDropTarget) this.currentDropTarget.element.focus();else this.dragTarget.element.focus();\n    }\n  }\n  onClick(e) {\n    this.cancelEvent(e);\n    if ((0, $irqIb$isVirtualClick)(e) || this.isVirtualClick) {\n      if (e.target === this.dragTarget.element) {\n        this.cancel();\n        return;\n      }\n      let dropTarget = this.validDropTargets.find(target => target.element.contains(e.target));\n      if (dropTarget) {\n        let item = $67560de7c78cb232$var$dropItems.get(e.target);\n        this.setCurrentDropTarget(dropTarget, item);\n        this.drop(item);\n      }\n    }\n  }\n  onPointerDown(e) {\n    // Android Talkback double tap has e.detail = 1 for onClick. Detect the virtual click in onPointerDown before onClick fires\n    // so we can properly perform cancel and drop operations.\n    this.cancelEvent(e);\n    this.isVirtualClick = (0, $irqIb$isVirtualPointerEvent)(e);\n  }\n  cancelEvent(e) {\n    var _this_dragTarget;\n    // Allow focusin and focusout on the drag target so focus ring works properly.\n    if ((e.type === 'focusin' || e.type === 'focusout') && e.target === ((_this_dragTarget = this.dragTarget) === null || _this_dragTarget === void 0 ? void 0 : _this_dragTarget.element)) return;\n    // Allow default for events that might cancel a click event\n    if (!$67560de7c78cb232$var$CLICK_EVENTS.includes(e.type)) e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n  }\n  updateValidDropTargets() {\n    if (!this.mutationObserver) return;\n    this.mutationObserver.disconnect();\n    if (this.restoreAriaHidden) this.restoreAriaHidden();\n    this.validDropTargets = $67560de7c78cb232$var$findValidDropTargets(this.dragTarget);\n    // Shuffle drop target order based on starting drag target.\n    if (this.validDropTargets.length > 0) {\n      let nearestIndex = this.findNearestDropTarget();\n      this.validDropTargets = [...this.validDropTargets.slice(nearestIndex), ...this.validDropTargets.slice(0, nearestIndex)];\n    }\n    if (this.currentDropTarget && !this.validDropTargets.includes(this.currentDropTarget)) this.setCurrentDropTarget(this.validDropTargets[0]);\n    // Find valid drop items within collections\n    let types = (0, $7252cd45fc48c07c$export$e1d41611756c6326)(this.dragTarget.items);\n    let validDropItems = [...$67560de7c78cb232$var$dropItems.values()].filter(item => {\n      if (typeof item.getDropOperation === 'function') return item.getDropOperation(types, this.dragTarget.allowedDropOperations) !== 'cancel';\n      return true;\n    });\n    // Filter out drop targets that contain valid items. We don't want to stop hiding elements\n    // other than the drop items that exist inside the collection.\n    let visibleDropTargets = this.validDropTargets.filter(target => !validDropItems.some(item => target.element.contains(item.element)));\n    this.restoreAriaHidden = (0, $irqIb$ariaHideOutside)([this.dragTarget.element, ...validDropItems.map(item => item.element), ...visibleDropTargets.map(target => target.element)]);\n    this.mutationObserver.observe(document.body, {\n      subtree: true,\n      attributes: true,\n      attributeFilter: ['aria-hidden']\n    });\n  }\n  next() {\n    if (!this.currentDropTarget) {\n      this.setCurrentDropTarget(this.validDropTargets[0]);\n      return;\n    }\n    let index = this.validDropTargets.indexOf(this.currentDropTarget);\n    if (index < 0) {\n      this.setCurrentDropTarget(this.validDropTargets[0]);\n      return;\n    }\n    // If we've reached the end of the valid drop targets, cycle back to the original drag target.\n    // This lets the user cancel the drag in case they don't have an Escape key (e.g. iPad keyboard case).\n    if (index === this.validDropTargets.length - 1) {\n      if (!this.dragTarget.element.closest('[aria-hidden=\"true\"]')) {\n        this.setCurrentDropTarget(null);\n        this.dragTarget.element.focus();\n      } else this.setCurrentDropTarget(this.validDropTargets[0]);\n    } else this.setCurrentDropTarget(this.validDropTargets[index + 1]);\n  }\n  previous() {\n    if (!this.currentDropTarget) {\n      this.setCurrentDropTarget(this.validDropTargets[this.validDropTargets.length - 1]);\n      return;\n    }\n    let index = this.validDropTargets.indexOf(this.currentDropTarget);\n    if (index < 0) {\n      this.setCurrentDropTarget(this.validDropTargets[this.validDropTargets.length - 1]);\n      return;\n    }\n    // If we've reached the start of the valid drop targets, cycle back to the original drag target.\n    // This lets the user cancel the drag in case they don't have an Escape key (e.g. iPad keyboard case).\n    if (index === 0) {\n      if (!this.dragTarget.element.closest('[aria-hidden=\"true\"]')) {\n        this.setCurrentDropTarget(null);\n        this.dragTarget.element.focus();\n      } else this.setCurrentDropTarget(this.validDropTargets[this.validDropTargets.length - 1]);\n    } else this.setCurrentDropTarget(this.validDropTargets[index - 1]);\n  }\n  findNearestDropTarget() {\n    let dragTargetRect = this.dragTarget.element.getBoundingClientRect();\n    let minDistance = Infinity;\n    let nearest = -1;\n    for (let i = 0; i < this.validDropTargets.length; i++) {\n      let dropTarget = this.validDropTargets[i];\n      let rect = dropTarget.element.getBoundingClientRect();\n      let dx = rect.left - dragTargetRect.left;\n      let dy = rect.top - dragTargetRect.top;\n      let dist = dx * dx + dy * dy;\n      if (dist < minDistance) {\n        minDistance = dist;\n        nearest = i;\n      }\n    }\n    return nearest;\n  }\n  setCurrentDropTarget(dropTarget, item) {\n    if (dropTarget !== this.currentDropTarget) {\n      if (this.currentDropTarget && typeof this.currentDropTarget.onDropExit === 'function') {\n        let rect = this.currentDropTarget.element.getBoundingClientRect();\n        this.currentDropTarget.onDropExit({\n          type: 'dropexit',\n          x: rect.left + rect.width / 2,\n          y: rect.top + rect.height / 2\n        });\n      }\n      this.currentDropTarget = dropTarget;\n      if (dropTarget) {\n        if (typeof dropTarget.onDropEnter === 'function') {\n          let rect = dropTarget.element.getBoundingClientRect();\n          dropTarget.onDropEnter({\n            type: 'dropenter',\n            x: rect.left + rect.width / 2,\n            y: rect.top + rect.height / 2\n          }, this.dragTarget);\n        }\n        if (!item) dropTarget === null || dropTarget === void 0 ? void 0 : dropTarget.element.focus();\n      }\n    }\n    if (item !== this.currentDropItem) {\n      if (item && typeof this.currentDropTarget.onDropTargetEnter === 'function') this.currentDropTarget.onDropTargetEnter(item === null || item === void 0 ? void 0 : item.target);\n      item === null || item === void 0 ? void 0 : item.element.focus();\n      this.currentDropItem = item;\n      // Announce first drop target after drag start announcement finishes.\n      // Otherwise, it will never get announced because drag start announcement is assertive.\n      if (!this.initialFocused) {\n        let label = item === null || item === void 0 ? void 0 : item.element.getAttribute('aria-label');\n        if (label) (0, $irqIb$announce)(label, 'polite');\n        this.initialFocused = true;\n      }\n    }\n  }\n  end() {\n    this.teardown();\n    $67560de7c78cb232$var$endDragging();\n    if (typeof this.dragTarget.onDragEnd === 'function') {\n      let target = this.currentDropTarget && this.dropOperation !== 'cancel' ? this.currentDropTarget : this.dragTarget;\n      let rect = target.element.getBoundingClientRect();\n      this.dragTarget.onDragEnd({\n        type: 'dragend',\n        x: rect.x + rect.width / 2,\n        y: rect.y + rect.height / 2,\n        dropOperation: this.dropOperation || 'cancel'\n      });\n    }\n    if (this.currentDropTarget && !this.currentDropTarget.preventFocusOnDrop)\n      // Re-trigger focus event on active element, since it will not have received it during dragging (see cancelEvent).\n      // This corrects state such as whether focus ring should appear.\n      // useDroppableCollection handles this itself, so this is only for standalone drop zones.\n      document.activeElement.dispatchEvent(new FocusEvent('focusin', {\n        bubbles: true\n      }));\n    this.setCurrentDropTarget(null);\n  }\n  cancel() {\n    this.setCurrentDropTarget(null);\n    this.end();\n    if (!this.dragTarget.element.closest('[aria-hidden=\"true\"]')) this.dragTarget.element.focus();\n    (0, $irqIb$announce)(this.stringFormatter.format('dropCanceled'));\n  }\n  drop(item) {\n    if (!this.currentDropTarget) {\n      this.cancel();\n      return;\n    }\n    if (typeof (item === null || item === void 0 ? void 0 : item.getDropOperation) === 'function') {\n      let types = (0, $7252cd45fc48c07c$export$e1d41611756c6326)(this.dragTarget.items);\n      this.dropOperation = item.getDropOperation(types, this.dragTarget.allowedDropOperations);\n    } else if (typeof this.currentDropTarget.getDropOperation === 'function') {\n      let types = (0, $7252cd45fc48c07c$export$e1d41611756c6326)(this.dragTarget.items);\n      this.dropOperation = this.currentDropTarget.getDropOperation(types, this.dragTarget.allowedDropOperations);\n    } else\n      // TODO: show menu ??\n      this.dropOperation = this.dragTarget.allowedDropOperations[0];\n    if (typeof this.currentDropTarget.onDrop === 'function') {\n      let items = this.dragTarget.items.map(item => ({\n        kind: 'text',\n        types: new Set(Object.keys(item)),\n        getText: type => Promise.resolve(item[type])\n      }));\n      let rect = this.currentDropTarget.element.getBoundingClientRect();\n      this.currentDropTarget.onDrop({\n        type: 'drop',\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height / 2,\n        items: items,\n        dropOperation: this.dropOperation\n      }, item === null || item === void 0 ? void 0 : item.target);\n    }\n    this.end();\n    (0, $irqIb$announce)(this.stringFormatter.format('dropComplete'));\n  }\n  activate() {\n    if (this.currentDropTarget && typeof this.currentDropTarget.onDropActivate === 'function') {\n      let rect = this.currentDropTarget.element.getBoundingClientRect();\n      this.currentDropTarget.onDropActivate({\n        type: 'dropactivate',\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height / 2\n      });\n    }\n  }\n  constructor(target, stringFormatter) {\n    this.dragTarget = target;\n    this.stringFormatter = stringFormatter;\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onPointerDown = this.onPointerDown.bind(this);\n    this.cancelEvent = this.cancelEvent.bind(this);\n    this.initialFocused = false;\n  }\n}\nfunction $67560de7c78cb232$var$findValidDropTargets(options) {\n  let types = (0, $7252cd45fc48c07c$export$e1d41611756c6326)(options.items);\n  return [...$67560de7c78cb232$var$dropTargets.values()].filter(target => {\n    if (target.element.closest('[aria-hidden=\"true\"]')) return false;\n    if (typeof target.getDropOperation === 'function') return target.getDropOperation(types, options.allowedDropOperations) !== 'cancel';\n    return true;\n  });\n}\nexport { $67560de7c78cb232$export$c28d9fb4a54e471a as registerDropTarget, $67560de7c78cb232$export$aef80212ac99c003 as registerDropItem, $67560de7c78cb232$export$549dbcf8649bf3b2 as beginDragging, $67560de7c78cb232$export$418e185dd3f1b968 as useDragSession, $67560de7c78cb232$export$403bc76cbf68cf60 as isVirtualDragging, $67560de7c78cb232$export$7454aff2e161f241 as isValidDropTarget };","map":{"version":3,"names":["$67560de7c78cb232$var$dropTargets","Map","$67560de7c78cb232$var$dropItems","$67560de7c78cb232$var$dragSession","$67560de7c78cb232$var$subscriptions","Set","$67560de7c78cb232$export$c28d9fb4a54e471a","target","set","element","updateValidDropTargets","delete","$67560de7c78cb232$export$aef80212ac99c003","item","$67560de7c78cb232$export$549dbcf8649bf3b2","stringFormatter","Error","$67560de7c78cb232$var$DragSession","requestAnimationFrame","setup","$7252cd45fc48c07c$export$1fb2158d224b542c","next","cb","$67560de7c78cb232$export$418e185dd3f1b968","session","setSession","$irqIb$useState","$irqIb$useEffect","add","$67560de7c78cb232$export$403bc76cbf68cf60","$67560de7c78cb232$var$endDragging","$67560de7c78cb232$export$7454aff2e161f241","keys","contains","$67560de7c78cb232$var$CANCELED_EVENTS","$67560de7c78cb232$var$CLICK_EVENTS","$67560de7c78cb232$var$MESSAGES","keyboard","touch","virtual","document","addEventListener","onKeyDown","onKeyUp","window","onFocus","onBlur","onClick","onPointerDown","event","cancelEvent","mutationObserver","MutationObserver","$irqIb$announce","format","teardown","removeEventListener","disconnect","restoreAriaHidden","e","_this_currentDropTarget","key","cancel","metaKey","altKey","ctrlKey","shiftKey","previous","currentDropTarget","dragTarget","activate","drop","HTMLElement","dropTarget","validDropTargets","find","focus","get","setCurrentDropTarget","relatedTarget","$irqIb$isVirtualClick","isVirtualClick","$irqIb$isVirtualPointerEvent","_this_dragTarget","type","includes","preventDefault","stopPropagation","stopImmediatePropagation","$67560de7c78cb232$var$findValidDropTargets","length","nearestIndex","findNearestDropTarget","slice","types","$7252cd45fc48c07c$export$e1d41611756c6326","items","validDropItems","values","filter","getDropOperation","allowedDropOperations","visibleDropTargets","some","$irqIb$ariaHideOutside","map","observe","body","subtree","attributes","attributeFilter","index","indexOf","closest","dragTargetRect","getBoundingClientRect","minDistance","Infinity","nearest","i","rect","dx","left","dy","top","dist","onDropExit","x","width","y","height","onDropEnter","currentDropItem","onDropTargetEnter","initialFocused","label","getAttribute","end","onDragEnd","dropOperation","preventFocusOnDrop","activeElement","dispatchEvent","FocusEvent","bubbles","onDrop","kind","Object","getText","Promise","resolve","onDropActivate","constructor","bind","options"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-aria/dnd/dist/packages/@react-aria/dnd/src/DragManager.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {ariaHideOutside} from '@react-aria/overlays';\nimport {DragEndEvent, DragItem, DropActivateEvent, DropEnterEvent, DropEvent, DropExitEvent, DropItem, DropOperation, DropTarget as DroppableCollectionTarget, FocusableElement} from '@react-types/shared';\nimport {getDragModality, getTypes} from './utils';\nimport {isVirtualClick, isVirtualPointerEvent} from '@react-aria/utils';\nimport type {LocalizedStringFormatter} from '@internationalized/string';\nimport {useEffect, useState} from 'react';\n\nlet dropTargets = new Map<Element, DropTarget>();\nlet dropItems = new Map<Element, DroppableItem>();\nlet dragSession: DragSession = null;\nlet subscriptions = new Set<() => void>();\n\ninterface DropTarget {\n  element: FocusableElement,\n  preventFocusOnDrop?: boolean,\n  getDropOperation?: (types: Set<string>, allowedOperations: DropOperation[]) => DropOperation,\n  onDropEnter?: (e: DropEnterEvent, dragTarget: DragTarget) => void,\n  onDropExit?: (e: DropExitEvent) => void,\n  onDropTargetEnter?: (target?: DroppableCollectionTarget) => void,\n  onDropActivate?: (e: DropActivateEvent, target?: DroppableCollectionTarget) => void,\n  onDrop?: (e: DropEvent, target?: DroppableCollectionTarget) => void,\n  onKeyDown?: (e: KeyboardEvent, dragTarget: DragTarget) => void\n}\n\nexport function registerDropTarget(target: DropTarget) {\n  dropTargets.set(target.element, target);\n  dragSession?.updateValidDropTargets();\n  return () => {\n    dropTargets.delete(target.element);\n    dragSession?.updateValidDropTargets();\n  };\n}\n\ninterface DroppableItem {\n  element: FocusableElement,\n  target: DroppableCollectionTarget,\n  getDropOperation?: (types: Set<string>, allowedOperations: DropOperation[]) => DropOperation\n}\n\nexport function registerDropItem(item: DroppableItem) {\n  dropItems.set(item.element, item);\n  return () => {\n    dropItems.delete(item.element);\n  };\n}\n\ninterface DragTarget {\n  element: FocusableElement,\n  items: DragItem[],\n  allowedDropOperations: DropOperation[],\n  onDragEnd?: (e: DragEndEvent) => void\n}\n\nexport function beginDragging(target: DragTarget, stringFormatter: LocalizedStringFormatter) {\n  if (dragSession) {\n    throw new Error('Cannot begin dragging while already dragging');\n  }\n\n  dragSession = new DragSession(target, stringFormatter);\n  requestAnimationFrame(() => {\n    dragSession.setup();\n    if (getDragModality() === 'keyboard') {\n      dragSession.next();\n    }\n  });\n\n  for (let cb of subscriptions) {\n    cb();\n  }\n}\n\nexport function useDragSession() {\n  let [session, setSession] = useState(dragSession);\n\n  useEffect(() => {\n    let cb = () => setSession(dragSession);\n    subscriptions.add(cb);\n    return () => {\n      subscriptions.delete(cb);\n    };\n  }, []);\n\n  return session;\n}\n\n/** @private */\nexport function isVirtualDragging(): boolean {\n  return !!dragSession;\n}\n\nfunction endDragging() {\n  dragSession = null;\n  for (let cb of subscriptions) {\n    cb();\n  }\n}\n\nexport function isValidDropTarget(element: Element): boolean {\n  for (let target of dropTargets.keys()) {\n    if (target.contains(element)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nconst CANCELED_EVENTS = [\n  'pointerdown',\n  'pointermove',\n  'pointerenter',\n  'pointerleave',\n  'pointerover',\n  'pointerout',\n  'pointerup',\n  'mousedown',\n  'mousemove',\n  'mouseenter',\n  'mouseleave',\n  'mouseover',\n  'mouseout',\n  'mouseup',\n  'touchstart',\n  'touchmove',\n  'touchend',\n  'focusin',\n  'focusout'\n];\n\nconst CLICK_EVENTS = [\n  'pointerup',\n  'mouseup',\n  'touchend'\n];\n\nconst MESSAGES = {\n  keyboard: 'dragStartedKeyboard',\n  touch: 'dragStartedTouch',\n  virtual: 'dragStartedVirtual'\n};\n\nclass DragSession {\n  dragTarget: DragTarget;\n  validDropTargets: DropTarget[];\n  currentDropTarget: DropTarget;\n  currentDropItem: DroppableItem;\n  dropOperation: DropOperation;\n  private mutationObserver: MutationObserver;\n  private restoreAriaHidden: () => void;\n  private stringFormatter: LocalizedStringFormatter;\n  private isVirtualClick: boolean;\n  private initialFocused: boolean;\n\n  constructor(target: DragTarget, stringFormatter: LocalizedStringFormatter) {\n    this.dragTarget = target;\n    this.stringFormatter = stringFormatter;\n\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onPointerDown = this.onPointerDown.bind(this);\n    this.cancelEvent = this.cancelEvent.bind(this);\n    this.initialFocused = false;\n  }\n\n  setup() {\n    document.addEventListener('keydown', this.onKeyDown, true);\n    document.addEventListener('keyup', this.onKeyUp, true);\n    window.addEventListener('focus', this.onFocus, true);\n    window.addEventListener('blur', this.onBlur, true);\n    document.addEventListener('click', this.onClick, true);\n    document.addEventListener('pointerdown', this.onPointerDown, true);\n\n    for (let event of CANCELED_EVENTS) {\n      document.addEventListener(event, this.cancelEvent, true);\n    }\n\n    this.mutationObserver = new MutationObserver(() =>\n      this.updateValidDropTargets()\n    );\n    this.updateValidDropTargets();\n\n    announce(this.stringFormatter.format(MESSAGES[getDragModality()]));\n  }\n\n  teardown() {\n    document.removeEventListener('keydown', this.onKeyDown, true);\n    document.removeEventListener('keyup', this.onKeyUp, true);\n    window.removeEventListener('focus', this.onFocus, true);\n    window.removeEventListener('blur', this.onBlur, true);\n    document.removeEventListener('click', this.onClick, true);\n    document.removeEventListener('pointerdown', this.onPointerDown, true);\n\n    for (let event of CANCELED_EVENTS) {\n      document.removeEventListener(event, this.cancelEvent, true);\n    }\n\n    this.mutationObserver.disconnect();\n    this.restoreAriaHidden();\n  }\n\n  onKeyDown(e: KeyboardEvent) {\n    this.cancelEvent(e);\n\n    if (e.key === 'Escape') {\n      this.cancel();\n      return;\n    }\n\n    if (e.key === 'Tab' && !(e.metaKey || e.altKey || e.ctrlKey)) {\n      if (e.shiftKey) {\n        this.previous();\n      } else {\n        this.next();\n      }\n    }\n\n    if (typeof this.currentDropTarget?.onKeyDown === 'function') {\n      this.currentDropTarget.onKeyDown(e, this.dragTarget);\n    }\n  }\n\n  onKeyUp(e: KeyboardEvent) {\n    this.cancelEvent(e);\n\n    if (e.key === 'Enter') {\n      if (e.altKey) {\n        this.activate();\n      } else {\n        this.drop();\n      }\n    }\n  }\n\n  onFocus(e: FocusEvent) {\n    // Prevent focus events, except to the original drag target.\n    if (e.target !== this.dragTarget.element) {\n      this.cancelEvent(e);\n    }\n\n    // Ignore focus events on the window/document (JSDOM). Will be handled in onBlur, below.\n    if (!(e.target instanceof HTMLElement) || e.target === this.dragTarget.element) {\n      return;\n    }\n\n    let dropTarget =\n      this.validDropTargets.find(target => target.element === e.target as HTMLElement) ||\n      this.validDropTargets.find(target => target.element.contains(e.target as HTMLElement));\n\n    if (!dropTarget) {\n      if (this.currentDropTarget) {\n        this.currentDropTarget.element.focus();\n      } else {\n        this.dragTarget.element.focus();\n      }\n      return;\n    }\n\n    let item = dropItems.get(e.target as HTMLElement);\n    this.setCurrentDropTarget(dropTarget, item);\n  }\n\n  onBlur(e: FocusEvent) {\n    if (e.target !== this.dragTarget.element) {\n      this.cancelEvent(e);\n    }\n\n    // If nothing is gaining focus, or e.relatedTarget is the window/document (JSDOM),\n    // restore focus back to the current drop target if any, or the original drag target.\n    if (!e.relatedTarget || !(e.relatedTarget instanceof HTMLElement)) {\n      if (this.currentDropTarget) {\n        this.currentDropTarget.element.focus();\n      } else {\n        this.dragTarget.element.focus();\n      }\n    }\n  }\n\n  onClick(e: MouseEvent) {\n    this.cancelEvent(e);\n    if (isVirtualClick(e) || this.isVirtualClick) {\n      if (e.target === this.dragTarget.element) {\n        this.cancel();\n        return;\n      }\n\n      let dropTarget = this.validDropTargets.find(target => target.element.contains(e.target as HTMLElement));\n      if (dropTarget) {\n        let item = dropItems.get(e.target as HTMLElement);\n        this.setCurrentDropTarget(dropTarget, item);\n        this.drop(item);\n      }\n    }\n  }\n\n  onPointerDown(e: PointerEvent) {\n    // Android Talkback double tap has e.detail = 1 for onClick. Detect the virtual click in onPointerDown before onClick fires\n    // so we can properly perform cancel and drop operations.\n    this.cancelEvent(e);\n    this.isVirtualClick = isVirtualPointerEvent(e);\n  }\n\n  cancelEvent(e: Event) {\n    // Allow focusin and focusout on the drag target so focus ring works properly.\n    if ((e.type === 'focusin' || e.type === 'focusout') && e.target === this.dragTarget?.element) {\n      return;\n    }\n\n    // Allow default for events that might cancel a click event\n    if (!CLICK_EVENTS.includes(e.type)) {\n      e.preventDefault();\n    }\n\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n  }\n\n  updateValidDropTargets() {\n    if (!this.mutationObserver) {\n      return;\n    }\n\n    this.mutationObserver.disconnect();\n    if (this.restoreAriaHidden) {\n      this.restoreAriaHidden();\n    }\n\n    this.validDropTargets = findValidDropTargets(this.dragTarget);\n\n    // Shuffle drop target order based on starting drag target.\n    if (this.validDropTargets.length > 0) {\n      let nearestIndex = this.findNearestDropTarget();\n      this.validDropTargets = [\n        ...this.validDropTargets.slice(nearestIndex),\n        ...this.validDropTargets.slice(0, nearestIndex)\n      ];\n    }\n\n    if (this.currentDropTarget && !this.validDropTargets.includes(this.currentDropTarget)) {\n      this.setCurrentDropTarget(this.validDropTargets[0]);\n    }\n\n    // Find valid drop items within collections\n    let types = getTypes(this.dragTarget.items);\n    let validDropItems = [...dropItems.values()].filter(item => {\n      if (typeof item.getDropOperation === 'function') {\n        return item.getDropOperation(types, this.dragTarget.allowedDropOperations) !== 'cancel';\n      }\n\n      return true;\n    });\n\n    // Filter out drop targets that contain valid items. We don't want to stop hiding elements\n    // other than the drop items that exist inside the collection.\n    let visibleDropTargets = this.validDropTargets.filter(target =>\n      !validDropItems.some(item => target.element.contains(item.element))\n    );\n\n    this.restoreAriaHidden = ariaHideOutside([\n      this.dragTarget.element,\n      ...validDropItems.map(item => item.element),\n      ...visibleDropTargets.map(target => target.element)\n    ]);\n\n    this.mutationObserver.observe(document.body, {subtree: true, attributes: true, attributeFilter: ['aria-hidden']});\n  }\n\n  next() {\n    if (!this.currentDropTarget) {\n      this.setCurrentDropTarget(this.validDropTargets[0]);\n      return;\n    }\n\n    let index = this.validDropTargets.indexOf(this.currentDropTarget);\n    if (index < 0) {\n      this.setCurrentDropTarget(this.validDropTargets[0]);\n      return;\n    }\n\n    // If we've reached the end of the valid drop targets, cycle back to the original drag target.\n    // This lets the user cancel the drag in case they don't have an Escape key (e.g. iPad keyboard case).\n    if (index === this.validDropTargets.length - 1) {\n      if (!this.dragTarget.element.closest('[aria-hidden=\"true\"]')) {\n        this.setCurrentDropTarget(null);\n        this.dragTarget.element.focus();\n      } else {\n        this.setCurrentDropTarget(this.validDropTargets[0]);\n      }\n    } else {\n      this.setCurrentDropTarget(this.validDropTargets[index + 1]);\n    }\n  }\n\n  previous() {\n    if (!this.currentDropTarget) {\n      this.setCurrentDropTarget(this.validDropTargets[this.validDropTargets.length - 1]);\n      return;\n    }\n\n    let index = this.validDropTargets.indexOf(this.currentDropTarget);\n    if (index < 0) {\n      this.setCurrentDropTarget(this.validDropTargets[this.validDropTargets.length - 1]);\n      return;\n    }\n\n    // If we've reached the start of the valid drop targets, cycle back to the original drag target.\n    // This lets the user cancel the drag in case they don't have an Escape key (e.g. iPad keyboard case).\n    if (index === 0) {\n      if (!this.dragTarget.element.closest('[aria-hidden=\"true\"]')) {\n        this.setCurrentDropTarget(null);\n        this.dragTarget.element.focus();\n      } else {\n        this.setCurrentDropTarget(this.validDropTargets[this.validDropTargets.length - 1]);\n      }\n    } else {\n      this.setCurrentDropTarget(this.validDropTargets[index - 1]);\n    }\n  }\n\n  findNearestDropTarget(): number {\n    let dragTargetRect = this.dragTarget.element.getBoundingClientRect();\n\n    let minDistance = Infinity;\n    let nearest = -1;\n    for (let i = 0; i < this.validDropTargets.length; i++) {\n      let dropTarget = this.validDropTargets[i];\n      let rect = dropTarget.element.getBoundingClientRect();\n      let dx = rect.left - dragTargetRect.left;\n      let dy = rect.top - dragTargetRect.top;\n      let dist = (dx * dx) + (dy * dy);\n      if (dist < minDistance) {\n        minDistance = dist;\n        nearest = i;\n      }\n    }\n\n    return nearest;\n  }\n\n  setCurrentDropTarget(dropTarget: DropTarget, item?: DroppableItem) {\n    if (dropTarget !== this.currentDropTarget) {\n      if (this.currentDropTarget && typeof this.currentDropTarget.onDropExit === 'function') {\n        let rect = this.currentDropTarget.element.getBoundingClientRect();\n        this.currentDropTarget.onDropExit({\n          type: 'dropexit',\n          x: rect.left + (rect.width / 2),\n          y: rect.top + (rect.height / 2)\n        });\n      }\n\n      this.currentDropTarget = dropTarget;\n\n      if (dropTarget) {\n        if (typeof dropTarget.onDropEnter === 'function') {\n          let rect = dropTarget.element.getBoundingClientRect();\n          dropTarget.onDropEnter({\n            type: 'dropenter',\n            x: rect.left + (rect.width / 2),\n            y: rect.top + (rect.height / 2)\n          }, this.dragTarget);\n        }\n\n        if (!item) {\n          dropTarget?.element.focus();\n        }\n      }\n    }\n\n    if (item !== this.currentDropItem) {\n      if (item && typeof this.currentDropTarget.onDropTargetEnter === 'function') {\n        this.currentDropTarget.onDropTargetEnter(item?.target);\n      }\n\n      item?.element.focus();\n      this.currentDropItem = item;\n\n      // Announce first drop target after drag start announcement finishes.\n      // Otherwise, it will never get announced because drag start announcement is assertive.\n      if (!this.initialFocused) {\n        let label = item?.element.getAttribute('aria-label');\n        if (label) {\n          announce(label, 'polite');\n        }\n        this.initialFocused = true;\n      }\n    }\n  }\n\n  end() {\n    this.teardown();\n    endDragging();\n\n    if (typeof this.dragTarget.onDragEnd === 'function') {\n      let target = this.currentDropTarget && this.dropOperation !== 'cancel' ? this.currentDropTarget : this.dragTarget;\n      let rect = target.element.getBoundingClientRect();\n      this.dragTarget.onDragEnd({\n        type: 'dragend',\n        x: rect.x + (rect.width / 2),\n        y: rect.y + (rect.height / 2),\n        dropOperation: this.dropOperation || 'cancel'\n      });\n    }\n\n    if (this.currentDropTarget && !this.currentDropTarget.preventFocusOnDrop) {\n      // Re-trigger focus event on active element, since it will not have received it during dragging (see cancelEvent).\n      // This corrects state such as whether focus ring should appear.\n      // useDroppableCollection handles this itself, so this is only for standalone drop zones.\n      document.activeElement.dispatchEvent(new FocusEvent('focusin', {bubbles: true}));\n    }\n\n    this.setCurrentDropTarget(null);\n  }\n\n  cancel() {\n    this.setCurrentDropTarget(null);\n    this.end();\n    if (!this.dragTarget.element.closest('[aria-hidden=\"true\"]')) {\n      this.dragTarget.element.focus();\n    }\n\n    announce(this.stringFormatter.format('dropCanceled'));\n  }\n\n  drop(item?: DroppableItem) {\n    if (!this.currentDropTarget) {\n      this.cancel();\n      return;\n    }\n\n    if (typeof item?.getDropOperation === 'function') {\n      let types = getTypes(this.dragTarget.items);\n      this.dropOperation = item.getDropOperation(types, this.dragTarget.allowedDropOperations);\n    } else if (typeof this.currentDropTarget.getDropOperation === 'function') {\n      let types = getTypes(this.dragTarget.items);\n      this.dropOperation = this.currentDropTarget.getDropOperation(types, this.dragTarget.allowedDropOperations);\n    } else {\n      // TODO: show menu ??\n      this.dropOperation = this.dragTarget.allowedDropOperations[0];\n    }\n\n    if (typeof this.currentDropTarget.onDrop === 'function') {\n      let items: DropItem[] = this.dragTarget.items.map(item => ({\n        kind: 'text',\n        types: new Set(Object.keys(item)),\n        getText: (type: string) => Promise.resolve(item[type])\n      }));\n\n      let rect = this.currentDropTarget.element.getBoundingClientRect();\n      this.currentDropTarget.onDrop({\n        type: 'drop',\n        x: rect.left + (rect.width / 2),\n        y: rect.top + (rect.height / 2),\n        items,\n        dropOperation: this.dropOperation\n      }, item?.target);\n    }\n\n    this.end();\n    announce(this.stringFormatter.format('dropComplete'));\n  }\n\n  activate() {\n    if (this.currentDropTarget && typeof this.currentDropTarget.onDropActivate === 'function') {\n      let rect = this.currentDropTarget.element.getBoundingClientRect();\n      this.currentDropTarget.onDropActivate({\n        type: 'dropactivate',\n        x: rect.left + (rect.width / 2),\n        y: rect.top + (rect.height / 2)\n      });\n    }\n  }\n}\n\nfunction findValidDropTargets(options: DragTarget) {\n  let types = getTypes(options.items);\n  return [...dropTargets.values()].filter(target => {\n    if (target.element.closest('[aria-hidden=\"true\"]')) {\n      return false;\n    }\n\n    if (typeof target.getDropOperation === 'function') {\n      return target.getDropOperation(types, options.allowedDropOperations) !== 'cancel';\n    }\n\n    return true;\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
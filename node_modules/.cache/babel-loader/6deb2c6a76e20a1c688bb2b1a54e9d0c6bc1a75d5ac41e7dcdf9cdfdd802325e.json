{"ast":null,"code":"'use strict';\n\n/**\n * RecommendParameters is the data structure that contains all the information\n * usable for getting recommendations from the Algolia API. It doesn't do the\n * search itself, nor does it contains logic about the parameters.\n * It is an immutable object, therefore it has been created in a way that each\n * changes does not change the object itself but returns a copy with the\n * modification.\n * This object should probably not be instantiated outside of the helper. It\n * will be provided when needed.\n * @constructor\n * @classdesc contains all the parameters for recommendations\n * @param {RecommendParametersOptions} opts the options to create the object\n */\nfunction RecommendParameters(opts) {\n  opts = opts || {};\n  this.params = opts.params || [];\n}\nRecommendParameters.prototype = {\n  constructor: RecommendParameters,\n  addParams: function (params) {\n    var newParams = this.params.slice();\n    newParams.push(params);\n    return new RecommendParameters({\n      params: newParams\n    });\n  },\n  removeParams: function (id) {\n    return new RecommendParameters({\n      params: this.params.filter(function (param) {\n        return param.$$id !== id;\n      })\n    });\n  },\n  addFrequentlyBoughtTogether: function (params) {\n    return this.addParams(Object.assign({}, params, {\n      model: 'bought-together'\n    }));\n  },\n  addRelatedProducts: function (params) {\n    return this.addParams(Object.assign({}, params, {\n      model: 'related-products'\n    }));\n  },\n  addTrendingItems: function (params) {\n    return this.addParams(Object.assign({}, params, {\n      model: 'trending-items'\n    }));\n  },\n  addTrendingFacets: function (params) {\n    return this.addParams(Object.assign({}, params, {\n      model: 'trending-facets'\n    }));\n  },\n  addLookingSimilar: function (params) {\n    return this.addParams(Object.assign({}, params, {\n      model: 'looking-similar'\n    }));\n  },\n  _buildQueries: function (indexName, cache) {\n    return this.params.filter(function (params) {\n      return cache[params.$$id] === undefined;\n    }).map(function (params) {\n      var query = Object.assign({}, params, {\n        indexName: indexName,\n        // @TODO: remove this if it ever gets handled by the API\n        threshold: params.threshold || 0\n      });\n      delete query.$$id;\n      return query;\n    });\n  }\n};\nmodule.exports = RecommendParameters;","map":{"version":3,"names":["RecommendParameters","opts","params","prototype","constructor","addParams","newParams","slice","push","removeParams","id","filter","param","$$id","addFrequentlyBoughtTogether","Object","assign","model","addRelatedProducts","addTrendingItems","addTrendingFacets","addLookingSimilar","_buildQueries","indexName","cache","undefined","map","query","threshold","module","exports"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/algoliasearch-helper/src/RecommendParameters/index.js"],"sourcesContent":["'use strict';\n\n/**\n * RecommendParameters is the data structure that contains all the information\n * usable for getting recommendations from the Algolia API. It doesn't do the\n * search itself, nor does it contains logic about the parameters.\n * It is an immutable object, therefore it has been created in a way that each\n * changes does not change the object itself but returns a copy with the\n * modification.\n * This object should probably not be instantiated outside of the helper. It\n * will be provided when needed.\n * @constructor\n * @classdesc contains all the parameters for recommendations\n * @param {RecommendParametersOptions} opts the options to create the object\n */\nfunction RecommendParameters(opts) {\n  opts = opts || {};\n  this.params = opts.params || [];\n}\n\nRecommendParameters.prototype = {\n  constructor: RecommendParameters,\n\n  addParams: function (params) {\n    var newParams = this.params.slice();\n\n    newParams.push(params);\n\n    return new RecommendParameters({ params: newParams });\n  },\n\n  removeParams: function (id) {\n    return new RecommendParameters({\n      params: this.params.filter(function (param) {\n        return param.$$id !== id;\n      }),\n    });\n  },\n\n  addFrequentlyBoughtTogether: function (params) {\n    return this.addParams(\n      Object.assign({}, params, { model: 'bought-together' })\n    );\n  },\n\n  addRelatedProducts: function (params) {\n    return this.addParams(\n      Object.assign({}, params, { model: 'related-products' })\n    );\n  },\n\n  addTrendingItems: function (params) {\n    return this.addParams(\n      Object.assign({}, params, { model: 'trending-items' })\n    );\n  },\n\n  addTrendingFacets: function (params) {\n    return this.addParams(\n      Object.assign({}, params, { model: 'trending-facets' })\n    );\n  },\n\n  addLookingSimilar: function (params) {\n    return this.addParams(\n      Object.assign({}, params, { model: 'looking-similar' })\n    );\n  },\n\n  _buildQueries: function (indexName, cache) {\n    return this.params\n      .filter(function (params) {\n        return cache[params.$$id] === undefined;\n      })\n      .map(function (params) {\n        var query = Object.assign({}, params, {\n          indexName: indexName,\n          // @TODO: remove this if it ever gets handled by the API\n          threshold: params.threshold || 0,\n        });\n        delete query.$$id;\n\n        return query;\n      });\n  },\n};\n\nmodule.exports = RecommendParameters;\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,mBAAmBA,CAACC,IAAI,EAAE;EACjCA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;EACjB,IAAI,CAACC,MAAM,GAAGD,IAAI,CAACC,MAAM,IAAI,EAAE;AACjC;AAEAF,mBAAmB,CAACG,SAAS,GAAG;EAC9BC,WAAW,EAAEJ,mBAAmB;EAEhCK,SAAS,EAAE,SAAAA,CAAUH,MAAM,EAAE;IAC3B,IAAII,SAAS,GAAG,IAAI,CAACJ,MAAM,CAACK,KAAK,CAAC,CAAC;IAEnCD,SAAS,CAACE,IAAI,CAACN,MAAM,CAAC;IAEtB,OAAO,IAAIF,mBAAmB,CAAC;MAAEE,MAAM,EAAEI;IAAU,CAAC,CAAC;EACvD,CAAC;EAEDG,YAAY,EAAE,SAAAA,CAAUC,EAAE,EAAE;IAC1B,OAAO,IAAIV,mBAAmB,CAAC;MAC7BE,MAAM,EAAE,IAAI,CAACA,MAAM,CAACS,MAAM,CAAC,UAAUC,KAAK,EAAE;QAC1C,OAAOA,KAAK,CAACC,IAAI,KAAKH,EAAE;MAC1B,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAEDI,2BAA2B,EAAE,SAAAA,CAAUZ,MAAM,EAAE;IAC7C,OAAO,IAAI,CAACG,SAAS,CACnBU,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEd,MAAM,EAAE;MAAEe,KAAK,EAAE;IAAkB,CAAC,CACxD,CAAC;EACH,CAAC;EAEDC,kBAAkB,EAAE,SAAAA,CAAUhB,MAAM,EAAE;IACpC,OAAO,IAAI,CAACG,SAAS,CACnBU,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEd,MAAM,EAAE;MAAEe,KAAK,EAAE;IAAmB,CAAC,CACzD,CAAC;EACH,CAAC;EAEDE,gBAAgB,EAAE,SAAAA,CAAUjB,MAAM,EAAE;IAClC,OAAO,IAAI,CAACG,SAAS,CACnBU,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEd,MAAM,EAAE;MAAEe,KAAK,EAAE;IAAiB,CAAC,CACvD,CAAC;EACH,CAAC;EAEDG,iBAAiB,EAAE,SAAAA,CAAUlB,MAAM,EAAE;IACnC,OAAO,IAAI,CAACG,SAAS,CACnBU,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEd,MAAM,EAAE;MAAEe,KAAK,EAAE;IAAkB,CAAC,CACxD,CAAC;EACH,CAAC;EAEDI,iBAAiB,EAAE,SAAAA,CAAUnB,MAAM,EAAE;IACnC,OAAO,IAAI,CAACG,SAAS,CACnBU,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEd,MAAM,EAAE;MAAEe,KAAK,EAAE;IAAkB,CAAC,CACxD,CAAC;EACH,CAAC;EAEDK,aAAa,EAAE,SAAAA,CAAUC,SAAS,EAAEC,KAAK,EAAE;IACzC,OAAO,IAAI,CAACtB,MAAM,CACfS,MAAM,CAAC,UAAUT,MAAM,EAAE;MACxB,OAAOsB,KAAK,CAACtB,MAAM,CAACW,IAAI,CAAC,KAAKY,SAAS;IACzC,CAAC,CAAC,CACDC,GAAG,CAAC,UAAUxB,MAAM,EAAE;MACrB,IAAIyB,KAAK,GAAGZ,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEd,MAAM,EAAE;QACpCqB,SAAS,EAAEA,SAAS;QACpB;QACAK,SAAS,EAAE1B,MAAM,CAAC0B,SAAS,IAAI;MACjC,CAAC,CAAC;MACF,OAAOD,KAAK,CAACd,IAAI;MAEjB,OAAOc,KAAK;IACd,CAAC,CAAC;EACN;AACF,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAG9B,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
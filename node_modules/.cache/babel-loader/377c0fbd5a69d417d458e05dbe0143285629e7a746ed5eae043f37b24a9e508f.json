{"ast":null,"code":"import { useRef as $39jWF$useRef, useImperativeHandle as $39jWF$useImperativeHandle, useMemo as $39jWF$useMemo } from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nfunction $98e5a8ae0e6415af$export$a5795cc979dfae80(ref) {\n  return {\n    UNSAFE_getDOMNode() {\n      return ref.current;\n    }\n  };\n}\nfunction $98e5a8ae0e6415af$export$79d69eee6ae4b329(domRef, focusableRef = domRef) {\n  return {\n    ...$98e5a8ae0e6415af$export$a5795cc979dfae80(domRef),\n    focus() {\n      if (focusableRef.current) focusableRef.current.focus();\n    }\n  };\n}\nfunction $98e5a8ae0e6415af$export$c2c55ef9111cafd8(ref) {\n  let domRef = (0, $39jWF$useRef)(null);\n  (0, $39jWF$useImperativeHandle)(ref, () => $98e5a8ae0e6415af$export$a5795cc979dfae80(domRef));\n  return domRef;\n}\nfunction $98e5a8ae0e6415af$export$96a734597687c040(ref, focusableRef) {\n  let domRef = (0, $39jWF$useRef)(null);\n  (0, $39jWF$useImperativeHandle)(ref, () => $98e5a8ae0e6415af$export$79d69eee6ae4b329(domRef, focusableRef));\n  return domRef;\n}\nfunction $98e5a8ae0e6415af$export$c7e28c72a4823176(ref) {\n  return {\n    get current() {\n      return ref.current && ref.current.UNSAFE_getDOMNode();\n    }\n  };\n}\nfunction $98e5a8ae0e6415af$export$1d5cc31d9d8df817(ref) {\n  return (0, $39jWF$useMemo)(() => $98e5a8ae0e6415af$export$c7e28c72a4823176(ref), [ref]);\n}\nexport { $98e5a8ae0e6415af$export$a5795cc979dfae80 as createDOMRef, $98e5a8ae0e6415af$export$79d69eee6ae4b329 as createFocusableRef, $98e5a8ae0e6415af$export$c2c55ef9111cafd8 as useDOMRef, $98e5a8ae0e6415af$export$96a734597687c040 as useFocusableRef, $98e5a8ae0e6415af$export$c7e28c72a4823176 as unwrapDOMRef, $98e5a8ae0e6415af$export$1d5cc31d9d8df817 as useUnwrapDOMRef };","map":{"version":3,"names":["$98e5a8ae0e6415af$export$a5795cc979dfae80","ref","UNSAFE_getDOMNode","current","$98e5a8ae0e6415af$export$79d69eee6ae4b329","domRef","focusableRef","focus","$98e5a8ae0e6415af$export$c2c55ef9111cafd8","$39jWF$useRef","$39jWF$useImperativeHandle","$98e5a8ae0e6415af$export$96a734597687c040","$98e5a8ae0e6415af$export$c7e28c72a4823176","$98e5a8ae0e6415af$export$1d5cc31d9d8df817","$39jWF$useMemo"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-spectrum/utils/dist/packages/@react-spectrum/utils/src/useDOMRef.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMRef, DOMRefValue, FocusableElement, FocusableRef, FocusableRefValue, RefObject} from '@react-types/shared';\nimport {useImperativeHandle, useMemo, useRef} from 'react';\n\nexport function createDOMRef<T extends HTMLElement = HTMLElement>(ref: RefObject<T | null>): DOMRefValue<T> {\n  return {\n    UNSAFE_getDOMNode() {\n      return ref.current;\n    }\n  };\n}\n\nexport function createFocusableRef<T extends HTMLElement = HTMLElement>(domRef: RefObject<T | null>, focusableRef: RefObject<FocusableElement | null> = domRef): FocusableRefValue<T> {\n  return {\n    ...createDOMRef(domRef),\n    focus() {\n      if (focusableRef.current) {\n        focusableRef.current.focus();\n      }\n    }\n  };\n}\n\nexport function useDOMRef<T extends HTMLElement = HTMLElement>(ref: DOMRef<T>): RefObject<T | null> {\n  let domRef = useRef<T>(null);\n  useImperativeHandle(ref, () => createDOMRef(domRef));\n  return domRef;\n}\n\nexport function useFocusableRef<T extends HTMLElement = HTMLElement>(ref: FocusableRef<T>, focusableRef?: RefObject<FocusableElement | null>): RefObject<T | null> {\n  let domRef = useRef<T>(null);\n  useImperativeHandle(ref, () => createFocusableRef(domRef, focusableRef));\n  return domRef;\n}\n\nexport function unwrapDOMRef<T extends HTMLElement>(ref: RefObject<DOMRefValue<T> | null>): RefObject<T | null> {\n  return {\n    get current() {\n      return ref.current && ref.current.UNSAFE_getDOMNode();\n    }\n  };\n}\n\nexport function useUnwrapDOMRef<T extends HTMLElement>(ref: RefObject<DOMRefValue<T> | null>) : RefObject<T | null> {\n  return useMemo(() => unwrapDOMRef(ref), [ref]);\n}\n"],"mappings":";;AAAA;;;;;;;;;;;AAeO,SAASA,0CAAkDC,GAAwB;EACxF,OAAO;IACLC,kBAAA;MACE,OAAOD,GAAA,CAAIE,OAAO;IACpB;EACF;AACF;AAEO,SAASC,0CAAwDC,MAA2B,EAAEC,YAAA,GAAmDD,MAAM;EAC5J,OAAO;IACL,GAAGL,yCAAA,CAAaK,MAAA,CAAO;IACvBE,MAAA;MACE,IAAID,YAAA,CAAaH,OAAO,EACtBG,YAAA,CAAaH,OAAO,CAACI,KAAK;IAE9B;EACF;AACF;AAEO,SAASC,0CAA+CP,GAAc;EAC3E,IAAII,MAAA,GAAS,IAAAI,aAAK,EAAK;EACvB,IAAAC,0BAAkB,EAAET,GAAA,EAAK,MAAMD,yCAAA,CAAaK,MAAA;EAC5C,OAAOA,MAAA;AACT;AAEO,SAASM,0CAAqDV,GAAoB,EAAEK,YAAiD;EAC1I,IAAID,MAAA,GAAS,IAAAI,aAAK,EAAK;EACvB,IAAAC,0BAAkB,EAAET,GAAA,EAAK,MAAMG,yCAAA,CAAmBC,MAAA,EAAQC,YAAA;EAC1D,OAAOD,MAAA;AACT;AAEO,SAASO,0CAAoCX,GAAqC;EACvF,OAAO;IACL,IAAIE,QAAA,EAAU;MACZ,OAAOF,GAAA,CAAIE,OAAO,IAAIF,GAAA,CAAIE,OAAO,CAACD,iBAAiB;IACrD;EACF;AACF;AAEO,SAASW,0CAAuCZ,GAAqC;EAC1F,OAAO,IAAAa,cAAM,EAAE,MAAMF,yCAAA,CAAaX,GAAA,GAAM,CAACA,GAAA,CAAI;AAC/C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import $fl6Ye$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport \"./vars.c3c1eaaa.css\";\nimport $fl6Ye$dropzone_vars_cssmodulejs from \"./dropzone_vars_css.mjs\";\nimport { useStyleProps as $fl6Ye$useStyleProps, useDOMRef as $fl6Ye$useDOMRef, classNames as $fl6Ye$classNames, SlotProvider as $fl6Ye$SlotProvider } from \"@react-spectrum/utils\";\nimport { Provider as $fl6Ye$Provider, HeadingContext as $fl6Ye$HeadingContext, DropZone as $fl6Ye$DropZone } from \"react-aria-components\";\nimport { useId as $fl6Ye$useId, mergeProps as $fl6Ye$mergeProps } from \"@react-aria/utils\";\nimport $fl6Ye$react from \"react\";\nimport { useLocalizedStringFormatter as $fl6Ye$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Filter out props used by RAC DropZone that we don't want in RSP DropZone for now.\nlet $37da9a3796695f28$var$filterProps = props => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let {\n    onHoverStart: onHoverStart,\n    onHoverChange: onHoverChange,\n    onHoverEnd: onHoverEnd,\n    ...otherProps\n  } = props;\n  return otherProps;\n};\nfunction $37da9a3796695f28$var$DropZone(props, ref) {\n  let {\n    children: children,\n    isFilled: isFilled,\n    replaceMessage: replaceMessage,\n    ...otherProps\n  } = props;\n  let {\n    styleProps: styleProps\n  } = (0, $fl6Ye$useStyleProps)(props);\n  let domRef = (0, $fl6Ye$useDOMRef)(ref);\n  let messageId = (0, $fl6Ye$useId)();\n  let headingId = (0, $fl6Ye$useId)();\n  let stringFormatter = (0, $fl6Ye$useLocalizedStringFormatter)((0, $parcel$interopDefault($fl6Ye$intlStringsmodulejs)), '@react-spectrum/dropzone');\n  let ariaLabelledby = isFilled ? `${headingId} ${messageId}` : headingId;\n  return /*#__PURE__*/(0, $fl6Ye$react).createElement((0, $fl6Ye$Provider), {\n    values: [[(0, $fl6Ye$HeadingContext), {\n      id: headingId\n    }]]\n  }, /*#__PURE__*/(0, $fl6Ye$react).createElement((0, $fl6Ye$DropZone), {\n    ...(0, $fl6Ye$mergeProps)($37da9a3796695f28$var$filterProps(otherProps)),\n    ...styleProps,\n    \"aria-labelledby\": ariaLabelledby,\n    className: (0, $fl6Ye$classNames)((0, $parcel$interopDefault($fl6Ye$dropzone_vars_cssmodulejs)), 'spectrum-Dropzone', styleProps.className, {\n      'spectrum-Dropzone--filled': isFilled\n    }),\n    ref: domRef\n  }, /*#__PURE__*/(0, $fl6Ye$react).createElement((0, $fl6Ye$SlotProvider), {\n    slots: {\n      illustration: {\n        UNSAFE_className: (0, $fl6Ye$classNames)((0, $parcel$interopDefault($fl6Ye$dropzone_vars_cssmodulejs)), 'spectrum-Dropzone-illustratedMessage')\n      }\n    }\n  }, children), /*#__PURE__*/(0, $fl6Ye$react).createElement(\"div\", {\n    className: (0, $fl6Ye$classNames)((0, $parcel$interopDefault($fl6Ye$dropzone_vars_cssmodulejs)), 'spectrum-Dropzone-backdrop')\n  }), /*#__PURE__*/(0, $fl6Ye$react).createElement(\"div\", {\n    id: messageId,\n    className: (0, $fl6Ye$classNames)((0, $parcel$interopDefault($fl6Ye$dropzone_vars_cssmodulejs)), 'spectrum-Dropzone-banner', styleProps.className)\n  }, replaceMessage ? replaceMessage : stringFormatter.format('replaceMessage'))));\n}\n/**\n * A drop zone is an area into which one or multiple objects can be dragged and dropped.\n */\nlet $37da9a3796695f28$export$3c6489d84dc98b6 = /*#__PURE__*/(0, $fl6Ye$react).forwardRef($37da9a3796695f28$var$DropZone);\nexport { $37da9a3796695f28$export$3c6489d84dc98b6 as DropZone };","map":{"version":3,"names":["$37da9a3796695f28$var$filterProps","props","onHoverStart","onHoverChange","onHoverEnd","otherProps","$37da9a3796695f28$var$DropZone","ref","children","isFilled","replaceMessage","styleProps","$fl6Ye$useStyleProps","domRef","$fl6Ye$useDOMRef","messageId","$fl6Ye$useId","headingId","stringFormatter","$fl6Ye$useLocalizedStringFormatter","$parcel$interopDefault","$fl6Ye$intlStringsmodulejs","ariaLabelledby","$fl6Ye$react","createElement","$fl6Ye$Provider","values","$fl6Ye$HeadingContext","id","$fl6Ye$DropZone","$fl6Ye$mergeProps","className","$fl6Ye$classNames","$fl6Ye$dropzone_vars_cssmodulejs","$fl6Ye$SlotProvider","slots","illustration","UNSAFE_className","format","$37da9a3796695f28$export$3c6489d84dc98b6","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-spectrum/dropzone/dist/packages/@react-spectrum/dropzone/src/DropZone.tsx"],"sourcesContent":["/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMProps, DOMRef, StyleProps} from '@react-types/shared';\nimport {classNames, SlotProvider, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DropZoneProps, HeadingContext, Provider, DropZone as RACDropZone} from 'react-aria-components';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {mergeProps, useId} from '@react-aria/utils';\nimport React, {ReactNode} from 'react';\nimport styles from '@adobe/spectrum-css-temp/components/dropzone/vars.css';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface SpectrumDropZoneProps extends Omit<DropZoneProps, 'onHoverStart' | 'onHoverChange' | 'onHoverEnd' | 'isDisabled' | 'className' | 'style'>, DOMProps, StyleProps, AriaLabelingProps {\n  /** The content to display in the drop zone. */\n  children: ReactNode,\n  /** Whether the drop zone has been filled. */\n  isFilled?: boolean,\n  /** The message to replace the default banner message that is shown when the drop zone is filled. */\n  replaceMessage?: string\n}\n\n// Filter out props used by RAC DropZone that we don't want in RSP DropZone for now.\nlet filterProps = (props) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let {onHoverStart, onHoverChange, onHoverEnd, ...otherProps} = props;\n  return otherProps;\n};\n\nfunction DropZone(props: SpectrumDropZoneProps, ref: DOMRef<HTMLDivElement>) {\n  let {children, isFilled, replaceMessage, ...otherProps} = props;\n  let {styleProps} = useStyleProps(props);\n  let domRef = useDOMRef(ref);\n  let messageId = useId();\n  let headingId = useId();\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-spectrum/dropzone');\n  let ariaLabelledby = isFilled ? `${headingId} ${messageId}` : headingId;\n\n  return (\n    <Provider\n      values={[\n        [HeadingContext, {id: headingId}]\n      ]}>\n      <RACDropZone\n        {...mergeProps(filterProps(otherProps))}\n        {...styleProps as Omit<React.HTMLAttributes<HTMLElement>, 'onDrop'>}\n        aria-labelledby={ariaLabelledby}\n        className={\n        classNames(\n          styles,\n          'spectrum-Dropzone',\n          styleProps.className,\n          {'spectrum-Dropzone--filled': isFilled}\n        )}\n        ref={domRef}>\n        <SlotProvider\n          slots={{\n            illustration: {UNSAFE_className: classNames(\n              styles,\n              'spectrum-Dropzone-illustratedMessage'\n              )}\n          }}>\n          {children}\n        </SlotProvider>\n        <div className={classNames(styles, 'spectrum-Dropzone-backdrop')} />\n        <div\n          id={messageId}\n          className={\n            classNames(\n              styles,\n              'spectrum-Dropzone-banner',\n              styleProps.className\n            )\n          }>\n          {replaceMessage ? replaceMessage : stringFormatter.format('replaceMessage')}\n        </div>\n      </RACDropZone>\n    </Provider>\n  );\n}\n\n/**\n * A drop zone is an area into which one or multiple objects can be dragged and dropped.\n */\nlet _DropZone = React.forwardRef(DropZone);\nexport {_DropZone as DropZone};\n"],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;AA+BA;AACA,IAAIA,iCAAA,GAAeC,KAAA;EACjB;EACA,IAAI;IAAAC,YAAA,EAACA,YAAY;IAAAC,aAAA,EAAEA,aAAa;IAAAC,UAAA,EAAEA,UAAU;IAAE,GAAGC;EAAA,CAAW,GAAGJ,KAAA;EAC/D,OAAOI,UAAA;AACT;AAEA,SAASC,+BAASL,KAA4B,EAAEM,GAA2B;EACzE,IAAI;IAAAC,QAAA,EAACA,QAAQ;IAAAC,QAAA,EAAEA,QAAQ;IAAAC,cAAA,EAAEA,cAAc;IAAE,GAAGL;EAAA,CAAW,GAAGJ,KAAA;EAC1D,IAAI;IAAAU,UAAA,EAACA;EAAU,CAAC,GAAG,IAAAC,oBAAY,EAAEX,KAAA;EACjC,IAAIY,MAAA,GAAS,IAAAC,gBAAQ,EAAEP,GAAA;EACvB,IAAIQ,SAAA,GAAY,IAAAC,YAAI;EACpB,IAAIC,SAAA,GAAY,IAAAD,YAAI;EACpB,IAAIE,eAAA,GAAkB,IAAAC,kCAA0B,GAAE,GAAAC,sBAAA,CAAAC,0BAAA,CAAW,GAAG;EAChE,IAAIC,cAAA,GAAiBb,QAAA,GAAW,GAAGQ,SAAA,IAAaF,SAAA,EAAW,GAAGE,SAAA;EAE9D,oBACE,IAAAM,YAAA,EAAAC,aAAA,EAAC,GAAAC,eAAO;IACNC,MAAA,EAAQ,CACN,EAAC,GAAAC,qBAAa,GAAG;MAACC,EAAA,EAAIX;IAAS,EAAE;kBAEnC,IAAAM,YAAA,EAAAC,aAAA,EAAC,GAAAK,eAAU;IACR,GAAG,IAAAC,iBAAS,EAAE9B,iCAAA,CAAYK,UAAA,EAAY;IACtC,GAAGM,UAAU;IACd,mBAAiBW,cAAA;IACjBS,SAAA,EACA,IAAAC,iBAAS,GACP,GAAAZ,sBAAA,CAAAa,gCAAA,CAAK,GACL,qBACAtB,UAAA,CAAWoB,SAAS,EACpB;MAAC,6BAA6BtB;IAAQ;IAExCF,GAAA,EAAKM;kBACL,IAAAU,YAAA,EAAAC,aAAA,EAAC,GAAAU,mBAAW;IACVC,KAAA,EAAO;MACLC,YAAA,EAAc;QAACC,gBAAA,EAAkB,IAAAL,iBAAS,GACxC,GAAAZ,sBAAA,CAAAa,gCAAA,CAAK,GACL;MACC;IACL;KACCzB,QAAA,gBAEH,IAAAe,YAAA,EAAAC,aAAA,CAAC;IAAIO,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAZ,sBAAA,CAAAa,gCAAA,CAAK,GAAG;mBACnC,IAAAV,YAAA,EAAAC,aAAA,CAAC;IACCI,EAAA,EAAIb,SAAA;IACJgB,SAAA,EACE,IAAAC,iBAAS,GACP,GAAAZ,sBAAA,CAAAa,gCAAA,CAAK,GACL,4BACAtB,UAAA,CAAWoB,SAAS;KAGvBrB,cAAA,GAAiBA,cAAA,GAAiBQ,eAAA,CAAgBoB,MAAM,CAAC;AAKpE;AAEA;;;AAGA,IAAIC,wCAAA,gBAAY,IAAAhB,YAAI,EAAEiB,UAAU,CAAClC,8BAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
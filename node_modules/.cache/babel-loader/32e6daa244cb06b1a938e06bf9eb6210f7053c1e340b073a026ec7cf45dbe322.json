{"ast":null,"code":"import { ListViewContext as $f85fb77f9d4cbc6c$export$870039b0abfe3de0 } from \"./ListView.mjs\";\nimport $jzbuT$react, { useContext as $jzbuT$useContext, useRef as $jzbuT$useRef } from \"react\";\nimport { useVisuallyHidden as $jzbuT$useVisuallyHidden } from \"@react-aria/visually-hidden\";\nfunction $41a60729487a82d7$export$2e2bcd8739ae039() {\n  let {\n    dropState: dropState,\n    dragAndDropHooks: dragAndDropHooks\n  } = (0, $jzbuT$useContext)((0, $f85fb77f9d4cbc6c$export$870039b0abfe3de0));\n  let ref = (0, $jzbuT$useRef)(undefined);\n  let {\n    dropIndicatorProps: dropIndicatorProps\n  } = dragAndDropHooks.useDropIndicator({\n    target: {\n      type: 'root'\n    }\n  }, dropState, ref);\n  let isDropTarget = dropState.isDropTarget({\n    type: 'root'\n  });\n  let {\n    visuallyHiddenProps: visuallyHiddenProps\n  } = (0, $jzbuT$useVisuallyHidden)();\n  if (!isDropTarget && dropIndicatorProps['aria-hidden']) return null;\n  return /*#__PURE__*/(0, $jzbuT$react).createElement(\"div\", {\n    role: \"row\",\n    \"aria-hidden\": dropIndicatorProps['aria-hidden']\n  }, /*#__PURE__*/(0, $jzbuT$react).createElement(\"div\", {\n    role: \"gridcell\",\n    \"aria-selected\": \"false\"\n  }, /*#__PURE__*/(0, $jzbuT$react).createElement(\"div\", {\n    role: \"button\",\n    ...visuallyHiddenProps,\n    ...dropIndicatorProps,\n    ref: ref\n  })));\n}\nexport { $41a60729487a82d7$export$2e2bcd8739ae039 as default };","map":{"version":3,"names":["$41a60729487a82d7$export$2e2bcd8739ae039","dropState","dragAndDropHooks","$jzbuT$useContext","$f85fb77f9d4cbc6c$export$870039b0abfe3de0","ref","$jzbuT$useRef","undefined","dropIndicatorProps","useDropIndicator","target","type","isDropTarget","visuallyHiddenProps","$jzbuT$useVisuallyHidden","$jzbuT$react","createElement","role"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-spectrum/list/dist/packages/@react-spectrum/list/src/RootDropIndicator.tsx"],"sourcesContent":["import {ListViewContext} from './ListView';\nimport React, {useContext, useRef} from 'react';\nimport {useVisuallyHidden} from '@react-aria/visually-hidden';\n\nexport default function RootDropIndicator() {\n  let {dropState, dragAndDropHooks} = useContext(ListViewContext);\n  let ref = useRef(undefined);\n  let {dropIndicatorProps} = dragAndDropHooks.useDropIndicator({\n    target: {type: 'root'}\n  }, dropState, ref);\n  let isDropTarget = dropState.isDropTarget({type: 'root'});\n  let {visuallyHiddenProps} = useVisuallyHidden();\n\n  if (!isDropTarget && dropIndicatorProps['aria-hidden']) {\n    return null;\n  }\n\n  return (\n    <div role=\"row\" aria-hidden={dropIndicatorProps['aria-hidden']}>\n      <div\n        role=\"gridcell\"\n        aria-selected=\"false\">\n        <div role=\"button\" {...visuallyHiddenProps} {...dropIndicatorProps} ref={ref} />\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;;AAIe,SAAAA,yCAAA;EACb,IAAI;IAAAC,SAAA,EAACA,SAAS;IAAAC,gBAAA,EAAEA;EAAgB,CAAC,GAAG,IAAAC,iBAAS,GAAE,GAAAC,yCAAc;EAC7D,IAAIC,GAAA,GAAM,IAAAC,aAAK,EAAEC,SAAA;EACjB,IAAI;IAAAC,kBAAA,EAACA;EAAkB,CAAC,GAAGN,gBAAA,CAAiBO,gBAAgB,CAAC;IAC3DC,MAAA,EAAQ;MAACC,IAAA,EAAM;IAAM;EACvB,GAAGV,SAAA,EAAWI,GAAA;EACd,IAAIO,YAAA,GAAeX,SAAA,CAAUW,YAAY,CAAC;IAACD,IAAA,EAAM;EAAM;EACvD,IAAI;IAAAE,mBAAA,EAACA;EAAmB,CAAC,GAAG,IAAAC,wBAAgB;EAE5C,IAAI,CAACF,YAAA,IAAgBJ,kBAAkB,CAAC,cAAc,EACpD,OAAO;EAGT,oBACE,IAAAO,YAAA,EAAAC,aAAA,CAAC;IAAIC,IAAA,EAAK;IAAM,eAAaT,kBAAkB,CAAC;kBAC9C,IAAAO,YAAA,EAAAC,aAAA,CAAC;IACCC,IAAA,EAAK;IACL,iBAAc;kBACd,IAAAF,YAAA,EAAAC,aAAA,CAAC;IAAIC,IAAA,EAAK;IAAU,GAAGJ,mBAAmB;IAAG,GAAGL,kBAAkB;IAAEH,GAAA,EAAKA;;AAIjF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
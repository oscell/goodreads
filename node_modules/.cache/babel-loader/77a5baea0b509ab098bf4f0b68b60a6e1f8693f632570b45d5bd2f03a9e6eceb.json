{"ast":null,"code":"import { useContextProps as $64fa3d84918910a7$export$29f1550f4b0d4415, useRenderProps as $64fa3d84918910a7$export$4d86445c2cf5e3 } from \"./utils.mjs\";\nimport { useHover as $9Usiy$useHover, useFocusRing as $9Usiy$useFocusRing, mergeProps as $9Usiy$mergeProps } from \"react-aria\";\nimport $9Usiy$react, { createContext as $9Usiy$createContext, forwardRef as $9Usiy$forwardRef } from \"react\";\nconst $216918bed6669f72$export$2dc6166a7e65358c = /*#__PURE__*/(0, $9Usiy$createContext)({});\nlet $216918bed6669f72$var$filterHoverProps = props => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let {\n    onHoverStart: onHoverStart,\n    onHoverChange: onHoverChange,\n    onHoverEnd: onHoverEnd,\n    ...otherProps\n  } = props;\n  return otherProps;\n};\nfunction $216918bed6669f72$var$TextArea(props, ref) {\n  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $216918bed6669f72$export$2dc6166a7e65358c);\n  let {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  } = (0, $9Usiy$useHover)(props);\n  let {\n    isFocused: isFocused,\n    isFocusVisible: isFocusVisible,\n    focusProps: focusProps\n  } = (0, $9Usiy$useFocusRing)({\n    isTextInput: true,\n    autoFocus: props.autoFocus\n  });\n  let isInvalid = !!props['aria-invalid'] && props['aria-invalid'] !== 'false';\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({\n    ...props,\n    values: {\n      isHovered: isHovered,\n      isFocused: isFocused,\n      isFocusVisible: isFocusVisible,\n      isDisabled: props.disabled || false,\n      isInvalid: isInvalid\n    },\n    defaultClassName: 'react-aria-TextArea'\n  });\n  return /*#__PURE__*/(0, $9Usiy$react).createElement(\"textarea\", {\n    ...(0, $9Usiy$mergeProps)($216918bed6669f72$var$filterHoverProps(props), focusProps, hoverProps),\n    ...renderProps,\n    ref: ref,\n    \"data-focused\": isFocused || undefined,\n    \"data-disabled\": props.disabled || undefined,\n    \"data-hovered\": isHovered || undefined,\n    \"data-focus-visible\": isFocusVisible || undefined,\n    \"data-invalid\": isInvalid || undefined\n  });\n}\n/**\n * A textarea allows a user to input mult-line text.\n */\nconst $216918bed6669f72$export$f5c9f3c2c4054eec = /*#__PURE__*/(0, $9Usiy$forwardRef)($216918bed6669f72$var$TextArea);\nexport { $216918bed6669f72$export$2dc6166a7e65358c as TextAreaContext, $216918bed6669f72$export$f5c9f3c2c4054eec as TextArea };","map":{"version":3,"names":["$216918bed6669f72$export$2dc6166a7e65358c","$9Usiy$createContext","$216918bed6669f72$var$filterHoverProps","props","onHoverStart","onHoverChange","onHoverEnd","otherProps","$216918bed6669f72$var$TextArea","ref","$64fa3d84918910a7$export$29f1550f4b0d4415","hoverProps","isHovered","$9Usiy$useHover","isFocused","isFocusVisible","focusProps","$9Usiy$useFocusRing","isTextInput","autoFocus","isInvalid","renderProps","$64fa3d84918910a7$export$4d86445c2cf5e3","values","isDisabled","disabled","defaultClassName","$9Usiy$react","createElement","$9Usiy$mergeProps","undefined","$216918bed6669f72$export$f5c9f3c2c4054eec","$9Usiy$forwardRef"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/react-aria-components/dist/packages/react-aria-components/src/TextArea.tsx"],"sourcesContent":["import {ContextValue, StyleRenderProps, useContextProps, useRenderProps} from './utils';\nimport {HoverEvents, mergeProps, useFocusRing, useHover} from 'react-aria';\nimport {InputRenderProps} from './Input';\nimport React, {createContext, ForwardedRef, forwardRef, TextareaHTMLAttributes} from 'react';\n\nexport interface TextAreaProps extends Omit<TextareaHTMLAttributes<HTMLTextAreaElement>, 'className' | 'style'>, HoverEvents, StyleRenderProps<InputRenderProps> {}\n\nexport const TextAreaContext = createContext<ContextValue<TextAreaProps, HTMLTextAreaElement>>({});\n\nlet filterHoverProps = (props: TextAreaProps) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let {onHoverStart, onHoverChange, onHoverEnd, ...otherProps} = props;\n  return otherProps;\n};\n\nfunction TextArea(props: TextAreaProps, ref: ForwardedRef<HTMLTextAreaElement>) {\n  [props, ref] = useContextProps(props, ref, TextAreaContext);\n\n  let {hoverProps, isHovered} = useHover(props);\n  let {isFocused, isFocusVisible, focusProps} = useFocusRing({\n    isTextInput: true,\n    autoFocus: props.autoFocus\n  });\n\n  let isInvalid = !!props['aria-invalid'] && props['aria-invalid'] !== 'false';\n  let renderProps = useRenderProps({\n    ...props,\n    values: {\n      isHovered,\n      isFocused,\n      isFocusVisible,\n      isDisabled: props.disabled || false,\n      isInvalid\n    },\n    defaultClassName: 'react-aria-TextArea'\n  });\n\n  return (\n    <textarea\n      {...mergeProps(filterHoverProps(props), focusProps, hoverProps)}\n      {...renderProps}\n      ref={ref}\n      data-focused={isFocused || undefined}\n      data-disabled={props.disabled || undefined}\n      data-hovered={isHovered || undefined}\n      data-focus-visible={isFocusVisible || undefined}\n      data-invalid={isInvalid || undefined} />\n  );\n}\n/**\n * A textarea allows a user to input mult-line text.\n */\nconst _TextArea = forwardRef(TextArea);\nexport {_TextArea as TextArea};\n"],"mappings":";;;AAOO,MAAMA,yCAAA,gBAAkB,IAAAC,oBAAY,EAAoD,CAAC;AAEhG,IAAIC,sCAAA,GAAoBC,KAAA;EACtB;EACA,IAAI;IAAAC,YAAA,EAACA,YAAY;IAAAC,aAAA,EAAEA,aAAa;IAAAC,UAAA,EAAEA,UAAU;IAAE,GAAGC;EAAA,CAAW,GAAGJ,KAAA;EAC/D,OAAOI,UAAA;AACT;AAEA,SAASC,+BAASL,KAAoB,EAAEM,GAAsC;EAC5E,CAACN,KAAA,EAAOM,GAAA,CAAI,GAAG,IAAAC,yCAAc,EAAEP,KAAA,EAAOM,GAAA,EAAKT,yCAAA;EAE3C,IAAI;IAAAW,UAAA,EAACA,UAAU;IAAAC,SAAA,EAAEA;EAAS,CAAC,GAAG,IAAAC,eAAO,EAAEV,KAAA;EACvC,IAAI;IAAAW,SAAA,EAACA,SAAS;IAAAC,cAAA,EAAEA,cAAc;IAAAC,UAAA,EAAEA;EAAU,CAAC,GAAG,IAAAC,mBAAW,EAAE;IACzDC,WAAA,EAAa;IACbC,SAAA,EAAWhB,KAAA,CAAMgB;EACnB;EAEA,IAAIC,SAAA,GAAY,CAAC,CAACjB,KAAK,CAAC,eAAe,IAAIA,KAAK,CAAC,eAAe,KAAK;EACrE,IAAIkB,WAAA,GAAc,IAAAC,uCAAa,EAAE;IAC/B,GAAGnB,KAAK;IACRoB,MAAA,EAAQ;iBACNX,SAAA;iBACAE,SAAA;sBACAC,cAAA;MACAS,UAAA,EAAYrB,KAAA,CAAMsB,QAAQ,IAAI;iBAC9BL;IACF;IACAM,gBAAA,EAAkB;EACpB;EAEA,oBACE,IAAAC,YAAA,EAAAC,aAAA,CAAC;IACE,GAAG,IAAAC,iBAAS,EAAE3B,sCAAA,CAAiBC,KAAA,GAAQa,UAAA,EAAYL,UAAA,CAAW;IAC9D,GAAGU,WAAW;IACfZ,GAAA,EAAKA,GAAA;IACL,gBAAcK,SAAA,IAAagB,SAAA;IAC3B,iBAAe3B,KAAA,CAAMsB,QAAQ,IAAIK,SAAA;IACjC,gBAAclB,SAAA,IAAakB,SAAA;IAC3B,sBAAoBf,cAAA,IAAkBe,SAAA;IACtC,gBAAcV,SAAA,IAAaU;;AAEjC;AACA;;;AAGA,MAAMC,yCAAA,gBAAY,IAAAC,iBAAS,EAAExB,8BAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { removeDataAttributes as $64fa3d84918910a7$export$ef03459518577ad4, useContextProps as $64fa3d84918910a7$export$29f1550f4b0d4415, useRenderProps as $64fa3d84918910a7$export$4d86445c2cf5e3 } from \"./utils.mjs\";\nimport { useSwitch as $hYf9o$useSwitch, useFocusRing as $hYf9o$useFocusRing, useHover as $hYf9o$useHover, mergeProps as $hYf9o$mergeProps, VisuallyHidden as $hYf9o$VisuallyHidden } from \"react-aria\";\nimport { useObjectRef as $hYf9o$useObjectRef, mergeRefs as $hYf9o$mergeRefs, filterDOMProps as $hYf9o$filterDOMProps } from \"@react-aria/utils\";\nimport $hYf9o$react, { createContext as $hYf9o$createContext, forwardRef as $hYf9o$forwardRef } from \"react\";\nimport { useToggleState as $hYf9o$useToggleState } from \"react-stately\";\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $8e59e948500a8fe1$export$8699e3b644d5a28a = /*#__PURE__*/(0, $hYf9o$createContext)(null);\nfunction $8e59e948500a8fe1$var$Switch(props, ref) {\n  let {\n    inputRef: userProvidedInputRef = null,\n    ...otherProps\n  } = props;\n  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(otherProps, ref, $8e59e948500a8fe1$export$8699e3b644d5a28a);\n  let inputRef = (0, $hYf9o$useObjectRef)((0, $hYf9o$mergeRefs)(userProvidedInputRef, props.inputRef !== undefined ? props.inputRef : null));\n  let state = (0, $hYf9o$useToggleState)(props);\n  let {\n    labelProps: labelProps,\n    inputProps: inputProps,\n    isSelected: isSelected,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isPressed: isPressed\n  } = (0, $hYf9o$useSwitch)({\n    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),\n    // ReactNode type doesn't allow function children.\n    children: typeof props.children === 'function' ? true : props.children\n  }, state, inputRef);\n  let {\n    isFocused: isFocused,\n    isFocusVisible: isFocusVisible,\n    focusProps: focusProps\n  } = (0, $hYf9o$useFocusRing)();\n  let isInteractionDisabled = props.isDisabled || props.isReadOnly;\n  let {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  } = (0, $hYf9o$useHover)({\n    ...props,\n    isDisabled: isInteractionDisabled\n  });\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({\n    ...props,\n    defaultClassName: 'react-aria-Switch',\n    values: {\n      isSelected: isSelected,\n      isPressed: isPressed,\n      isHovered: isHovered,\n      isFocused: isFocused,\n      isFocusVisible: isFocusVisible,\n      isDisabled: isDisabled,\n      isReadOnly: isReadOnly,\n      state: state\n    }\n  });\n  let DOMProps = (0, $hYf9o$filterDOMProps)(props);\n  delete DOMProps.id;\n  return /*#__PURE__*/(0, $hYf9o$react).createElement(\"label\", {\n    ...(0, $hYf9o$mergeProps)(DOMProps, labelProps, hoverProps, renderProps),\n    ref: ref,\n    slot: props.slot || undefined,\n    \"data-selected\": isSelected || undefined,\n    \"data-pressed\": isPressed || undefined,\n    \"data-hovered\": isHovered || undefined,\n    \"data-focused\": isFocused || undefined,\n    \"data-focus-visible\": isFocusVisible || undefined,\n    \"data-disabled\": isDisabled || undefined,\n    \"data-readonly\": isReadOnly || undefined\n  }, /*#__PURE__*/(0, $hYf9o$react).createElement((0, $hYf9o$VisuallyHidden), {\n    elementType: \"span\"\n  }, /*#__PURE__*/(0, $hYf9o$react).createElement(\"input\", {\n    ...(0, $hYf9o$mergeProps)(inputProps, focusProps),\n    ref: inputRef\n  })), renderProps.children);\n}\n/**\n * A switch allows a user to turn a setting on or off.\n */\nconst $8e59e948500a8fe1$export$b5d5cf8927ab7262 = /*#__PURE__*/(0, $hYf9o$forwardRef)($8e59e948500a8fe1$var$Switch);\nexport { $8e59e948500a8fe1$export$8699e3b644d5a28a as SwitchContext, $8e59e948500a8fe1$export$b5d5cf8927ab7262 as Switch };","map":{"version":3,"names":["$8e59e948500a8fe1$export$8699e3b644d5a28a","$hYf9o$createContext","$8e59e948500a8fe1$var$Switch","props","ref","inputRef","userProvidedInputRef","otherProps","$64fa3d84918910a7$export$29f1550f4b0d4415","$hYf9o$useObjectRef","$hYf9o$mergeRefs","undefined","state","$hYf9o$useToggleState","labelProps","inputProps","isSelected","isDisabled","isReadOnly","isPressed","$hYf9o$useSwitch","$64fa3d84918910a7$export$ef03459518577ad4","children","isFocused","isFocusVisible","focusProps","$hYf9o$useFocusRing","isInteractionDisabled","hoverProps","isHovered","$hYf9o$useHover","renderProps","$64fa3d84918910a7$export$4d86445c2cf5e3","defaultClassName","values","DOMProps","$hYf9o$filterDOMProps","id","$hYf9o$react","createElement","$hYf9o$mergeProps","slot","$hYf9o$VisuallyHidden","elementType","$8e59e948500a8fe1$export$b5d5cf8927ab7262","$hYf9o$forwardRef"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/react-aria-components/dist/packages/react-aria-components/src/Switch.tsx"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaSwitchProps, HoverEvents, mergeProps, useFocusRing, useHover, useSwitch, VisuallyHidden} from 'react-aria';\nimport {ContextValue, removeDataAttributes, RenderProps, SlotProps, useContextProps, useRenderProps} from './utils';\nimport {filterDOMProps, mergeRefs, useObjectRef} from '@react-aria/utils';\nimport {forwardRefType, RefObject} from '@react-types/shared';\nimport React, {createContext, ForwardedRef, forwardRef} from 'react';\nimport {ToggleState, useToggleState} from 'react-stately';\n\nexport interface SwitchProps extends Omit<AriaSwitchProps, 'children'>, HoverEvents, RenderProps<SwitchRenderProps>, SlotProps {\n  /**\n   * A ref for the HTML input element.\n   */\n  inputRef?: RefObject<HTMLInputElement | null>\n}\n\nexport interface SwitchRenderProps {\n  /**\n   * Whether the switch is selected.\n   * @selector [data-selected]\n   */\n  isSelected: boolean,\n  /**\n   * Whether the switch is currently hovered with a mouse.\n   * @selector [data-hovered]\n   */\n  isHovered: boolean,\n  /**\n   * Whether the switch is currently in a pressed state.\n   * @selector [data-pressed]\n   */\n  isPressed: boolean,\n  /**\n   * Whether the switch is focused, either via a mouse or keyboard.\n   * @selector [data-focused]\n   */\n  isFocused: boolean,\n  /**\n   * Whether the switch is keyboard focused.\n   * @selector [data-focus-visible]\n   */\n  isFocusVisible: boolean,\n  /**\n   * Whether the switch is disabled.\n   * @selector [data-disabled]\n   */\n  isDisabled: boolean,\n  /**\n   * Whether the switch is read only.\n   * @selector [data-readonly]\n   */\n  isReadOnly: boolean,\n  /**\n   * State of the switch.\n   */\n  state: ToggleState\n}\n\nexport const SwitchContext = createContext<ContextValue<SwitchProps, HTMLLabelElement>>(null);\n\nfunction Switch(props: SwitchProps, ref: ForwardedRef<HTMLLabelElement>) {\n  let {\n    inputRef: userProvidedInputRef = null,\n    ...otherProps\n  } = props;\n  [props, ref] = useContextProps(otherProps, ref, SwitchContext);\n  let inputRef = useObjectRef(mergeRefs(userProvidedInputRef, props.inputRef !== undefined ? props.inputRef : null));\n  let state = useToggleState(props);\n  let {labelProps, inputProps, isSelected, isDisabled, isReadOnly, isPressed} = useSwitch({\n    ...removeDataAttributes(props),\n    // ReactNode type doesn't allow function children.\n    children: typeof props.children === 'function' ? true : props.children\n  }, state, inputRef);\n  let {isFocused, isFocusVisible, focusProps} = useFocusRing();\n  let isInteractionDisabled = props.isDisabled || props.isReadOnly;\n\n  let {hoverProps, isHovered} = useHover({\n    ...props,\n    isDisabled: isInteractionDisabled\n  });\n\n  let renderProps = useRenderProps({\n    ...props,\n    defaultClassName: 'react-aria-Switch',\n    values: {\n      isSelected,\n      isPressed,\n      isHovered,\n      isFocused,\n      isFocusVisible,\n      isDisabled,\n      isReadOnly,\n      state\n    }\n  });\n\n  let DOMProps = filterDOMProps(props);\n  delete DOMProps.id;\n\n  return (\n    <label\n      {...mergeProps(DOMProps, labelProps, hoverProps, renderProps)}\n      ref={ref}\n      slot={props.slot || undefined}\n      data-selected={isSelected || undefined}\n      data-pressed={isPressed || undefined}\n      data-hovered={isHovered || undefined}\n      data-focused={isFocused || undefined}\n      data-focus-visible={isFocusVisible || undefined}\n      data-disabled={isDisabled || undefined}\n      data-readonly={isReadOnly || undefined}>\n      <VisuallyHidden elementType=\"span\">\n        <input {...mergeProps(inputProps, focusProps)} ref={inputRef} />\n      </VisuallyHidden>\n      {renderProps.children}\n    </label>\n  );\n}\n\n/**\n * A switch allows a user to turn a setting on or off.\n */\nconst _Switch = /*#__PURE__*/ (forwardRef as forwardRefType)(Switch);\nexport {_Switch as Switch};\n"],"mappings":";;;;;;AAAA;;;;;;;;;;;;AAoEO,MAAMA,yCAAA,gBAAgB,IAAAC,oBAAY,EAA+C;AAExF,SAASC,6BAAOC,KAAkB,EAAEC,GAAmC;EACrE,IAAI;IACFC,QAAA,EAAUC,oBAAA,GAAuB,IAAI;IACrC,GAAGC;EAAA,CACJ,GAAGJ,KAAA;EACJ,CAACA,KAAA,EAAOC,GAAA,CAAI,GAAG,IAAAI,yCAAc,EAAED,UAAA,EAAYH,GAAA,EAAKJ,yCAAA;EAChD,IAAIK,QAAA,GAAW,IAAAI,mBAAW,EAAE,IAAAC,gBAAQ,EAAEJ,oBAAA,EAAsBH,KAAA,CAAME,QAAQ,KAAKM,SAAA,GAAYR,KAAA,CAAME,QAAQ,GAAG;EAC5G,IAAIO,KAAA,GAAQ,IAAAC,qBAAa,EAAEV,KAAA;EAC3B,IAAI;IAAAW,UAAA,EAACA,UAAU;IAAAC,UAAA,EAAEA,UAAU;IAAAC,UAAA,EAAEA,UAAU;IAAAC,UAAA,EAAEA,UAAU;IAAAC,UAAA,EAAEA,UAAU;IAAAC,SAAA,EAAEA;EAAS,CAAC,GAAG,IAAAC,gBAAQ,EAAE;IACtF,GAAG,IAAAC,yCAAmB,EAAElB,KAAA,CAAM;IAC9B;IACAmB,QAAA,EAAU,OAAOnB,KAAA,CAAMmB,QAAQ,KAAK,aAAa,OAAOnB,KAAA,CAAMmB;EAChE,GAAGV,KAAA,EAAOP,QAAA;EACV,IAAI;IAAAkB,SAAA,EAACA,SAAS;IAAAC,cAAA,EAAEA,cAAc;IAAAC,UAAA,EAAEA;EAAU,CAAC,GAAG,IAAAC,mBAAW;EACzD,IAAIC,qBAAA,GAAwBxB,KAAA,CAAMc,UAAU,IAAId,KAAA,CAAMe,UAAU;EAEhE,IAAI;IAAAU,UAAA,EAACA,UAAU;IAAAC,SAAA,EAAEA;EAAS,CAAC,GAAG,IAAAC,eAAO,EAAE;IACrC,GAAG3B,KAAK;IACRc,UAAA,EAAYU;EACd;EAEA,IAAII,WAAA,GAAc,IAAAC,uCAAa,EAAE;IAC/B,GAAG7B,KAAK;IACR8B,gBAAA,EAAkB;IAClBC,MAAA,EAAQ;kBACNlB,UAAA;iBACAG,SAAA;iBACAU,SAAA;iBACAN,SAAA;sBACAC,cAAA;kBACAP,UAAA;kBACAC,UAAA;aACAN;IACF;EACF;EAEA,IAAIuB,QAAA,GAAW,IAAAC,qBAAa,EAAEjC,KAAA;EAC9B,OAAOgC,QAAA,CAASE,EAAE;EAElB,oBACE,IAAAC,YAAA,EAAAC,aAAA,CAAC;IACE,GAAG,IAAAC,iBAAS,EAAEL,QAAA,EAAUrB,UAAA,EAAYc,UAAA,EAAYG,WAAA,CAAY;IAC7D3B,GAAA,EAAKA,GAAA;IACLqC,IAAA,EAAMtC,KAAA,CAAMsC,IAAI,IAAI9B,SAAA;IACpB,iBAAeK,UAAA,IAAcL,SAAA;IAC7B,gBAAcQ,SAAA,IAAaR,SAAA;IAC3B,gBAAckB,SAAA,IAAalB,SAAA;IAC3B,gBAAcY,SAAA,IAAaZ,SAAA;IAC3B,sBAAoBa,cAAA,IAAkBb,SAAA;IACtC,iBAAeM,UAAA,IAAcN,SAAA;IAC7B,iBAAeO,UAAA,IAAcP;kBAC7B,IAAA2B,YAAA,EAAAC,aAAA,EAAC,GAAAG,qBAAa;IAAEC,WAAA,EAAY;kBAC1B,IAAAL,YAAA,EAAAC,aAAA,CAAC;IAAO,GAAG,IAAAC,iBAAS,EAAEzB,UAAA,EAAYU,UAAA,CAAW;IAAErB,GAAA,EAAKC;OAErD0B,WAAA,CAAYT,QAAQ;AAG3B;AAEA;;;AAGA,MAAMsB,yCAAA,GAAwB,aAAC,IAAAC,iBAAS,EAAqB3C,4BAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Overlay as $70305dc5fb729c3b$export$c6fdb837b070b4ff } from \"./Overlay.mjs\";\nimport \"./overlays.f8d97b78.css\";\nimport $4kQ6h$overlays_cssmodulejs from \"./overlays_css.mjs\";\nimport \"./vars.3f41eac0.css\";\nimport $4kQ6h$popover_vars_cssmodulejs from \"./popover_vars_css.mjs\";\nimport { Underlay as $76a452f4e3df11be$export$f360afc887607b02 } from \"./Underlay.mjs\";\nimport { usePopover as $4kQ6h$usePopover, DismissButton as $4kQ6h$DismissButton } from \"@react-aria/overlays\";\nimport { useDOMRef as $4kQ6h$useDOMRef, useStyleProps as $4kQ6h$useStyleProps, classNames as $4kQ6h$classNames } from \"@react-spectrum/utils\";\nimport { useFocusWithin as $4kQ6h$useFocusWithin } from \"@react-aria/interactions\";\nimport { mergeProps as $4kQ6h$mergeProps, useLayoutEffect as $4kQ6h$useLayoutEffect } from \"@react-aria/utils\";\nimport $4kQ6h$react, { useRef as $4kQ6h$useRef, forwardRef as $4kQ6h$forwardRef, useState as $4kQ6h$useState } from \"react\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/**\n * Arrow placement can be done pointing right or down because those paths start at 0, x or y. Because the\n * other two don't, they start at a fractional pixel value, it introduces rounding differences between browsers and\n * between display types (retina with subpixels vs not retina). By flipping them with CSS we can ensure that\n * the path always starts at 0 so that it perfectly overlaps the popover's border.\n * See bottom of file for more explanation.\n */\nlet $17b503f7de08fecc$var$arrowPlacement = {\n  left: 'right',\n  right: 'right',\n  top: 'bottom',\n  bottom: 'bottom'\n};\nfunction $17b503f7de08fecc$var$Popover(props, ref) {\n  let {\n    children: children,\n    state: state,\n    ...otherProps\n  } = props;\n  let domRef = (0, $4kQ6h$useDOMRef)(ref);\n  let wrapperRef = (0, $4kQ6h$useRef)(null);\n  return /*#__PURE__*/(0, $4kQ6h$react).createElement((0, $70305dc5fb729c3b$export$c6fdb837b070b4ff), {\n    ...otherProps,\n    isOpen: state.isOpen,\n    nodeRef: wrapperRef\n  }, /*#__PURE__*/(0, $4kQ6h$react).createElement($17b503f7de08fecc$var$PopoverWrapper, {\n    ref: domRef,\n    ...props,\n    wrapperRef: wrapperRef\n  }, children));\n}\nconst $17b503f7de08fecc$var$PopoverWrapper = /*#__PURE__*/(0, $4kQ6h$forwardRef)((props, ref) => {\n  let {\n    children: children,\n    isOpen: isOpen,\n    hideArrow: hideArrow,\n    isNonModal: isNonModal,\n    enableBothDismissButtons: enableBothDismissButtons,\n    state: state,\n    wrapperRef: wrapperRef,\n    onDismissButtonPress = () => state.close()\n  } = props;\n  let {\n    styleProps: styleProps\n  } = (0, $4kQ6h$useStyleProps)(props);\n  let {\n    size: size,\n    borderWidth: borderWidth,\n    arrowRef: arrowRef\n  } = $17b503f7de08fecc$var$useArrowSize();\n  const borderRadius = $17b503f7de08fecc$var$usePopoverBorderRadius(ref);\n  let borderDiagonal = borderWidth * Math.SQRT2;\n  let primary = size + borderDiagonal;\n  let secondary = primary * 2;\n  let {\n    popoverProps: popoverProps,\n    arrowProps: arrowProps,\n    underlayProps: underlayProps,\n    placement: placement\n  } = (0, $4kQ6h$usePopover)({\n    ...props,\n    popoverRef: ref,\n    maxHeight: null,\n    arrowSize: hideArrow ? 0 : secondary,\n    arrowBoundaryOffset: borderRadius\n  }, state);\n  let {\n    focusWithinProps: focusWithinProps\n  } = (0, $4kQ6h$useFocusWithin)(props);\n  // Attach Transition's nodeRef to outermost wrapper for node.reflow: https://github.com/reactjs/react-transition-group/blob/c89f807067b32eea6f68fd6c622190d88ced82e2/src/Transition.js#L231\n  return /*#__PURE__*/(0, $4kQ6h$react).createElement(\"div\", {\n    ref: wrapperRef\n  }, !isNonModal && /*#__PURE__*/(0, $4kQ6h$react).createElement((0, $76a452f4e3df11be$export$f360afc887607b02), {\n    isTransparent: true,\n    ...(0, $4kQ6h$mergeProps)(underlayProps),\n    isOpen: isOpen\n  }), /*#__PURE__*/(0, $4kQ6h$react).createElement(\"div\", {\n    ...styleProps,\n    ...(0, $4kQ6h$mergeProps)(popoverProps, focusWithinProps),\n    style: {\n      ...styleProps.style,\n      ...popoverProps.style\n    },\n    ref: ref,\n    className: (0, $4kQ6h$classNames)((0, $parcel$interopDefault($4kQ6h$popover_vars_cssmodulejs)), 'spectrum-Popover', `spectrum-Popover--${placement}`, {\n      'spectrum-Popover--withTip': !hideArrow,\n      'is-open': isOpen,\n      [`is-open--${placement}`]: isOpen\n    }, (0, $4kQ6h$classNames)((0, $parcel$interopDefault($4kQ6h$overlays_cssmodulejs)), 'spectrum-Popover', 'react-spectrum-Popover'), styleProps.className),\n    role: \"presentation\",\n    \"data-testid\": \"popover\"\n  }, (!isNonModal || enableBothDismissButtons) && /*#__PURE__*/(0, $4kQ6h$react).createElement((0, $4kQ6h$DismissButton), {\n    onDismiss: onDismissButtonPress\n  }), children, hideArrow ? null : /*#__PURE__*/(0, $4kQ6h$react).createElement($17b503f7de08fecc$var$Arrow, {\n    arrowProps: arrowProps,\n    isLandscape: $17b503f7de08fecc$var$arrowPlacement[placement] === 'bottom',\n    arrowRef: arrowRef,\n    primary: primary,\n    secondary: secondary,\n    borderDiagonal: borderDiagonal\n  }), /*#__PURE__*/(0, $4kQ6h$react).createElement((0, $4kQ6h$DismissButton), {\n    onDismiss: onDismissButtonPress\n  })));\n});\nfunction $17b503f7de08fecc$var$usePopoverBorderRadius(popoverRef) {\n  let [borderRadius, setBorderRadius] = (0, $4kQ6h$useState)(0);\n  (0, $4kQ6h$useLayoutEffect)(() => {\n    if (popoverRef.current) {\n      let spectrumBorderRadius = window.getComputedStyle(popoverRef.current).borderRadius;\n      if (spectrumBorderRadius !== '') setBorderRadius(parseInt(spectrumBorderRadius, 10));\n    }\n  }, [popoverRef]);\n  return borderRadius;\n}\nfunction $17b503f7de08fecc$var$useArrowSize() {\n  let [size, setSize] = (0, $4kQ6h$useState)(20);\n  let [borderWidth, setBorderWidth] = (0, $4kQ6h$useState)(1);\n  let arrowRef = (0, $4kQ6h$useRef)(null);\n  // get the css value for the tip size and divide it by 2 for this arrow implementation\n  (0, $4kQ6h$useLayoutEffect)(() => {\n    if (arrowRef.current) {\n      let spectrumTipWidth = window.getComputedStyle(arrowRef.current).getPropertyValue('--spectrum-popover-tip-size');\n      if (spectrumTipWidth !== '') setSize(parseInt(spectrumTipWidth, 10) / 2);\n      let spectrumBorderWidth = window.getComputedStyle(arrowRef.current).getPropertyValue('--spectrum-popover-tip-borderWidth');\n      if (spectrumBorderWidth !== '') setBorderWidth(parseInt(spectrumBorderWidth, 10));\n    }\n  }, []);\n  return {\n    size: size,\n    borderWidth: borderWidth,\n    arrowRef: arrowRef\n  };\n}\nfunction $17b503f7de08fecc$var$Arrow(props) {\n  let {\n    primary: primary,\n    secondary: secondary,\n    isLandscape: isLandscape,\n    arrowProps: arrowProps,\n    borderDiagonal: borderDiagonal,\n    arrowRef: arrowRef\n  } = props;\n  let halfBorderDiagonal = borderDiagonal / 2;\n  let primaryStart = 0;\n  let primaryEnd = primary - halfBorderDiagonal;\n  let secondaryStart = halfBorderDiagonal;\n  let secondaryMiddle = secondary / 2;\n  let secondaryEnd = secondary - halfBorderDiagonal;\n  let pathData = isLandscape ? ['M', secondaryStart, primaryStart, 'L', secondaryMiddle, primaryEnd, 'L', secondaryEnd, primaryStart] : ['M', primaryStart, secondaryStart, 'L', primaryEnd, secondaryMiddle, 'L', primaryStart, secondaryEnd];\n  /* use ceil because the svg needs to always accommodate the path inside it */\n  return /*#__PURE__*/(0, $4kQ6h$react).createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/svg/2000\",\n    width: Math.ceil(isLandscape ? secondary : primary),\n    height: Math.ceil(isLandscape ? primary : secondary),\n    className: (0, $4kQ6h$classNames)((0, $parcel$interopDefault($4kQ6h$popover_vars_cssmodulejs)), 'spectrum-Popover-tip'),\n    ref: arrowRef,\n    ...arrowProps\n  }, /*#__PURE__*/(0, $4kQ6h$react).createElement(\"path\", {\n    className: (0, $4kQ6h$classNames)((0, $parcel$interopDefault($4kQ6h$popover_vars_cssmodulejs)), 'spectrum-Popover-tip-triangle'),\n    d: pathData.join(' ')\n  }));\n}\nlet $17b503f7de08fecc$export$5b6b19405a83ff9d = /*#__PURE__*/(0, $4kQ6h$forwardRef)($17b503f7de08fecc$var$Popover);\n/**\n* More explanation on popover tips.\n* - I tried changing the calculation of the popover placement in an effort to get it squarely onto the pixel grid.\n* This did not work because the problem was in the svg partial pixel end of the path in the popover right and popover bottom.\n* - I tried creating an extra 'bandaid' path that matched the background color and would overlap the popover border.\n* This didn't work because the border on the svg triangle didn't extend all the way to match nicely with the popover border.\n* - I tried getting the client bounding box and setting the svg to that partial pixel value\n* This didn't work because again the issue was inside the svg\n* - I didn't try drawing the svg backwards\n* This could still be tried\n* - I tried changing the calculation of the popover placement AND the svg height/width so that they were all rounded\n* This seems to have done the trick.\n*/\n\nexport { $17b503f7de08fecc$export$5b6b19405a83ff9d as Popover };","map":{"version":3,"names":["$17b503f7de08fecc$var$arrowPlacement","left","right","top","bottom","$17b503f7de08fecc$var$Popover","props","ref","children","state","otherProps","domRef","$4kQ6h$useDOMRef","wrapperRef","$4kQ6h$useRef","$4kQ6h$react","createElement","$70305dc5fb729c3b$export$c6fdb837b070b4ff","isOpen","nodeRef","$17b503f7de08fecc$var$PopoverWrapper","$4kQ6h$forwardRef","hideArrow","isNonModal","enableBothDismissButtons","onDismissButtonPress","close","styleProps","$4kQ6h$useStyleProps","size","borderWidth","arrowRef","$17b503f7de08fecc$var$useArrowSize","borderRadius","$17b503f7de08fecc$var$usePopoverBorderRadius","borderDiagonal","Math","SQRT2","primary","secondary","popoverProps","arrowProps","underlayProps","placement","$4kQ6h$usePopover","popoverRef","maxHeight","arrowSize","arrowBoundaryOffset","focusWithinProps","$4kQ6h$useFocusWithin","$76a452f4e3df11be$export$f360afc887607b02","isTransparent","$4kQ6h$mergeProps","style","className","$4kQ6h$classNames","$parcel$interopDefault","$4kQ6h$popover_vars_cssmodulejs","$4kQ6h$overlays_cssmodulejs","role","$4kQ6h$DismissButton","onDismiss","$17b503f7de08fecc$var$Arrow","isLandscape","setBorderRadius","$4kQ6h$useState","$4kQ6h$useLayoutEffect","current","spectrumBorderRadius","window","getComputedStyle","parseInt","setSize","setBorderWidth","spectrumTipWidth","getPropertyValue","spectrumBorderWidth","halfBorderDiagonal","primaryStart","primaryEnd","secondaryStart","secondaryMiddle","secondaryEnd","pathData","xmlns","width","ceil","height","d","join","$17b503f7de08fecc$export$5b6b19405a83ff9d"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-spectrum/overlays/dist/packages/@react-spectrum/overlays/src/Popover.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaPopoverProps, DismissButton, PopoverAria, usePopover} from '@react-aria/overlays';\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef, RefObject, StyleProps} from '@react-types/shared';\nimport {FocusWithinProps, useFocusWithin} from '@react-aria/interactions';\nimport {mergeProps, useLayoutEffect} from '@react-aria/utils';\nimport {Overlay} from './Overlay';\nimport {OverlayTriggerState} from '@react-stately/overlays';\nimport overrideStyles from './overlays.css';\nimport React, {forwardRef, MutableRefObject, ReactNode, useRef, useState} from 'react';\nimport styles from '@adobe/spectrum-css-temp/components/popover/vars.css';\nimport {Underlay} from './Underlay';\n\ninterface PopoverProps extends Omit<AriaPopoverProps, 'popoverRef' | 'maxHeight'>, FocusWithinProps, StyleProps {\n  children: ReactNode,\n  hideArrow?: boolean,\n  state: OverlayTriggerState,\n  shouldContainFocus?: boolean,\n  onEntering?: () => void,\n  onEnter?: () => void,\n  onEntered?: () => void,\n  onExiting?: () => void,\n  onExited?: () => void,\n  onExit?: () => void,\n  container?: HTMLElement,\n  disableFocusManagement?: boolean,\n  enableBothDismissButtons?: boolean,\n  onDismissButtonPress?: () => void\n}\n\ninterface PopoverWrapperProps extends PopoverProps, FocusWithinProps {\n  isOpen?: boolean,\n  wrapperRef: MutableRefObject<HTMLDivElement>\n}\n\ninterface ArrowProps {\n  arrowProps: PopoverAria['arrowProps'],\n  isLandscape: boolean,\n  arrowRef?: RefObject<SVGSVGElement | null>,\n  primary: number,\n  secondary: number,\n  borderDiagonal: number\n}\n\n/**\n * Arrow placement can be done pointing right or down because those paths start at 0, x or y. Because the\n * other two don't, they start at a fractional pixel value, it introduces rounding differences between browsers and\n * between display types (retina with subpixels vs not retina). By flipping them with CSS we can ensure that\n * the path always starts at 0 so that it perfectly overlaps the popover's border.\n * See bottom of file for more explanation.\n */\nlet arrowPlacement = {\n  left: 'right',\n  right: 'right',\n  top: 'bottom',\n  bottom: 'bottom'\n};\n\nfunction Popover(props: PopoverProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    children,\n    state,\n    ...otherProps\n  } = props;\n  let domRef = useDOMRef(ref);\n  let wrapperRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <Overlay {...otherProps} isOpen={state.isOpen} nodeRef={wrapperRef}>\n      <PopoverWrapper ref={domRef} {...props} wrapperRef={wrapperRef}>\n        {children}\n      </PopoverWrapper>\n    </Overlay>\n  );\n}\n\nconst PopoverWrapper = forwardRef((props: PopoverWrapperProps, ref: RefObject<HTMLDivElement | null>) => {\n  let {\n    children,\n    isOpen,\n    hideArrow,\n    isNonModal,\n    enableBothDismissButtons,\n    state,\n    wrapperRef,\n    onDismissButtonPress = () => state.close()\n  } = props;\n  let {styleProps} = useStyleProps(props);\n\n  let {size, borderWidth, arrowRef} = useArrowSize();\n  const borderRadius = usePopoverBorderRadius(ref);\n  let borderDiagonal = borderWidth * Math.SQRT2;\n  let primary = size + borderDiagonal;\n  let secondary = primary * 2;\n  let {\n    popoverProps,\n    arrowProps,\n    underlayProps,\n    placement\n  } = usePopover({\n    ...props,\n    popoverRef: ref,\n    maxHeight: null,\n    arrowSize: hideArrow ? 0 : secondary,\n    arrowBoundaryOffset: borderRadius\n  }, state);\n  let {focusWithinProps} = useFocusWithin(props);\n\n  // Attach Transition's nodeRef to outermost wrapper for node.reflow: https://github.com/reactjs/react-transition-group/blob/c89f807067b32eea6f68fd6c622190d88ced82e2/src/Transition.js#L231\n  return (\n    <div ref={wrapperRef}>\n      {!isNonModal && <Underlay isTransparent {...mergeProps(underlayProps)} isOpen={isOpen} /> }\n      <div\n        {...styleProps}\n        {...mergeProps(popoverProps, focusWithinProps)}\n        style={{\n          ...styleProps.style,\n          ...popoverProps.style\n        }}\n        ref={ref}\n        className={\n          classNames(\n            styles,\n            'spectrum-Popover',\n            `spectrum-Popover--${placement}`,\n            {\n              'spectrum-Popover--withTip': !hideArrow,\n              'is-open': isOpen,\n              [`is-open--${placement}`]: isOpen\n            },\n            classNames(\n              overrideStyles,\n              'spectrum-Popover',\n              'react-spectrum-Popover'\n            ),\n            styleProps.className\n          )\n        }\n        role=\"presentation\"\n        data-testid=\"popover\">\n        {(!isNonModal || enableBothDismissButtons) && <DismissButton onDismiss={onDismissButtonPress} />}\n        {children}\n        {hideArrow ? null : (\n          <Arrow\n            arrowProps={arrowProps}\n            isLandscape={arrowPlacement[placement] === 'bottom'}\n            arrowRef={arrowRef}\n            primary={primary}\n            secondary={secondary}\n            borderDiagonal={borderDiagonal} />\n        )}\n        <DismissButton onDismiss={onDismissButtonPress} />\n      </div>\n    </div>\n  );\n});\n\nfunction usePopoverBorderRadius(popoverRef: RefObject<HTMLDivElement | null>) {\n  let [borderRadius, setBorderRadius] = useState(0);\n  useLayoutEffect(() => {\n    if (popoverRef.current) {\n      let spectrumBorderRadius = window.getComputedStyle(popoverRef.current).borderRadius;\n      if (spectrumBorderRadius !== '') {\n        setBorderRadius(parseInt(spectrumBorderRadius, 10));\n      }\n    }\n  }, [popoverRef]);\n  return borderRadius;\n}\n\nfunction useArrowSize() {\n  let [size, setSize] = useState(20);\n  let [borderWidth, setBorderWidth] = useState(1);\n  let arrowRef = useRef<SVGSVGElement>(null);\n  // get the css value for the tip size and divide it by 2 for this arrow implementation\n  useLayoutEffect(() => {\n    if (arrowRef.current) {\n      let spectrumTipWidth = window.getComputedStyle(arrowRef.current)\n        .getPropertyValue('--spectrum-popover-tip-size');\n      if (spectrumTipWidth !== '') {\n        setSize(parseInt(spectrumTipWidth, 10) / 2);\n      }\n\n      let spectrumBorderWidth = window.getComputedStyle(arrowRef.current)\n        .getPropertyValue('--spectrum-popover-tip-borderWidth');\n      if (spectrumBorderWidth !== '') {\n        setBorderWidth(parseInt(spectrumBorderWidth, 10));\n      }\n    }\n  }, []);\n  return {size, borderWidth, arrowRef};\n}\n\nfunction Arrow(props: ArrowProps) {\n  let {primary, secondary, isLandscape, arrowProps, borderDiagonal, arrowRef} = props;\n  let halfBorderDiagonal = borderDiagonal / 2;\n\n  let primaryStart = 0;\n  let primaryEnd = primary - halfBorderDiagonal;\n\n  let secondaryStart = halfBorderDiagonal;\n  let secondaryMiddle = secondary / 2;\n  let secondaryEnd = secondary - halfBorderDiagonal;\n\n  let pathData = isLandscape ? [\n    'M', secondaryStart, primaryStart,\n    'L', secondaryMiddle, primaryEnd,\n    'L', secondaryEnd, primaryStart\n  ] : [\n    'M', primaryStart, secondaryStart,\n    'L', primaryEnd, secondaryMiddle,\n    'L', primaryStart, secondaryEnd\n  ];\n\n  /* use ceil because the svg needs to always accommodate the path inside it */\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/svg/2000\"\n      width={Math.ceil(isLandscape ? secondary : primary)}\n      height={Math.ceil(isLandscape ? primary : secondary)}\n      className={classNames(styles, 'spectrum-Popover-tip')}\n      ref={arrowRef}\n      {...arrowProps}>\n      <path className={classNames(styles, 'spectrum-Popover-tip-triangle')} d={pathData.join(' ')} />\n    </svg>\n  );\n}\n\nlet _Popover = forwardRef(Popover);\nexport {_Popover as Popover};\n\n/**\n * More explanation on popover tips.\n * - I tried changing the calculation of the popover placement in an effort to get it squarely onto the pixel grid.\n * This did not work because the problem was in the svg partial pixel end of the path in the popover right and popover bottom.\n * - I tried creating an extra 'bandaid' path that matched the background color and would overlap the popover border.\n * This didn't work because the border on the svg triangle didn't extend all the way to match nicely with the popover border.\n * - I tried getting the client bounding box and setting the svg to that partial pixel value\n * This didn't work because again the issue was inside the svg\n * - I didn't try drawing the svg backwards\n * This could still be tried\n * - I tried changing the calculation of the popover placement AND the svg height/width so that they were all rounded\n * This seems to have done the trick.\n */\n"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;;;;;;;AAuDA;;;;;;;AAOA,IAAIA,oCAAA,GAAiB;EACnBC,IAAA,EAAM;EACNC,KAAA,EAAO;EACPC,GAAA,EAAK;EACLC,MAAA,EAAQ;AACV;AAEA,SAASC,8BAAQC,KAAmB,EAAEC,GAA2B;EAC/D,IAAI;IAAAC,QAAA,EACFA,QAAQ;IAAAC,KAAA,EACRA,KAAK;IACL,GAAGC;EAAA,CACJ,GAAGJ,KAAA;EACJ,IAAIK,MAAA,GAAS,IAAAC,gBAAQ,EAAEL,GAAA;EACvB,IAAIM,UAAA,GAAa,IAAAC,aAAK,EAAkB;EAExC,oBACE,IAAAC,YAAA,EAAAC,aAAA,EAAC,GAAAC,yCAAM;IAAG,GAAGP,UAAU;IAAEQ,MAAA,EAAQT,KAAA,CAAMS,MAAM;IAAEC,OAAA,EAASN;kBACtD,IAAAE,YAAA,EAAAC,aAAA,CAACI,oCAAA;IAAeb,GAAA,EAAKI,MAAA;IAAS,GAAGL,KAAK;IAAEO,UAAA,EAAYA;KACjDL,QAAA;AAIT;AAEA,MAAMY,oCAAA,gBAAiB,IAAAC,iBAAS,EAAE,CAACf,KAAA,EAA4BC,GAAA;EAC7D,IAAI;IAAAC,QAAA,EACFA,QAAQ;IAAAU,MAAA,EACRA,MAAM;IAAAI,SAAA,EACNA,SAAS;IAAAC,UAAA,EACTA,UAAU;IAAAC,wBAAA,EACVA,wBAAwB;IAAAf,KAAA,EACxBA,KAAK;IAAAI,UAAA,EACLA,UAAU;IACVY,oBAAA,GAAuBA,CAAA,KAAMhB,KAAA,CAAMiB,KAAK;EAAA,CACzC,GAAGpB,KAAA;EACJ,IAAI;IAAAqB,UAAA,EAACA;EAAU,CAAC,GAAG,IAAAC,oBAAY,EAAEtB,KAAA;EAEjC,IAAI;IAAAuB,IAAA,EAACA,IAAI;IAAAC,WAAA,EAAEA,WAAW;IAAAC,QAAA,EAAEA;EAAQ,CAAC,GAAGC,kCAAA;EACpC,MAAMC,YAAA,GAAeC,4CAAA,CAAuB3B,GAAA;EAC5C,IAAI4B,cAAA,GAAiBL,WAAA,GAAcM,IAAA,CAAKC,KAAK;EAC7C,IAAIC,OAAA,GAAUT,IAAA,GAAOM,cAAA;EACrB,IAAII,SAAA,GAAYD,OAAA,GAAU;EAC1B,IAAI;IAAAE,YAAA,EACFA,YAAY;IAAAC,UAAA,EACZA,UAAU;IAAAC,aAAA,EACVA,aAAa;IAAAC,SAAA,EACbA;EAAS,CACV,GAAG,IAAAC,iBAAS,EAAE;IACb,GAAGtC,KAAK;IACRuC,UAAA,EAAYtC,GAAA;IACZuC,SAAA,EAAW;IACXC,SAAA,EAAWzB,SAAA,GAAY,IAAIiB,SAAA;IAC3BS,mBAAA,EAAqBf;EACvB,GAAGxB,KAAA;EACH,IAAI;IAAAwC,gBAAA,EAACA;EAAgB,CAAC,GAAG,IAAAC,qBAAa,EAAE5C,KAAA;EAExC;EACA,oBACE,IAAAS,YAAA,EAAAC,aAAA,CAAC;IAAIT,GAAA,EAAKM;KACP,CAACU,UAAA,iBAAc,IAAAR,YAAA,EAAAC,aAAA,EAAC,GAAAmC,yCAAO;IAAEC,aAAA;IAAe,GAAG,IAAAC,iBAAS,EAAEX,aAAA,CAAc;IAAExB,MAAA,EAAQA;mBAC/E,IAAAH,YAAA,EAAAC,aAAA,CAAC;IACE,GAAGW,UAAU;IACb,GAAG,IAAA0B,iBAAS,EAAEb,YAAA,EAAcS,gBAAA,CAAiB;IAC9CK,KAAA,EAAO;MACL,GAAG3B,UAAA,CAAW2B,KAAK;MACnB,GAAGd,YAAA,CAAac;IAClB;IACA/C,GAAA,EAAKA,GAAA;IACLgD,SAAA,EACE,IAAAC,iBAAS,GACP,GAAAC,sBAAA,CAAAC,+BAAA,CAAK,GACL,oBACA,qBAAqBf,SAAA,EAAW,EAChC;MACE,6BAA6B,CAACrB,SAAA;MAC9B,WAAWJ,MAAA;MACX,CAAC,YAAYyB,SAAA,EAAW,GAAGzB;IAC7B,GACA,IAAAsC,iBAAS,GACP,GAAAC,sBAAA,CAAAE,2BAAA,CAAa,GACb,oBACA,2BAEFhC,UAAA,CAAW4B,SAAS;IAGxBK,IAAA,EAAK;IACL,eAAY;KACX,CAAC,CAACrC,UAAA,IAAcC,wBAAuB,kBAAM,IAAAT,YAAA,EAAAC,aAAA,EAAC,GAAA6C,oBAAY;IAAEC,SAAA,EAAWrC;MACvEjB,QAAA,EACAc,SAAA,GAAY,oBACX,IAAAP,YAAA,EAAAC,aAAA,CAAC+C,2BAAA;IACCtB,UAAA,EAAYA,UAAA;IACZuB,WAAA,EAAahE,oCAAc,CAAC2C,SAAA,CAAU,KAAK;IAC3CZ,QAAA,EAAUA,QAAA;IACVO,OAAA,EAASA,OAAA;IACTC,SAAA,EAAWA,SAAA;IACXJ,cAAA,EAAgBA;mBAEpB,IAAApB,YAAA,EAAAC,aAAA,EAAC,GAAA6C,oBAAY;IAAEC,SAAA,EAAWrC;;AAIlC;AAEA,SAASS,6CAAuBW,UAA4C;EAC1E,IAAI,CAACZ,YAAA,EAAcgC,eAAA,CAAgB,GAAG,IAAAC,eAAO,EAAE;EAC/C,IAAAC,sBAAc,EAAE;IACd,IAAItB,UAAA,CAAWuB,OAAO,EAAE;MACtB,IAAIC,oBAAA,GAAuBC,MAAA,CAAOC,gBAAgB,CAAC1B,UAAA,CAAWuB,OAAO,EAAEnC,YAAY;MACnF,IAAIoC,oBAAA,KAAyB,IAC3BJ,eAAA,CAAgBO,QAAA,CAASH,oBAAA,EAAsB;IAEnD;EACF,GAAG,CAACxB,UAAA,CAAW;EACf,OAAOZ,YAAA;AACT;AAEA,SAASD,mCAAA;EACP,IAAI,CAACH,IAAA,EAAM4C,OAAA,CAAQ,GAAG,IAAAP,eAAO,EAAE;EAC/B,IAAI,CAACpC,WAAA,EAAa4C,cAAA,CAAe,GAAG,IAAAR,eAAO,EAAE;EAC7C,IAAInC,QAAA,GAAW,IAAAjB,aAAK,EAAiB;EACrC;EACA,IAAAqD,sBAAc,EAAE;IACd,IAAIpC,QAAA,CAASqC,OAAO,EAAE;MACpB,IAAIO,gBAAA,GAAmBL,MAAA,CAAOC,gBAAgB,CAACxC,QAAA,CAASqC,OAAO,EAC5DQ,gBAAgB,CAAC;MACpB,IAAID,gBAAA,KAAqB,IACvBF,OAAA,CAAQD,QAAA,CAASG,gBAAA,EAAkB,MAAM;MAG3C,IAAIE,mBAAA,GAAsBP,MAAA,CAAOC,gBAAgB,CAACxC,QAAA,CAASqC,OAAO,EAC/DQ,gBAAgB,CAAC;MACpB,IAAIC,mBAAA,KAAwB,IAC1BH,cAAA,CAAeF,QAAA,CAASK,mBAAA,EAAqB;IAEjD;EACF,GAAG,EAAE;EACL,OAAO;UAAChD,IAAA;iBAAMC,WAAA;cAAaC;EAAQ;AACrC;AAEA,SAASgC,4BAAMzD,KAAiB;EAC9B,IAAI;IAAAgC,OAAA,EAACA,OAAO;IAAAC,SAAA,EAAEA,SAAS;IAAAyB,WAAA,EAAEA,WAAW;IAAAvB,UAAA,EAAEA,UAAU;IAAAN,cAAA,EAAEA,cAAc;IAAAJ,QAAA,EAAEA;EAAQ,CAAC,GAAGzB,KAAA;EAC9E,IAAIwE,kBAAA,GAAqB3C,cAAA,GAAiB;EAE1C,IAAI4C,YAAA,GAAe;EACnB,IAAIC,UAAA,GAAa1C,OAAA,GAAUwC,kBAAA;EAE3B,IAAIG,cAAA,GAAiBH,kBAAA;EACrB,IAAII,eAAA,GAAkB3C,SAAA,GAAY;EAClC,IAAI4C,YAAA,GAAe5C,SAAA,GAAYuC,kBAAA;EAE/B,IAAIM,QAAA,GAAWpB,WAAA,GAAc,CAC3B,KAAKiB,cAAA,EAAgBF,YAAA,EACrB,KAAKG,eAAA,EAAiBF,UAAA,EACtB,KAAKG,YAAA,EAAcJ,YAAA,CACpB,GAAG,CACF,KAAKA,YAAA,EAAcE,cAAA,EACnB,KAAKD,UAAA,EAAYE,eAAA,EACjB,KAAKH,YAAA,EAAcI,YAAA,CACpB;EAED;EACA,oBACE,IAAApE,YAAA,EAAAC,aAAA,CAAC;IACCqE,KAAA,EAAM;IACNC,KAAA,EAAOlD,IAAA,CAAKmD,IAAI,CAACvB,WAAA,GAAczB,SAAA,GAAYD,OAAA;IAC3CkD,MAAA,EAAQpD,IAAA,CAAKmD,IAAI,CAACvB,WAAA,GAAc1B,OAAA,GAAUC,SAAA;IAC1CgB,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,+BAAA,CAAK,GAAG;IAC9BnD,GAAA,EAAKwB,QAAA;IACJ,GAAGU;kBACJ,IAAA1B,YAAA,EAAAC,aAAA,CAAC;IAAKuC,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,+BAAA,CAAK,GAAG;IAAkC+B,CAAA,EAAGL,QAAA,CAASM,IAAI,CAAC;;AAG7F;AAEA,IAAIC,yCAAA,gBAAW,IAAAtE,iBAAS,EAAEhB,6BAAA;AAG1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"./vars.66d47c1b.css\";\nimport $k8ZOF$statuslight_vars_cssmodulejs from \"./statuslight_vars_css.mjs\";\nimport { useDOMRef as $k8ZOF$useDOMRef, useStyleProps as $k8ZOF$useStyleProps, classNames as $k8ZOF$classNames } from \"@react-spectrum/utils\";\nimport { filterDOMProps as $k8ZOF$filterDOMProps } from \"@react-aria/utils\";\nimport $k8ZOF$react, { forwardRef as $k8ZOF$forwardRef } from \"react\";\nimport { useProviderProps as $k8ZOF$useProviderProps } from \"@react-spectrum/provider\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $df8f173c8bd4ebc0$var$StatusLight(props, ref) {\n  let {\n    variant: variant,\n    children: children,\n    isDisabled: isDisabled,\n    role: role,\n    ...otherProps\n  } = (0, $k8ZOF$useProviderProps)(props);\n  let domRef = (0, $k8ZOF$useDOMRef)(ref);\n  let {\n    styleProps: styleProps\n  } = (0, $k8ZOF$useStyleProps)(otherProps);\n  if (!children && !props['aria-label']) console.warn('If no children are provided, an aria-label must be specified');\n  if (!role && (props['aria-label'] || props['aria-labelledby'])) console.warn('A labelled StatusLight must have a role.');\n  return /*#__PURE__*/(0, $k8ZOF$react).createElement(\"div\", {\n    ...(0, $k8ZOF$filterDOMProps)(otherProps, {\n      labelable: !!role\n    }),\n    ...styleProps,\n    role: role,\n    className: (0, $k8ZOF$classNames)((0, $parcel$interopDefault($k8ZOF$statuslight_vars_cssmodulejs)), 'spectrum-StatusLight', `spectrum-StatusLight--${variant}`, {\n      'is-disabled': isDisabled\n    }, styleProps.className),\n    ref: domRef\n  }, children);\n}\n/**\n * Status lights are used to color code categories and labels commonly found in data visualization.\n * When status lights have a semantic meaning, they should use semantic variant colors.\n */\nlet $df8f173c8bd4ebc0$export$5f84c37a31c6e41c = /*#__PURE__*/(0, $k8ZOF$forwardRef)($df8f173c8bd4ebc0$var$StatusLight);\nexport { $df8f173c8bd4ebc0$export$5f84c37a31c6e41c as StatusLight };","map":{"version":3,"names":["$df8f173c8bd4ebc0$var$StatusLight","props","ref","variant","children","isDisabled","role","otherProps","$k8ZOF$useProviderProps","domRef","$k8ZOF$useDOMRef","styleProps","$k8ZOF$useStyleProps","console","warn","$k8ZOF$react","createElement","$k8ZOF$filterDOMProps","labelable","className","$k8ZOF$classNames","$parcel$interopDefault","$k8ZOF$statuslight_vars_cssmodulejs","$df8f173c8bd4ebc0$export$5f84c37a31c6e41c","$k8ZOF$forwardRef"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-spectrum/statuslight/dist/packages/@react-spectrum/statuslight/src/StatusLight.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport React, {forwardRef} from 'react';\nimport {SpectrumStatusLightProps} from '@react-types/statuslight';\nimport styles from '@adobe/spectrum-css-temp/components/statuslight/vars.css';\nimport {useProviderProps} from '@react-spectrum/provider';\n\nfunction StatusLight(props: SpectrumStatusLightProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    variant,\n    children,\n    isDisabled,\n    role,\n    ...otherProps\n  } = useProviderProps(props);\n  let domRef = useDOMRef(ref);\n  let {styleProps} = useStyleProps(otherProps);\n\n  if (!children && !props['aria-label']) {\n    console.warn('If no children are provided, an aria-label must be specified');\n  }\n\n  if (!role && (props['aria-label'] || props['aria-labelledby'])) {\n    console.warn('A labelled StatusLight must have a role.');\n  }\n\n  return (\n    <div\n      {...filterDOMProps(otherProps, {labelable: !!role})}\n      {...styleProps}\n      role={role}\n      className={classNames(\n        styles,\n        'spectrum-StatusLight',\n        `spectrum-StatusLight--${variant}`,\n        {\n          'is-disabled': isDisabled\n        },\n        styleProps.className\n      )}\n      ref={domRef}>\n      {children}\n    </div>\n  );\n}\n\n/**\n * Status lights are used to color code categories and labels commonly found in data visualization.\n * When status lights have a semantic meaning, they should use semantic variant colors.\n */\nlet _StatusLight = forwardRef(StatusLight);\nexport {_StatusLight as StatusLight};\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;AAoBA,SAASA,kCAAYC,KAA+B,EAAEC,GAA2B;EAC/E,IAAI;IAAAC,OAAA,EACFA,OAAO;IAAAC,QAAA,EACPA,QAAQ;IAAAC,UAAA,EACRA,UAAU;IAAAC,IAAA,EACVA,IAAI;IACJ,GAAGC;EAAA,CACJ,GAAG,IAAAC,uBAAe,EAAEP,KAAA;EACrB,IAAIQ,MAAA,GAAS,IAAAC,gBAAQ,EAAER,GAAA;EACvB,IAAI;IAAAS,UAAA,EAACA;EAAU,CAAC,GAAG,IAAAC,oBAAY,EAAEL,UAAA;EAEjC,IAAI,CAACH,QAAA,IAAY,CAACH,KAAK,CAAC,aAAa,EACnCY,OAAA,CAAQC,IAAI,CAAC;EAGf,IAAI,CAACR,IAAA,KAASL,KAAK,CAAC,aAAa,IAAIA,KAAK,CAAC,kBAAkB,CAAD,EAC1DY,OAAA,CAAQC,IAAI,CAAC;EAGf,oBACE,IAAAC,YAAA,EAAAC,aAAA,CAAC;IACE,GAAG,IAAAC,qBAAa,EAAEV,UAAA,EAAY;MAACW,SAAA,EAAW,CAAC,CAACZ;IAAI,EAAE;IAClD,GAAGK,UAAU;IACdL,IAAA,EAAMA,IAAA;IACNa,SAAA,EAAW,IAAAC,iBAAS,GAClB,GAAAC,sBAAA,CAAAC,mCAAA,CAAK,GACL,wBACA,yBAAyBnB,OAAA,EAAS,EAClC;MACE,eAAeE;IACjB,GACAM,UAAA,CAAWQ,SAAS;IAEtBjB,GAAA,EAAKO;KACJL,QAAA;AAGP;AAEA;;;;AAIA,IAAImB,yCAAA,gBAAe,IAAAC,iBAAS,EAAExB,iCAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
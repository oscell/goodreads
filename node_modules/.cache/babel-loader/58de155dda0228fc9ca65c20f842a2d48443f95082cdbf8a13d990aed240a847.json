{"ast":null,"code":"import \"./vars.a118c25a.css\";\nimport $gnWwJ$barloader_vars_cssmodulejs from \"./barloader_vars_css.mjs\";\nimport { classNames as $gnWwJ$classNames } from \"@react-spectrum/utils\";\nimport { ProgressBarBase as $gnWwJ$ProgressBarBase } from \"@react-spectrum/progress\";\nimport $gnWwJ$react from \"react\";\nimport { useMeter as $gnWwJ$useMeter } from \"@react-aria/meter\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $559585cb28581b56$var$Meter(props, ref) {\n  let {\n    variant = 'informative',\n    ...otherProps\n  } = props;\n  const {\n    meterProps: meterProps,\n    labelProps: labelProps\n  } = (0, $gnWwJ$useMeter)(props);\n  return /*#__PURE__*/(0, $gnWwJ$react).createElement((0, $gnWwJ$ProgressBarBase), {\n    ...otherProps,\n    ref: ref,\n    barProps: meterProps,\n    labelProps: labelProps,\n    barClassName: (0, $gnWwJ$classNames)((0, $parcel$interopDefault($gnWwJ$barloader_vars_cssmodulejs)), {\n      'is-positive': variant === 'positive',\n      'is-warning': variant === 'warning',\n      'is-critical': variant === 'critical'\n    })\n  });\n}\n/**\n * Meters are visual representations of a quantity or an achievement.\n * Their progress is determined by user actions, rather than system actions.\n */\nlet $559585cb28581b56$export$62e3ae2a4090b879 = /*#__PURE__*/(0, $gnWwJ$react).forwardRef($559585cb28581b56$var$Meter);\nexport { $559585cb28581b56$export$62e3ae2a4090b879 as Meter };","map":{"version":3,"names":["$559585cb28581b56$var$Meter","props","ref","variant","otherProps","meterProps","labelProps","$gnWwJ$useMeter","$gnWwJ$react","createElement","$gnWwJ$ProgressBarBase","barProps","barClassName","$gnWwJ$classNames","$parcel$interopDefault","$gnWwJ$barloader_vars_cssmodulejs","$559585cb28581b56$export$62e3ae2a4090b879","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-spectrum/meter/dist/packages/@react-spectrum/meter/src/Meter.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {ProgressBarBase} from '@react-spectrum/progress';\nimport React from 'react';\nimport {SpectrumMeterProps} from '@react-types/meter';\nimport styles from '@adobe/spectrum-css-temp/components/barloader/vars.css';\nimport {useMeter} from '@react-aria/meter';\n\nfunction Meter(props: SpectrumMeterProps, ref: DOMRef<HTMLDivElement>) {\n  let {variant = 'informative', ...otherProps} = props;\n  const {\n    meterProps,\n    labelProps\n  } = useMeter(props);\n\n  return (\n    <ProgressBarBase\n      {...otherProps}\n      ref={ref}\n      barProps={meterProps}\n      labelProps={labelProps}\n      barClassName={\n        classNames(\n          styles,\n          {\n            'is-positive': variant === 'positive',\n            'is-warning': variant === 'warning',\n            'is-critical': variant === 'critical'\n          }\n        )\n      } />\n  );\n}\n\n/**\n * Meters are visual representations of a quantity or an achievement.\n * Their progress is determined by user actions, rather than system actions.\n */\nlet _Meter = React.forwardRef(Meter);\nexport {_Meter as Meter};\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;AAoBA,SAASA,4BAAMC,KAAyB,EAAEC,GAA2B;EACnE,IAAI;IAACC,OAAA,GAAU;IAAe,GAAGC;EAAA,CAAW,GAAGH,KAAA;EAC/C,MAAM;IAAAI,UAAA,EACJA,UAAU;IAAAC,UAAA,EACVA;EAAU,CACX,GAAG,IAAAC,eAAO,EAAEN,KAAA;EAEb,oBACE,IAAAO,YAAA,EAAAC,aAAA,EAAC,GAAAC,sBAAc;IACZ,GAAGN,UAAU;IACdF,GAAA,EAAKA,GAAA;IACLS,QAAA,EAAUN,UAAA;IACVC,UAAA,EAAYA,UAAA;IACZM,YAAA,EACE,IAAAC,iBAAS,GACP,GAAAC,sBAAA,CAAAC,iCAAA,CAAK,GACL;MACE,eAAeZ,OAAA,KAAY;MAC3B,cAAcA,OAAA,KAAY;MAC1B,eAAeA,OAAA,KAAY;IAC7B;;AAIV;AAEA;;;;AAIA,IAAIa,yCAAA,gBAAS,IAAAR,YAAI,EAAES,UAAU,CAACjB,2BAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { CalendarBase as $62cd1e80f0dffb66$export$bfd52a43017368fe } from \"./CalendarBase.mjs\";\nimport { createCalendar as $fF0AO$createCalendar } from \"@internationalized/date\";\nimport { createDOMRef as $fF0AO$createDOMRef } from \"@react-spectrum/utils\";\nimport $fF0AO$react, { useMemo as $fF0AO$useMemo, useRef as $fF0AO$useRef, useImperativeHandle as $fF0AO$useImperativeHandle } from \"react\";\nimport { useCalendar as $fF0AO$useCalendar } from \"@react-aria/calendar\";\nimport { useCalendarState as $fF0AO$useCalendarState } from \"@react-stately/calendar\";\nimport { useLocale as $fF0AO$useLocale } from \"@react-aria/i18n\";\nimport { useProviderProps as $fF0AO$useProviderProps } from \"@react-spectrum/provider\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $d2b8d4577dd88671$var$Calendar(props, ref) {\n  props = (0, $fF0AO$useProviderProps)(props);\n  let {\n    visibleMonths = 1\n  } = props;\n  visibleMonths = Math.max(visibleMonths, 1);\n  let visibleDuration = (0, $fF0AO$useMemo)(() => ({\n    months: visibleMonths\n  }), [visibleMonths]);\n  let {\n    locale: locale\n  } = (0, $fF0AO$useLocale)();\n  let state = (0, $fF0AO$useCalendarState)({\n    ...props,\n    locale: locale,\n    visibleDuration: visibleDuration,\n    createCalendar: $fF0AO$createCalendar\n  });\n  let domRef = (0, $fF0AO$useRef)(null);\n  (0, $fF0AO$useImperativeHandle)(ref, () => ({\n    ...(0, $fF0AO$createDOMRef)(domRef),\n    focus() {\n      state.setFocused(true);\n    }\n  }));\n  let {\n    calendarProps: calendarProps,\n    prevButtonProps: prevButtonProps,\n    nextButtonProps: nextButtonProps,\n    errorMessageProps: errorMessageProps\n  } = (0, $fF0AO$useCalendar)(props, state);\n  return /*#__PURE__*/(0, $fF0AO$react).createElement((0, $62cd1e80f0dffb66$export$bfd52a43017368fe), {\n    ...props,\n    visibleMonths: visibleMonths,\n    state: state,\n    calendarRef: domRef,\n    calendarProps: calendarProps,\n    prevButtonProps: prevButtonProps,\n    nextButtonProps: nextButtonProps,\n    errorMessageProps: errorMessageProps\n  });\n}\n/**\n * Calendars display a grid of days in one or more months and allow users to select a single date.\n */\nconst $d2b8d4577dd88671$export$e1aef45b828286de = /*#__PURE__*/(0, $fF0AO$react).forwardRef($d2b8d4577dd88671$var$Calendar);\nexport { $d2b8d4577dd88671$export$e1aef45b828286de as Calendar };","map":{"version":3,"names":["$d2b8d4577dd88671$var$Calendar","props","ref","$fF0AO$useProviderProps","visibleMonths","Math","max","visibleDuration","$fF0AO$useMemo","months","locale","$fF0AO$useLocale","state","$fF0AO$useCalendarState","$fF0AO$createCalendar","domRef","$fF0AO$useRef","$fF0AO$useImperativeHandle","$fF0AO$createDOMRef","focus","setFocused","calendarProps","prevButtonProps","nextButtonProps","errorMessageProps","$fF0AO$useCalendar","$fF0AO$react","createElement","$62cd1e80f0dffb66$export$bfd52a43017368fe","calendarRef","$d2b8d4577dd88671$export$e1aef45b828286de","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-spectrum/calendar/dist/packages/@react-spectrum/calendar/src/Calendar.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CalendarBase} from './CalendarBase';\nimport {createCalendar} from '@internationalized/date';\nimport {createDOMRef} from '@react-spectrum/utils';\nimport {DateValue, SpectrumCalendarProps} from '@react-types/calendar';\nimport {FocusableRef} from '@react-types/shared';\nimport React, {ReactElement, useImperativeHandle, useMemo, useRef} from 'react';\nimport {useCalendar} from '@react-aria/calendar';\nimport {useCalendarState} from '@react-stately/calendar';\nimport {useLocale} from '@react-aria/i18n';\nimport {useProviderProps} from '@react-spectrum/provider';\n\nfunction Calendar<T extends DateValue>(props: SpectrumCalendarProps<T>, ref: FocusableRef<HTMLElement>) {\n  props = useProviderProps(props);\n  let {visibleMonths = 1} = props;\n  visibleMonths = Math.max(visibleMonths, 1);\n  let visibleDuration = useMemo(() => ({months: visibleMonths}), [visibleMonths]);\n  let {locale} = useLocale();\n  let state = useCalendarState({\n    ...props,\n    locale,\n    visibleDuration,\n    createCalendar\n  });\n\n  let domRef = useRef(null);\n  useImperativeHandle(ref, () => ({\n    ...createDOMRef(domRef),\n    focus() {\n      state.setFocused(true);\n    }\n  }));\n\n  let {calendarProps, prevButtonProps, nextButtonProps, errorMessageProps} = useCalendar(props, state);\n\n  return (\n    <CalendarBase\n      {...props}\n      visibleMonths={visibleMonths}\n      state={state}\n      calendarRef={domRef}\n      calendarProps={calendarProps}\n      prevButtonProps={prevButtonProps}\n      nextButtonProps={nextButtonProps}\n      errorMessageProps={errorMessageProps} />\n  );\n}\n\n/**\n * Calendars display a grid of days in one or more months and allow users to select a single date.\n */\nconst _Calendar = React.forwardRef(Calendar) as <T extends DateValue>(props: SpectrumCalendarProps<T> & {ref?: FocusableRef<HTMLElement>}) => ReactElement;\nexport {_Calendar as Calendar};\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;AAuBA,SAASA,+BAA8BC,KAA+B,EAAEC,GAA8B;EACpGD,KAAA,GAAQ,IAAAE,uBAAe,EAAEF,KAAA;EACzB,IAAI;IAACG,aAAA,GAAgB;EAAA,CAAE,GAAGH,KAAA;EAC1BG,aAAA,GAAgBC,IAAA,CAAKC,GAAG,CAACF,aAAA,EAAe;EACxC,IAAIG,eAAA,GAAkB,IAAAC,cAAM,EAAE,OAAO;IAACC,MAAA,EAAQL;EAAa,IAAI,CAACA,aAAA,CAAc;EAC9E,IAAI;IAAAM,MAAA,EAACA;EAAM,CAAC,GAAG,IAAAC,gBAAQ;EACvB,IAAIC,KAAA,GAAQ,IAAAC,uBAAe,EAAE;IAC3B,GAAGZ,KAAK;YACRS,MAAA;qBACAH,eAAA;oBACAO;EACF;EAEA,IAAIC,MAAA,GAAS,IAAAC,aAAK,EAAE;EACpB,IAAAC,0BAAkB,EAAEf,GAAA,EAAK,OAAO;IAC9B,GAAG,IAAAgB,mBAAW,EAAEH,MAAA,CAAO;IACvBI,MAAA;MACEP,KAAA,CAAMQ,UAAU,CAAC;IACnB;EACF;EAEA,IAAI;IAAAC,aAAA,EAACA,aAAa;IAAAC,eAAA,EAAEA,eAAe;IAAAC,eAAA,EAAEA,eAAe;IAAAC,iBAAA,EAAEA;EAAiB,CAAC,GAAG,IAAAC,kBAAU,EAAExB,KAAA,EAAOW,KAAA;EAE9F,oBACE,IAAAc,YAAA,EAAAC,aAAA,EAAC,GAAAC,yCAAW;IACT,GAAG3B,KAAK;IACTG,aAAA,EAAeA,aAAA;IACfQ,KAAA,EAAOA,KAAA;IACPiB,WAAA,EAAad,MAAA;IACbM,aAAA,EAAeA,aAAA;IACfC,eAAA,EAAiBA,eAAA;IACjBC,eAAA,EAAiBA,eAAA;IACjBC,iBAAA,EAAmBA;;AAEzB;AAEA;;;AAGA,MAAMM,yCAAA,gBAAY,IAAAJ,YAAI,EAAEK,UAAU,CAAC/B,8BAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
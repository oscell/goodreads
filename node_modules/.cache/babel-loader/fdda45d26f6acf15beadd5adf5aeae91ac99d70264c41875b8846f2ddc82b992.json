{"ast":null,"code":"import { Point as $3041db3296945e6e$export$baf26146a414f24a } from \"./Point.mjs\";\nimport { Rect as $60423f92c7f9ad87$export$c79fc6492f3af13d } from \"./Rect.mjs\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nclass $364191b3decf3697$export$4455ee6afb38dcbb {\n  setVisibleRect(rect) {\n    let time = performance.now() - this.startTime;\n    if (time < 500) {\n      if (rect.x !== this.visibleRect.x && time > 0) this.velocity.x = (rect.x - this.visibleRect.x) / time;\n      if (rect.y !== this.visibleRect.y && time > 0) this.velocity.y = (rect.y - this.visibleRect.y) / time;\n    }\n    this.startTime = performance.now();\n    this.visibleRect = rect;\n  }\n  getOverscannedRect() {\n    let overscanned = this.visibleRect.copy();\n    let overscanY = this.visibleRect.height / 3;\n    overscanned.height += overscanY;\n    if (this.velocity.y < 0) overscanned.y -= overscanY;\n    if (this.velocity.x !== 0) {\n      let overscanX = this.visibleRect.width / 3;\n      overscanned.width += overscanX;\n      if (this.velocity.x < 0) overscanned.x -= overscanX;\n    }\n    return overscanned;\n  }\n  constructor() {\n    this.startTime = 0;\n    this.velocity = new (0, $3041db3296945e6e$export$baf26146a414f24a)(0, 0);\n    this.visibleRect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)();\n  }\n}\nexport { $364191b3decf3697$export$4455ee6afb38dcbb as OverscanManager };","map":{"version":3,"names":["$364191b3decf3697$export$4455ee6afb38dcbb","setVisibleRect","rect","time","performance","now","startTime","x","visibleRect","velocity","y","getOverscannedRect","overscanned","copy","overscanY","height","overscanX","width","$3041db3296945e6e$export$baf26146a414f24a","$60423f92c7f9ad87$export$c79fc6492f3af13d"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-stately/virtualizer/dist/packages/@react-stately/virtualizer/src/OverscanManager.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Point} from './Point';\nimport {Rect} from './Rect';\n\nexport class OverscanManager {\n  private startTime = 0;\n  private velocity = new Point(0, 0);\n  private visibleRect = new Rect();\n\n  setVisibleRect(rect: Rect) {\n    let time = performance.now() - this.startTime;\n    if (time < 500) {\n      if (rect.x !== this.visibleRect.x && time > 0) {\n        this.velocity.x = (rect.x - this.visibleRect.x) / time;\n      }\n\n      if (rect.y !== this.visibleRect.y && time > 0) {\n        this.velocity.y = (rect.y - this.visibleRect.y) / time;\n      }\n    }\n\n    this.startTime = performance.now();\n    this.visibleRect = rect;\n  }\n\n  getOverscannedRect() {\n    let overscanned = this.visibleRect.copy();\n\n    let overscanY = this.visibleRect.height / 3;\n    overscanned.height += overscanY;\n    if (this.velocity.y < 0) {\n      overscanned.y -= overscanY;\n    }\n\n    if (this.velocity.x !== 0) {\n      let overscanX = this.visibleRect.width / 3;\n      overscanned.width += overscanX;\n      if (this.velocity.x < 0) {\n        overscanned.x -= overscanX;\n      }\n    }\n\n    return overscanned;\n  }\n}\n"],"mappings":";;;AAAA;;;;;;;;;;;;AAeO,MAAMA,yCAAA;EAKXC,eAAeC,IAAU,EAAE;IACzB,IAAIC,IAAA,GAAOC,WAAA,CAAYC,GAAG,KAAK,IAAI,CAACC,SAAS;IAC7C,IAAIH,IAAA,GAAO,KAAK;MACd,IAAID,IAAA,CAAKK,CAAC,KAAK,IAAI,CAACC,WAAW,CAACD,CAAC,IAAIJ,IAAA,GAAO,GAC1C,IAAI,CAACM,QAAQ,CAACF,CAAC,GAAG,CAACL,IAAA,CAAKK,CAAC,GAAG,IAAI,CAACC,WAAW,CAACD,CAAC,IAAIJ,IAAA;MAGpD,IAAID,IAAA,CAAKQ,CAAC,KAAK,IAAI,CAACF,WAAW,CAACE,CAAC,IAAIP,IAAA,GAAO,GAC1C,IAAI,CAACM,QAAQ,CAACC,CAAC,GAAG,CAACR,IAAA,CAAKQ,CAAC,GAAG,IAAI,CAACF,WAAW,CAACE,CAAC,IAAIP,IAAA;IAEtD;IAEA,IAAI,CAACG,SAAS,GAAGF,WAAA,CAAYC,GAAG;IAChC,IAAI,CAACG,WAAW,GAAGN,IAAA;EACrB;EAEAS,mBAAA,EAAqB;IACnB,IAAIC,WAAA,GAAc,IAAI,CAACJ,WAAW,CAACK,IAAI;IAEvC,IAAIC,SAAA,GAAY,IAAI,CAACN,WAAW,CAACO,MAAM,GAAG;IAC1CH,WAAA,CAAYG,MAAM,IAAID,SAAA;IACtB,IAAI,IAAI,CAACL,QAAQ,CAACC,CAAC,GAAG,GACpBE,WAAA,CAAYF,CAAC,IAAII,SAAA;IAGnB,IAAI,IAAI,CAACL,QAAQ,CAACF,CAAC,KAAK,GAAG;MACzB,IAAIS,SAAA,GAAY,IAAI,CAACR,WAAW,CAACS,KAAK,GAAG;MACzCL,WAAA,CAAYK,KAAK,IAAID,SAAA;MACrB,IAAI,IAAI,CAACP,QAAQ,CAACF,CAAC,GAAG,GACpBK,WAAA,CAAYL,CAAC,IAAIS,SAAA;IAErB;IAEA,OAAOJ,WAAA;EACT;;SAtCQN,SAAA,GAAY;SACZG,QAAA,GAAW,KAAI,GAAAS,yCAAI,EAAE,GAAG;SACxBV,WAAA,GAAc,KAAI,GAAAW,yCAAG;;AAqC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
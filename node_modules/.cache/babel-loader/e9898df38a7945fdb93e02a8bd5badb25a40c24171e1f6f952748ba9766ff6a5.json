{"ast":null,"code":"import $8XmPE$react from \"react\";\nimport { Transition as $8XmPE$Transition } from \"react-transition-group\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $bc765a7a041310da$var$OPEN_STATES = {\n  entering: false,\n  entered: true\n};\nfunction $bc765a7a041310da$export$b847a40ee92eff38(props) {\n  var child;\n  return /*#__PURE__*/(0, $8XmPE$react).createElement((0, $8XmPE$Transition), {\n    timeout: {\n      enter: 0,\n      exit: 350\n    },\n    ...props\n  }, state => (0, $8XmPE$react).Children.map(props.children, child => child && /*#__PURE__*/(0, $8XmPE$react).cloneElement(child, {\n    isOpen: !!$bc765a7a041310da$var$OPEN_STATES[state]\n  })));\n}\nexport { $bc765a7a041310da$export$b847a40ee92eff38 as OpenTransition };","map":{"version":3,"names":["$bc765a7a041310da$var$OPEN_STATES","entering","entered","$bc765a7a041310da$export$b847a40ee92eff38","props","child","$8XmPE$react","createElement","$8XmPE$Transition","timeout","enter","exit","state","Children","map","children","cloneElement","isOpen"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-spectrum/overlays/dist/packages/@react-spectrum/overlays/src/OpenTransition.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport {Transition} from 'react-transition-group';\n\nconst OPEN_STATES = {\n  entering: false,\n  entered: true\n};\n\n/**\n * Timeout issues adding css animations to enter may be related to\n * https://github.com/reactjs/react-transition-group/issues/189 or\n * https://github.com/reactjs/react-transition-group/issues/22\n * my VM isn't good enough to debug accurately and get a better answer.\n *\n * As a result, use enter 0 so that is-open is applied once entered\n * it doesn't matter if we know when the css-animation is done on entering\n * for exiting though, give time for the css-animation to play\n * before removing from the DOM\n * **note** hitting esc bypasses exit animation for anyone testing.\n */\n\nexport function OpenTransition(props) {\n  // Do not apply any transition if in chromatic.\n  if (process.env.CHROMATIC) {\n    return React.Children.map(props.children, child => child && React.cloneElement(child, {isOpen: props.in}));\n  }\n\n  return (\n    <Transition timeout={{enter: 0, exit: 350}} {...props}>\n      {(state) => React.Children.map(props.children, child => child && React.cloneElement(child, {isOpen: !!OPEN_STATES[state]}))}\n    </Transition>\n  );\n}\n"],"mappings":";;;AAAA;;;;;;;;;;;;AAeA,MAAMA,iCAAA,GAAc;EAClBC,QAAA,EAAU;EACVC,OAAA,EAAS;AACX;AAeO,SAASC,0CAAeC,KAAK;MAGUC,KAAA;EAG5C,oBACE,IAAAC,YAAA,EAAAC,aAAA,EAAC,GAAAC,iBAAS;IAAEC,OAAA,EAAS;MAACC,KAAA,EAAO;MAAGC,IAAA,EAAM;IAAG;IAAI,GAAGP;KAC5CQ,KAAA,IAAU,IAAAN,YAAI,EAAEO,QAAQ,CAACC,GAAG,CAACV,KAAA,CAAMW,QAAQ,EAAEV,KAAA,IAASA,KAAA,iBAAS,IAAAC,YAAI,EAAEU,YAAY,CAACX,KAAA,EAAO;IAACY,MAAA,EAAQ,CAAC,CAACjB,iCAAW,CAACY,KAAA;EAAM;AAG9H","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Provider as $64fa3d84918910a7$export$2881499e37b75b9a, useContextProps as $64fa3d84918910a7$export$29f1550f4b0d4415, useEnterAnimation as $64fa3d84918910a7$export$6d3443f2c48bfc20, useExitAnimation as $64fa3d84918910a7$export$45fda7c47f93fd48, useRenderProps as $64fa3d84918910a7$export$4d86445c2cf5e3 } from \"./utils.mjs\";\nimport { OverlayTriggerStateContext as $de32f1b87079253c$export$d2f961adcb0afbe } from \"./Dialog.mjs\";\nimport { useIsSSR as $daTMi$useIsSSR, useModalOverlay as $daTMi$useModalOverlay, Overlay as $daTMi$Overlay, DismissButton as $daTMi$DismissButton } from \"react-aria\";\nimport { useObjectRef as $daTMi$useObjectRef, useViewportSize as $daTMi$useViewportSize, mergeProps as $daTMi$mergeProps, filterDOMProps as $daTMi$filterDOMProps, mergeRefs as $daTMi$mergeRefs } from \"@react-aria/utils\";\nimport { useOverlayTriggerState as $daTMi$useOverlayTriggerState } from \"react-stately\";\nimport $daTMi$react, { createContext as $daTMi$createContext, useContext as $daTMi$useContext, forwardRef as $daTMi$forwardRef, useRef as $daTMi$useRef, useMemo as $daTMi$useMemo } from \"react\";\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $f3f84453ead64de5$export$ab57792b9b6974a6 = /*#__PURE__*/(0, $daTMi$createContext)(null);\nconst $f3f84453ead64de5$var$InternalModalContext = /*#__PURE__*/(0, $daTMi$createContext)(null);\nfunction $f3f84453ead64de5$var$Modal(props, ref) {\n  let ctx = (0, $daTMi$useContext)($f3f84453ead64de5$var$InternalModalContext);\n  if (ctx) return /*#__PURE__*/(0, $daTMi$react).createElement($f3f84453ead64de5$var$ModalContent, {\n    ...props,\n    modalRef: ref\n  }, props.children);\n  let {\n    isDismissable: isDismissable,\n    isKeyboardDismissDisabled: isKeyboardDismissDisabled,\n    isOpen: isOpen,\n    defaultOpen: defaultOpen,\n    onOpenChange: onOpenChange,\n    children: children,\n    isEntering: isEntering,\n    isExiting: isExiting,\n    UNSTABLE_portalContainer: UNSTABLE_portalContainer,\n    shouldCloseOnInteractOutside: shouldCloseOnInteractOutside,\n    ...otherProps\n  } = props;\n  return /*#__PURE__*/(0, $daTMi$react).createElement($f3f84453ead64de5$export$8948f78d83984c69, {\n    isDismissable: isDismissable,\n    isKeyboardDismissDisabled: isKeyboardDismissDisabled,\n    isOpen: isOpen,\n    defaultOpen: defaultOpen,\n    onOpenChange: onOpenChange,\n    isEntering: isEntering,\n    isExiting: isExiting,\n    UNSTABLE_portalContainer: UNSTABLE_portalContainer,\n    shouldCloseOnInteractOutside: shouldCloseOnInteractOutside\n  }, /*#__PURE__*/(0, $daTMi$react).createElement($f3f84453ead64de5$var$ModalContent, {\n    ...otherProps,\n    modalRef: ref\n  }, children));\n}\n/**\n * A modal is an overlay element which blocks interaction with elements outside it.\n */\nconst $f3f84453ead64de5$export$2b77a92f1a5ad772 = /*#__PURE__*/(0, $daTMi$forwardRef)($f3f84453ead64de5$var$Modal);\nfunction $f3f84453ead64de5$var$ModalOverlayWithForwardRef(props, ref) {\n  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $f3f84453ead64de5$export$ab57792b9b6974a6);\n  let contextState = (0, $daTMi$useContext)((0, $de32f1b87079253c$export$d2f961adcb0afbe));\n  let localState = (0, $daTMi$useOverlayTriggerState)(props);\n  let state = props.isOpen != null || props.defaultOpen != null || !contextState ? localState : contextState;\n  let objectRef = (0, $daTMi$useObjectRef)(ref);\n  let modalRef = (0, $daTMi$useRef)(null);\n  let isOverlayExiting = (0, $64fa3d84918910a7$export$45fda7c47f93fd48)(objectRef, state.isOpen);\n  let isModalExiting = (0, $64fa3d84918910a7$export$45fda7c47f93fd48)(modalRef, state.isOpen);\n  let isExiting = isOverlayExiting || isModalExiting || props.isExiting || false;\n  let isSSR = (0, $daTMi$useIsSSR)();\n  if (!state.isOpen && !isExiting || isSSR) return null;\n  return /*#__PURE__*/(0, $daTMi$react).createElement($f3f84453ead64de5$var$ModalOverlayInner, {\n    ...props,\n    state: state,\n    isExiting: isExiting,\n    overlayRef: objectRef,\n    modalRef: modalRef\n  });\n}\nconst $f3f84453ead64de5$export$8948f78d83984c69 = /*#__PURE__*/(0, $daTMi$forwardRef)($f3f84453ead64de5$var$ModalOverlayWithForwardRef);\nfunction $f3f84453ead64de5$var$ModalOverlayInner({\n  UNSTABLE_portalContainer: UNSTABLE_portalContainer,\n  ...props\n}) {\n  let modalRef = props.modalRef;\n  let {\n    state: state\n  } = props;\n  let {\n    modalProps: modalProps,\n    underlayProps: underlayProps\n  } = (0, $daTMi$useModalOverlay)(props, state, modalRef);\n  let entering = (0, $64fa3d84918910a7$export$6d3443f2c48bfc20)(props.overlayRef) || props.isEntering || false;\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({\n    ...props,\n    defaultClassName: 'react-aria-ModalOverlay',\n    values: {\n      isEntering: entering,\n      isExiting: props.isExiting,\n      state: state\n    }\n  });\n  let viewport = (0, $daTMi$useViewportSize)();\n  let style = {\n    ...renderProps.style,\n    '--visual-viewport-height': viewport.height + 'px'\n  };\n  return /*#__PURE__*/(0, $daTMi$react).createElement((0, $daTMi$Overlay), {\n    isExiting: props.isExiting,\n    portalContainer: UNSTABLE_portalContainer\n  }, /*#__PURE__*/(0, $daTMi$react).createElement(\"div\", {\n    ...(0, $daTMi$mergeProps)((0, $daTMi$filterDOMProps)(props), underlayProps),\n    ...renderProps,\n    style: style,\n    ref: props.overlayRef,\n    \"data-entering\": entering || undefined,\n    \"data-exiting\": props.isExiting || undefined\n  }, /*#__PURE__*/(0, $daTMi$react).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {\n    values: [[$f3f84453ead64de5$var$InternalModalContext, {\n      modalProps: modalProps,\n      modalRef: modalRef,\n      isExiting: props.isExiting,\n      isDismissable: props.isDismissable\n    }], [(0, $de32f1b87079253c$export$d2f961adcb0afbe), state]]\n  }, renderProps.children)));\n}\nfunction $f3f84453ead64de5$var$ModalContent(props) {\n  let {\n    modalProps: modalProps,\n    modalRef: modalRef,\n    isExiting: isExiting,\n    isDismissable: isDismissable\n  } = (0, $daTMi$useContext)($f3f84453ead64de5$var$InternalModalContext);\n  let state = (0, $daTMi$useContext)((0, $de32f1b87079253c$export$d2f961adcb0afbe));\n  let mergedRefs = (0, $daTMi$useMemo)(() => (0, $daTMi$mergeRefs)(props.modalRef, modalRef), [props.modalRef, modalRef]);\n  let ref = (0, $daTMi$useObjectRef)(mergedRefs);\n  let entering = (0, $64fa3d84918910a7$export$6d3443f2c48bfc20)(ref);\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({\n    ...props,\n    defaultClassName: 'react-aria-Modal',\n    values: {\n      isEntering: entering,\n      isExiting: isExiting,\n      state: state\n    }\n  });\n  return /*#__PURE__*/(0, $daTMi$react).createElement(\"div\", {\n    ...(0, $daTMi$mergeProps)((0, $daTMi$filterDOMProps)(props), modalProps),\n    ...renderProps,\n    ref: ref,\n    \"data-entering\": entering || undefined,\n    \"data-exiting\": isExiting || undefined\n  }, isDismissable && /*#__PURE__*/(0, $daTMi$react).createElement((0, $daTMi$DismissButton), {\n    onDismiss: state.close\n  }), renderProps.children);\n}\nexport { $f3f84453ead64de5$export$ab57792b9b6974a6 as ModalContext, $f3f84453ead64de5$export$8948f78d83984c69 as ModalOverlay, $f3f84453ead64de5$export$2b77a92f1a5ad772 as Modal };","map":{"version":3,"names":["$f3f84453ead64de5$export$ab57792b9b6974a6","$daTMi$createContext","$f3f84453ead64de5$var$InternalModalContext","$f3f84453ead64de5$var$Modal","props","ref","ctx","$daTMi$useContext","$daTMi$react","createElement","$f3f84453ead64de5$var$ModalContent","modalRef","children","isDismissable","isKeyboardDismissDisabled","isOpen","defaultOpen","onOpenChange","isEntering","isExiting","UNSTABLE_portalContainer","shouldCloseOnInteractOutside","otherProps","$f3f84453ead64de5$export$8948f78d83984c69","$f3f84453ead64de5$export$2b77a92f1a5ad772","$daTMi$forwardRef","$f3f84453ead64de5$var$ModalOverlayWithForwardRef","$64fa3d84918910a7$export$29f1550f4b0d4415","contextState","$de32f1b87079253c$export$d2f961adcb0afbe","localState","$daTMi$useOverlayTriggerState","state","objectRef","$daTMi$useObjectRef","$daTMi$useRef","isOverlayExiting","$64fa3d84918910a7$export$45fda7c47f93fd48","isModalExiting","isSSR","$daTMi$useIsSSR","$f3f84453ead64de5$var$ModalOverlayInner","overlayRef","modalProps","underlayProps","$daTMi$useModalOverlay","entering","$64fa3d84918910a7$export$6d3443f2c48bfc20","renderProps","$64fa3d84918910a7$export$4d86445c2cf5e3","defaultClassName","values","viewport","$daTMi$useViewportSize","style","height","$daTMi$Overlay","portalContainer","$daTMi$mergeProps","$daTMi$filterDOMProps","undefined","$64fa3d84918910a7$export$2881499e37b75b9a","mergedRefs","$daTMi$useMemo","$daTMi$mergeRefs","$daTMi$DismissButton","onDismiss","close"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/react-aria-components/dist/packages/react-aria-components/src/Modal.tsx"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaModalOverlayProps, DismissButton, Overlay, useIsSSR, useModalOverlay} from 'react-aria';\nimport {ContextValue, Provider, RenderProps, SlotProps, useContextProps, useEnterAnimation, useExitAnimation, useRenderProps} from './utils';\nimport {DOMAttributes, forwardRefType, RefObject} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, mergeRefs, useObjectRef, useViewportSize} from '@react-aria/utils';\nimport {OverlayTriggerProps, OverlayTriggerState, useOverlayTriggerState} from 'react-stately';\nimport {OverlayTriggerStateContext} from './Dialog';\nimport React, {createContext, ForwardedRef, forwardRef, useContext, useMemo, useRef} from 'react';\n\nexport interface ModalOverlayProps extends AriaModalOverlayProps, OverlayTriggerProps, RenderProps<ModalRenderProps>, SlotProps {\n  /**\n   * Whether the modal is currently performing an entry animation.\n   */\n  isEntering?: boolean,\n  /**\n   * Whether the modal is currently performing an exit animation.\n   */\n  isExiting?: boolean,\n  /**\n   * The container element in which the overlay portal will be placed. This may have unknown behavior depending on where it is portalled to.\n   * @default document.body\n   */\n  UNSTABLE_portalContainer?: Element\n}\n\ninterface InternalModalContextValue {\n  modalProps: DOMAttributes,\n  modalRef: RefObject<HTMLDivElement | null>,\n  isExiting: boolean,\n  isDismissable?: boolean\n}\n\nexport const ModalContext = createContext<ContextValue<ModalOverlayProps, HTMLDivElement>>(null);\nconst InternalModalContext = createContext<InternalModalContextValue | null>(null);\n\nexport interface ModalRenderProps {\n  /**\n   * Whether the modal is currently entering. Use this to apply animations.\n   * @selector [data-entering]\n   */\n  isEntering: boolean,\n  /**\n   * Whether the modal is currently exiting. Use this to apply animations.\n   * @selector [data-exiting]\n   */\n  isExiting: boolean,\n  /**\n   * State of the modal.\n   */\n  state: OverlayTriggerState\n}\n\nfunction Modal(props: ModalOverlayProps, ref: ForwardedRef<HTMLDivElement>) {\n  let ctx = useContext(InternalModalContext);\n\n  if (ctx) {\n    return <ModalContent {...props} modalRef={ref}>{props.children}</ModalContent>;\n  }\n\n  let {\n    isDismissable,\n    isKeyboardDismissDisabled,\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    children,\n    isEntering,\n    isExiting,\n    UNSTABLE_portalContainer,\n    shouldCloseOnInteractOutside,\n    ...otherProps\n  } = props;\n\n  return (\n    <ModalOverlay\n      isDismissable={isDismissable}\n      isKeyboardDismissDisabled={isKeyboardDismissDisabled}\n      isOpen={isOpen}\n      defaultOpen={defaultOpen}\n      onOpenChange={onOpenChange}\n      isEntering={isEntering}\n      isExiting={isExiting}\n      UNSTABLE_portalContainer={UNSTABLE_portalContainer}\n      shouldCloseOnInteractOutside={shouldCloseOnInteractOutside}>\n      <ModalContent {...otherProps} modalRef={ref}>\n        {children}\n      </ModalContent>\n    </ModalOverlay>\n  );\n}\n\ninterface ModalOverlayInnerProps extends ModalOverlayProps {\n  overlayRef: RefObject<HTMLDivElement | null>,\n  modalRef: RefObject<HTMLDivElement | null>,\n  state: OverlayTriggerState,\n  isExiting: boolean\n}\n\n/**\n * A modal is an overlay element which blocks interaction with elements outside it.\n */\nconst _Modal = /*#__PURE__*/ (forwardRef as forwardRefType)(Modal);\nexport {_Modal as Modal};\n\nfunction ModalOverlayWithForwardRef(props: ModalOverlayProps, ref: ForwardedRef<HTMLDivElement>) {\n  [props, ref] = useContextProps(props, ref, ModalContext);\n  let contextState = useContext(OverlayTriggerStateContext);\n  let localState = useOverlayTriggerState(props);\n  let state = props.isOpen != null || props.defaultOpen != null || !contextState ? localState : contextState;\n\n  let objectRef = useObjectRef(ref);\n  let modalRef = useRef<HTMLDivElement>(null);\n  let isOverlayExiting = useExitAnimation(objectRef, state.isOpen);\n  let isModalExiting = useExitAnimation(modalRef, state.isOpen);\n  let isExiting = isOverlayExiting || isModalExiting || props.isExiting || false;\n  let isSSR = useIsSSR();\n\n  if ((!state.isOpen && !isExiting) || isSSR) {\n    return null;\n  }\n\n  return (\n    <ModalOverlayInner\n      {...props}\n      state={state}\n      isExiting={isExiting}\n      overlayRef={objectRef}\n      modalRef={modalRef} />\n  );\n}\n\n/**\n * A ModalOverlay is a wrapper for a Modal which allows customizing the backdrop element.\n */\nexport const ModalOverlay = /*#__PURE__*/ (forwardRef as forwardRefType)(ModalOverlayWithForwardRef);\n\nfunction ModalOverlayInner({UNSTABLE_portalContainer, ...props}: ModalOverlayInnerProps) {\n  let modalRef = props.modalRef;\n  let {state} = props;\n  let {modalProps, underlayProps} = useModalOverlay(props, state, modalRef);\n\n  let entering = useEnterAnimation(props.overlayRef) || props.isEntering || false;\n  let renderProps = useRenderProps({\n    ...props,\n    defaultClassName: 'react-aria-ModalOverlay',\n    values: {\n      isEntering: entering,\n      isExiting: props.isExiting,\n      state\n    }\n  });\n\n  let viewport = useViewportSize();\n  let style = {\n    ...renderProps.style,\n    '--visual-viewport-height': viewport.height + 'px'\n  };\n\n  return (\n    <Overlay isExiting={props.isExiting} portalContainer={UNSTABLE_portalContainer}>\n      <div\n        {...mergeProps(filterDOMProps(props as any), underlayProps)}\n        {...renderProps}\n        style={style}\n        ref={props.overlayRef}\n        data-entering={entering || undefined}\n        data-exiting={props.isExiting || undefined}>\n        <Provider\n          values={[\n            [InternalModalContext, {modalProps, modalRef, isExiting: props.isExiting, isDismissable: props.isDismissable}],\n            [OverlayTriggerStateContext, state]\n          ]}>\n          {renderProps.children}\n        </Provider>\n      </div>\n    </Overlay>\n  );\n}\n\ninterface ModalContentProps extends RenderProps<ModalRenderProps> {\n  modalRef: ForwardedRef<HTMLDivElement>\n}\n\nfunction ModalContent(props: ModalContentProps) {\n  let {modalProps, modalRef, isExiting, isDismissable} = useContext(InternalModalContext)!;\n  let state = useContext(OverlayTriggerStateContext)!;\n  let mergedRefs = useMemo(() => mergeRefs(props.modalRef, modalRef), [props.modalRef, modalRef]);\n\n  let ref = useObjectRef(mergedRefs);\n  let entering = useEnterAnimation(ref);\n  let renderProps = useRenderProps({\n    ...props,\n    defaultClassName: 'react-aria-Modal',\n    values: {\n      isEntering: entering,\n      isExiting,\n      state\n    }\n  });\n\n  return (\n    <div\n      {...mergeProps(filterDOMProps(props as any), modalProps)}\n      {...renderProps}\n      ref={ref}\n      data-entering={entering || undefined}\n      data-exiting={isExiting || undefined}>\n      {isDismissable &&\n        <DismissButton onDismiss={state.close} />\n      }\n      {renderProps.children}\n    </div>\n  );\n}\n"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;AA2CO,MAAMA,yCAAA,gBAAe,IAAAC,oBAAY,EAAmD;AAC3F,MAAMC,0CAAA,gBAAuB,IAAAD,oBAAY,EAAoC;AAmB7E,SAASE,4BAAMC,KAAwB,EAAEC,GAAiC;EACxE,IAAIC,GAAA,GAAM,IAAAC,iBAAS,EAAEL,0CAAA;EAErB,IAAII,GAAA,EACF,oBAAO,IAAAE,YAAA,EAAAC,aAAA,CAACC,kCAAA;IAAc,GAAGN,KAAK;IAAEO,QAAA,EAAUN;KAAMD,KAAA,CAAMQ,QAAQ;EAGhE,IAAI;IAAAC,aAAA,EACFA,aAAa;IAAAC,yBAAA,EACbA,yBAAyB;IAAAC,MAAA,EACzBA,MAAM;IAAAC,WAAA,EACNA,WAAW;IAAAC,YAAA,EACXA,YAAY;IAAAL,QAAA,EACZA,QAAQ;IAAAM,UAAA,EACRA,UAAU;IAAAC,SAAA,EACVA,SAAS;IAAAC,wBAAA,EACTA,wBAAwB;IAAAC,4BAAA,EACxBA,4BAA4B;IAC5B,GAAGC;EAAA,CACJ,GAAGlB,KAAA;EAEJ,oBACE,IAAAI,YAAA,EAAAC,aAAA,CAACc,yCAAA;IACCV,aAAA,EAAeA,aAAA;IACfC,yBAAA,EAA2BA,yBAAA;IAC3BC,MAAA,EAAQA,MAAA;IACRC,WAAA,EAAaA,WAAA;IACbC,YAAA,EAAcA,YAAA;IACdC,UAAA,EAAYA,UAAA;IACZC,SAAA,EAAWA,SAAA;IACXC,wBAAA,EAA0BA,wBAAA;IAC1BC,4BAAA,EAA8BA;kBAC9B,IAAAb,YAAA,EAAAC,aAAA,CAACC,kCAAA;IAAc,GAAGY,UAAU;IAAEX,QAAA,EAAUN;KACrCO,QAAA;AAIT;AASA;;;AAGA,MAAMY,yCAAA,GAAuB,aAAC,IAAAC,iBAAS,EAAqBtB,2BAAA;AAG5D,SAASuB,iDAA2BtB,KAAwB,EAAEC,GAAiC;EAC7F,CAACD,KAAA,EAAOC,GAAA,CAAI,GAAG,IAAAsB,yCAAc,EAAEvB,KAAA,EAAOC,GAAA,EAAKL,yCAAA;EAC3C,IAAI4B,YAAA,GAAe,IAAArB,iBAAS,GAAE,GAAAsB,wCAAyB;EACvD,IAAIC,UAAA,GAAa,IAAAC,6BAAqB,EAAE3B,KAAA;EACxC,IAAI4B,KAAA,GAAQ5B,KAAA,CAAMW,MAAM,IAAI,QAAQX,KAAA,CAAMY,WAAW,IAAI,QAAQ,CAACY,YAAA,GAAeE,UAAA,GAAaF,YAAA;EAE9F,IAAIK,SAAA,GAAY,IAAAC,mBAAW,EAAE7B,GAAA;EAC7B,IAAIM,QAAA,GAAW,IAAAwB,aAAK,EAAkB;EACtC,IAAIC,gBAAA,GAAmB,IAAAC,yCAAe,EAAEJ,SAAA,EAAWD,KAAA,CAAMjB,MAAM;EAC/D,IAAIuB,cAAA,GAAiB,IAAAD,yCAAe,EAAE1B,QAAA,EAAUqB,KAAA,CAAMjB,MAAM;EAC5D,IAAII,SAAA,GAAYiB,gBAAA,IAAoBE,cAAA,IAAkBlC,KAAA,CAAMe,SAAS,IAAI;EACzE,IAAIoB,KAAA,GAAQ,IAAAC,eAAO;EAEnB,IAAI,CAAER,KAAA,CAAMjB,MAAM,IAAI,CAACI,SAAA,IAAcoB,KAAA,EACnC,OAAO;EAGT,oBACE,IAAA/B,YAAA,EAAAC,aAAA,CAACgC,uCAAA;IACE,GAAGrC,KAAK;IACT4B,KAAA,EAAOA,KAAA;IACPb,SAAA,EAAWA,SAAA;IACXuB,UAAA,EAAYT,SAAA;IACZtB,QAAA,EAAUA;;AAEhB;AAKO,MAAMY,yCAAA,GAA6B,aAAC,IAAAE,iBAAS,EAAqBC,gDAAA;AAEzE,SAASe,wCAAkB;EAAArB,wBAAA,EAACA,wBAAwB;EAAE,GAAGhB;AAAA,CAA8B;EACrF,IAAIO,QAAA,GAAWP,KAAA,CAAMO,QAAQ;EAC7B,IAAI;IAAAqB,KAAA,EAACA;EAAK,CAAC,GAAG5B,KAAA;EACd,IAAI;IAAAuC,UAAA,EAACA,UAAU;IAAAC,aAAA,EAAEA;EAAa,CAAC,GAAG,IAAAC,sBAAc,EAAEzC,KAAA,EAAO4B,KAAA,EAAOrB,QAAA;EAEhE,IAAImC,QAAA,GAAW,IAAAC,yCAAgB,EAAE3C,KAAA,CAAMsC,UAAU,KAAKtC,KAAA,CAAMc,UAAU,IAAI;EAC1E,IAAI8B,WAAA,GAAc,IAAAC,uCAAa,EAAE;IAC/B,GAAG7C,KAAK;IACR8C,gBAAA,EAAkB;IAClBC,MAAA,EAAQ;MACNjC,UAAA,EAAY4B,QAAA;MACZ3B,SAAA,EAAWf,KAAA,CAAMe,SAAS;aAC1Ba;IACF;EACF;EAEA,IAAIoB,QAAA,GAAW,IAAAC,sBAAc;EAC7B,IAAIC,KAAA,GAAQ;IACV,GAAGN,WAAA,CAAYM,KAAK;IACpB,4BAA4BF,QAAA,CAASG,MAAM,GAAG;EAChD;EAEA,oBACE,IAAA/C,YAAA,EAAAC,aAAA,EAAC,GAAA+C,cAAM;IAAErC,SAAA,EAAWf,KAAA,CAAMe,SAAS;IAAEsC,eAAA,EAAiBrC;kBACpD,IAAAZ,YAAA,EAAAC,aAAA,CAAC;IACE,GAAG,IAAAiD,iBAAS,EAAE,IAAAC,qBAAa,EAAEvD,KAAA,GAAewC,aAAA,CAAc;IAC1D,GAAGI,WAAW;IACfM,KAAA,EAAOA,KAAA;IACPjD,GAAA,EAAKD,KAAA,CAAMsC,UAAU;IACrB,iBAAeI,QAAA,IAAYc,SAAA;IAC3B,gBAAcxD,KAAA,CAAMe,SAAS,IAAIyC;kBACjC,IAAApD,YAAA,EAAAC,aAAA,EAAC,GAAAoD,yCAAO;IACNV,MAAA,EAAQ,CACN,CAACjD,0CAAA,EAAsB;kBAACyC,UAAA;gBAAYhC,QAAA;MAAUQ,SAAA,EAAWf,KAAA,CAAMe,SAAS;MAAEN,aAAA,EAAeT,KAAA,CAAMS;IAAa,EAAE,EAC9G,EAAC,GAAAgB,wCAAyB,GAAGG,KAAA,CAAM;KAEpCgB,WAAA,CAAYpC,QAAQ;AAK/B;AAMA,SAASF,mCAAaN,KAAwB;EAC5C,IAAI;IAAAuC,UAAA,EAACA,UAAU;IAAAhC,QAAA,EAAEA,QAAQ;IAAAQ,SAAA,EAAEA,SAAS;IAAAN,aAAA,EAAEA;EAAa,CAAC,GAAG,IAAAN,iBAAS,EAAEL,0CAAA;EAClE,IAAI8B,KAAA,GAAQ,IAAAzB,iBAAS,GAAE,GAAAsB,wCAAyB;EAChD,IAAIiC,UAAA,GAAa,IAAAC,cAAM,EAAE,MAAM,IAAAC,gBAAQ,EAAE5D,KAAA,CAAMO,QAAQ,EAAEA,QAAA,GAAW,CAACP,KAAA,CAAMO,QAAQ,EAAEA,QAAA,CAAS;EAE9F,IAAIN,GAAA,GAAM,IAAA6B,mBAAW,EAAE4B,UAAA;EACvB,IAAIhB,QAAA,GAAW,IAAAC,yCAAgB,EAAE1C,GAAA;EACjC,IAAI2C,WAAA,GAAc,IAAAC,uCAAa,EAAE;IAC/B,GAAG7C,KAAK;IACR8C,gBAAA,EAAkB;IAClBC,MAAA,EAAQ;MACNjC,UAAA,EAAY4B,QAAA;iBACZ3B,SAAA;aACAa;IACF;EACF;EAEA,oBACE,IAAAxB,YAAA,EAAAC,aAAA,CAAC;IACE,GAAG,IAAAiD,iBAAS,EAAE,IAAAC,qBAAa,EAAEvD,KAAA,GAAeuC,UAAA,CAAW;IACvD,GAAGK,WAAW;IACf3C,GAAA,EAAKA,GAAA;IACL,iBAAeyC,QAAA,IAAYc,SAAA;IAC3B,gBAAczC,SAAA,IAAayC;KAC1B/C,aAAA,iBACC,IAAAL,YAAA,EAAAC,aAAA,EAAC,GAAAwD,oBAAY;IAAEC,SAAA,EAAWlC,KAAA,CAAMmC;MAEjCnB,WAAA,CAAYpC,QAAQ;AAG3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
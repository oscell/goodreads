{"ast":null,"code":"import { ColorThumb as $3a90e89d07d7bbd5$export$a3cc47cee1c1ccc } from \"./ColorThumb.mjs\";\nimport \"./vars.053845e3.css\";\nimport $4eSry$colorarea_vars_cssmodulejs from \"./colorarea_vars_css.mjs\";\nimport { useFocusableRef as $4eSry$useFocusableRef, dimensionValue as $4eSry$dimensionValue, useStyleProps as $4eSry$useStyleProps, classNames as $4eSry$classNames } from \"@react-spectrum/utils\";\nimport { useContextProps as $4eSry$useContextProps, ColorAreaContext as $4eSry$ColorAreaContext } from \"react-aria-components\";\nimport { mergeProps as $4eSry$mergeProps } from \"@react-aria/utils\";\nimport $4eSry$react, { useRef as $4eSry$useRef } from \"react\";\nimport { useColorArea as $4eSry$useColorArea } from \"@react-aria/color\";\nimport { useColorAreaState as $4eSry$useColorAreaState } from \"@react-stately/color\";\nimport { useFocusRing as $4eSry$useFocusRing } from \"@react-aria/focus\";\nimport { useProviderProps as $4eSry$useProviderProps } from \"@react-spectrum/provider\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $40046aa1a7ccb226$var$ColorArea(props, ref) {\n  props = (0, $4eSry$useProviderProps)(props);\n  let inputXRef = (0, $4eSry$useRef)(null);\n  let inputYRef = (0, $4eSry$useRef)(null);\n  let containerRef = (0, $4eSry$useFocusableRef)(ref, inputXRef);\n  [props, containerRef] = (0, $4eSry$useContextProps)(props, containerRef, (0, $4eSry$ColorAreaContext));\n  let {\n    isDisabled: isDisabled\n  } = props;\n  let size = props.size && (0, $4eSry$dimensionValue)(props.size);\n  let {\n    styleProps: styleProps\n  } = (0, $4eSry$useStyleProps)(props);\n  let state = (0, $4eSry$useColorAreaState)(props);\n  let {\n    colorAreaProps: colorAreaProps,\n    xInputProps: xInputProps,\n    yInputProps: yInputProps,\n    thumbProps: thumbProps\n  } = (0, $4eSry$useColorArea)({\n    ...props,\n    inputXRef: inputXRef,\n    inputYRef: inputYRef,\n    containerRef: containerRef\n  }, state);\n  let {\n    focusProps: focusProps,\n    isFocusVisible: isFocusVisible\n  } = (0, $4eSry$useFocusRing)();\n  return /*#__PURE__*/(0, $4eSry$react).createElement(\"div\", {\n    ...colorAreaProps,\n    className: (0, $4eSry$classNames)((0, $parcel$interopDefault($4eSry$colorarea_vars_cssmodulejs)), 'spectrum-ColorArea', {\n      'is-disabled': isDisabled\n    }, styleProps.className),\n    ref: containerRef,\n    style: {\n      ...(isDisabled ? {} : colorAreaProps.style),\n      ...styleProps.style,\n      // Workaround around https://github.com/adobe/spectrum-css/issues/1032\n      width: size,\n      height: size\n    }\n  }, /*#__PURE__*/(0, $4eSry$react).createElement((0, $3a90e89d07d7bbd5$export$a3cc47cee1c1ccc), {\n    value: state.getDisplayColor(),\n    isFocused: isFocusVisible,\n    isDisabled: isDisabled,\n    isDragging: state.isDragging,\n    containerRef: containerRef,\n    className: (0, $4eSry$classNames)((0, $parcel$interopDefault($4eSry$colorarea_vars_cssmodulejs)), 'spectrum-ColorArea-handle'),\n    ...thumbProps\n  }, /*#__PURE__*/(0, $4eSry$react).createElement(\"div\", {\n    role: \"presentation\"\n  }, /*#__PURE__*/(0, $4eSry$react).createElement(\"input\", {\n    className: (0, $4eSry$classNames)((0, $parcel$interopDefault($4eSry$colorarea_vars_cssmodulejs)), 'spectrum-ColorArea-slider'),\n    ...(0, $4eSry$mergeProps)(xInputProps, focusProps),\n    ref: inputXRef\n  }), /*#__PURE__*/(0, $4eSry$react).createElement(\"input\", {\n    className: (0, $4eSry$classNames)((0, $parcel$interopDefault($4eSry$colorarea_vars_cssmodulejs)), 'spectrum-ColorArea-slider'),\n    ...(0, $4eSry$mergeProps)(yInputProps, focusProps),\n    ref: inputYRef\n  }))));\n}\n/**\n * ColorArea allows users to adjust two channels of an RGB, HSL or HSB color value against a two-dimensional gradient background.\n */\nlet $40046aa1a7ccb226$export$b2103f68a961418e = /*#__PURE__*/(0, $4eSry$react).forwardRef($40046aa1a7ccb226$var$ColorArea);\nexport { $40046aa1a7ccb226$export$b2103f68a961418e as ColorArea };","map":{"version":3,"names":["$40046aa1a7ccb226$var$ColorArea","props","ref","$4eSry$useProviderProps","inputXRef","$4eSry$useRef","inputYRef","containerRef","$4eSry$useFocusableRef","$4eSry$useContextProps","$4eSry$ColorAreaContext","isDisabled","size","$4eSry$dimensionValue","styleProps","$4eSry$useStyleProps","state","$4eSry$useColorAreaState","colorAreaProps","xInputProps","yInputProps","thumbProps","$4eSry$useColorArea","focusProps","isFocusVisible","$4eSry$useFocusRing","$4eSry$react","createElement","className","$4eSry$classNames","$parcel$interopDefault","$4eSry$colorarea_vars_cssmodulejs","style","width","height","$3a90e89d07d7bbd5$export$a3cc47cee1c1ccc","value","getDisplayColor","isFocused","isDragging","role","$4eSry$mergeProps","$40046aa1a7ccb226$export$b2103f68a961418e","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-spectrum/color/dist/packages/@react-spectrum/color/src/ColorArea.tsx"],"sourcesContent":["/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, dimensionValue, useFocusableRef, useStyleProps} from '@react-spectrum/utils';\nimport {ColorAreaContext, useContextProps} from 'react-aria-components';\nimport {ColorThumb} from './ColorThumb';\nimport {FocusableRef} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {ReactElement, useRef} from 'react';\nimport {SpectrumColorAreaProps} from '@react-types/color';\nimport styles from '@adobe/spectrum-css-temp/components/colorarea/vars.css';\nimport {useColorArea} from '@react-aria/color';\nimport {useColorAreaState} from '@react-stately/color';\nimport {useFocusRing} from '@react-aria/focus';\nimport {useProviderProps} from '@react-spectrum/provider';\n\nfunction ColorArea(props: SpectrumColorAreaProps, ref: FocusableRef<HTMLDivElement>) {\n  props = useProviderProps(props);\n  let inputXRef = useRef(null);\n  let inputYRef = useRef(null);\n  let containerRef = useFocusableRef(ref, inputXRef);\n  [props, containerRef] = useContextProps(props, containerRef, ColorAreaContext);\n\n  let {isDisabled} = props;\n  let size = props.size && dimensionValue(props.size);\n  let {styleProps} = useStyleProps(props);\n\n\n  let state = useColorAreaState(props);\n\n  let {\n    colorAreaProps,\n    xInputProps,\n    yInputProps,\n    thumbProps\n  } = useColorArea({...props, inputXRef, inputYRef, containerRef}, state);\n  let {focusProps, isFocusVisible} = useFocusRing();\n\n  return (\n    <div\n      {...colorAreaProps}\n      className={\n        classNames(\n          styles,\n          'spectrum-ColorArea',\n          {\n            'is-disabled': isDisabled\n          },\n          styleProps.className\n        )\n      }\n      ref={containerRef}\n      style={{\n        ...(isDisabled ? {} : colorAreaProps.style),\n        ...styleProps.style,\n        // Workaround around https://github.com/adobe/spectrum-css/issues/1032\n        width: size,\n        height: size\n      }}>\n      <ColorThumb\n        value={state.getDisplayColor()}\n        isFocused={isFocusVisible}\n        isDisabled={isDisabled}\n        isDragging={state.isDragging}\n        containerRef={containerRef}\n        className={classNames(styles, 'spectrum-ColorArea-handle')}\n        {...thumbProps}>\n        <div role=\"presentation\">\n          <input className={classNames(styles, 'spectrum-ColorArea-slider')} {...mergeProps(xInputProps, focusProps)} ref={inputXRef} />\n          <input className={classNames(styles, 'spectrum-ColorArea-slider')} {...mergeProps(yInputProps, focusProps)} ref={inputYRef} />\n        </div>\n      </ColorThumb>\n    </div>\n  );\n}\n\n/**\n * ColorArea allows users to adjust two channels of an RGB, HSL or HSB color value against a two-dimensional gradient background.\n */\nlet _ColorArea = React.forwardRef(ColorArea) as (props: SpectrumColorAreaProps & {ref?: FocusableRef<HTMLDivElement>}) => ReactElement;\nexport {_ColorArea as ColorArea};\n"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;;;;;;;AAyBA,SAASA,gCAAUC,KAA6B,EAAEC,GAAiC;EACjFD,KAAA,GAAQ,IAAAE,uBAAe,EAAEF,KAAA;EACzB,IAAIG,SAAA,GAAY,IAAAC,aAAK,EAAE;EACvB,IAAIC,SAAA,GAAY,IAAAD,aAAK,EAAE;EACvB,IAAIE,YAAA,GAAe,IAAAC,sBAAc,EAAEN,GAAA,EAAKE,SAAA;EACxC,CAACH,KAAA,EAAOM,YAAA,CAAa,GAAG,IAAAE,sBAAc,EAAER,KAAA,EAAOM,YAAA,GAAc,GAAAG,uBAAe;EAE5E,IAAI;IAAAC,UAAA,EAACA;EAAU,CAAC,GAAGV,KAAA;EACnB,IAAIW,IAAA,GAAOX,KAAA,CAAMW,IAAI,IAAI,IAAAC,qBAAa,EAAEZ,KAAA,CAAMW,IAAI;EAClD,IAAI;IAAAE,UAAA,EAACA;EAAU,CAAC,GAAG,IAAAC,oBAAY,EAAEd,KAAA;EAGjC,IAAIe,KAAA,GAAQ,IAAAC,wBAAgB,EAAEhB,KAAA;EAE9B,IAAI;IAAAiB,cAAA,EACFA,cAAc;IAAAC,WAAA,EACdA,WAAW;IAAAC,WAAA,EACXA,WAAW;IAAAC,UAAA,EACXA;EAAU,CACX,GAAG,IAAAC,mBAAW,EAAE;IAAC,GAAGrB,KAAK;eAAEG,SAAA;eAAWE,SAAA;kBAAWC;EAAY,GAAGS,KAAA;EACjE,IAAI;IAAAO,UAAA,EAACA,UAAU;IAAAC,cAAA,EAAEA;EAAc,CAAC,GAAG,IAAAC,mBAAW;EAE9C,oBACE,IAAAC,YAAA,EAAAC,aAAA,CAAC;IACE,GAAGT,cAAc;IAClBU,SAAA,EACE,IAAAC,iBAAS,GACP,GAAAC,sBAAA,CAAAC,iCAAA,CAAK,GACL,sBACA;MACE,eAAepB;IACjB,GACAG,UAAA,CAAWc,SAAS;IAGxB1B,GAAA,EAAKK,YAAA;IACLyB,KAAA,EAAO;MACL,IAAIrB,UAAA,GAAa,CAAC,IAAIO,cAAA,CAAec,KAAK;MAC1C,GAAGlB,UAAA,CAAWkB,KAAK;MACnB;MACAC,KAAA,EAAOrB,IAAA;MACPsB,MAAA,EAAQtB;IACV;kBACA,IAAAc,YAAA,EAAAC,aAAA,EAAC,GAAAQ,wCAAS;IACRC,KAAA,EAAOpB,KAAA,CAAMqB,eAAe;IAC5BC,SAAA,EAAWd,cAAA;IACXb,UAAA,EAAYA,UAAA;IACZ4B,UAAA,EAAYvB,KAAA,CAAMuB,UAAU;IAC5BhC,YAAA,EAAcA,YAAA;IACdqB,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,iCAAA,CAAK,GAAG;IAC7B,GAAGV;kBACJ,IAAAK,YAAA,EAAAC,aAAA,CAAC;IAAIa,IAAA,EAAK;kBACR,IAAAd,YAAA,EAAAC,aAAA,CAAC;IAAMC,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,iCAAA,CAAK,GAAG;IAA+B,GAAG,IAAAU,iBAAS,EAAEtB,WAAA,EAAaI,UAAA,CAAW;IAAErB,GAAA,EAAKE;mBACjH,IAAAsB,YAAA,EAAAC,aAAA,CAAC;IAAMC,SAAA,EAAW,IAAAC,iBAAS,GAAE,GAAAC,sBAAA,CAAAC,iCAAA,CAAK,GAAG;IAA+B,GAAG,IAAAU,iBAAS,EAAErB,WAAA,EAAaG,UAAA,CAAW;IAAErB,GAAA,EAAKI;;AAK3H;AAEA;;;AAGA,IAAIoC,yCAAA,gBAAa,IAAAhB,YAAI,EAAEiB,UAAU,CAAC3C,+BAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"./styles.4bf108e6.css\";\nimport $fVzF9$styles_cssmodulejs from \"./styles_css.mjs\";\nimport \"./vars.61240e3b.css\";\nimport $fVzF9$textfield_vars_cssmodulejs from \"./textfield_vars_css.mjs\";\nimport $fVzF9$spectrumiconsuiAlertMedium from \"@spectrum-icons/ui/AlertMedium\";\nimport $fVzF9$spectrumiconsuiCheckmarkMedium from \"@spectrum-icons/ui/CheckmarkMedium\";\nimport { useValueEffect as $fVzF9$useValueEffect, classNames as $fVzF9$classNames } from \"@react-spectrum/utils\";\nimport { useLayoutEffect as $fVzF9$useLayoutEffect, useResizeObserver as $fVzF9$useResizeObserver, useEvent as $fVzF9$useEvent, mergeProps as $fVzF9$mergeProps, mergeRefs as $fVzF9$mergeRefs } from \"@react-aria/utils\";\nimport $fVzF9$react, { useRef as $fVzF9$useRef, useCallback as $fVzF9$useCallback } from \"react\";\nimport { useFocusRing as $fVzF9$useFocusRing } from \"@react-aria/focus\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $79348162c55d687f$var$Input(props, ref) {\n  let inputRef = (0, $fVzF9$useRef)(null);\n  let {\n    isDisabled: isDisabled,\n    isQuiet: isQuiet,\n    inputClassName: inputClassName,\n    validationState: validationState,\n    children: children,\n    fieldProps: fieldProps,\n    className: className,\n    style: style,\n    disableFocusRing: disableFocusRing\n  } = props;\n  // Reserve padding for the error icon when the width of the input is unconstrained.\n  // When constrained, don't reserve space because adding it only when invalid will\n  // not cause a layout shift.\n  let [reservePadding, setReservePadding] = (0, $fVzF9$useValueEffect)(false);\n  let onResize = (0, $fVzF9$useCallback)(() => setReservePadding(function* (reservePadding) {\n    if (inputRef.current) {\n      if (reservePadding)\n        // Try to collapse padding if the content is clipped.\n        {\n          if (inputRef.current.scrollWidth > inputRef.current.offsetWidth) {\n            let width = inputRef.current.parentElement.offsetWidth;\n            yield false;\n            // If removing padding causes a layout shift, add it back.\n            if (inputRef.current.parentElement.offsetWidth !== width) yield true;\n          }\n        } else\n        // Try to add padding if the content is not clipped.\n        if (inputRef.current.offsetWidth >= inputRef.current.scrollWidth) {\n          let width = inputRef.current.parentElement.offsetWidth;\n          yield true;\n          // If adding padding does not change the width (i.e. width is constrained), remove it again.\n          if (inputRef.current.parentElement.offsetWidth === width) yield false;\n        }\n    }\n  }), [inputRef, setReservePadding]);\n  (0, $fVzF9$useLayoutEffect)(onResize, [onResize]);\n  (0, $fVzF9$useResizeObserver)({\n    ref: inputRef,\n    onResize: onResize\n  });\n  // We also need to listen for resize events of the window so we can detect\n  // when there is enough space for the padding to be re-added. Ideally we'd\n  // use a resize observer on a parent element, but it's hard to know _what_\n  // parent element.\n  (0, $fVzF9$useEvent)((0, $fVzF9$useRef)(typeof window !== 'undefined' ? window : null), 'resize', onResize);\n  let {\n    focusProps: focusProps,\n    isFocusVisible: isFocusVisible,\n    isFocused: isFocused\n  } = (0, $fVzF9$useFocusRing)({\n    isTextInput: true,\n    within: true\n  });\n  let isInvalid = validationState === 'invalid' && !isDisabled;\n  let textfieldClass = (0, $fVzF9$classNames)((0, $parcel$interopDefault($fVzF9$textfield_vars_cssmodulejs)), 'spectrum-Textfield', {\n    'spectrum-Textfield--invalid': isInvalid,\n    'spectrum-Textfield--valid': validationState === 'valid' && !isDisabled,\n    'spectrum-Textfield--quiet': isQuiet,\n    'focus-ring': isFocusVisible && !disableFocusRing\n  }, (0, $fVzF9$classNames)((0, $parcel$interopDefault($fVzF9$styles_cssmodulejs)), 'react-spectrum-Datepicker-field'), className);\n  let inputClass = (0, $fVzF9$classNames)((0, $parcel$interopDefault($fVzF9$textfield_vars_cssmodulejs)), 'spectrum-Textfield-input', {\n    'is-disabled': isDisabled,\n    'is-focused': isFocused\n  }, (0, $fVzF9$classNames)((0, $parcel$interopDefault($fVzF9$styles_cssmodulejs)), 'react-spectrum-DateField-Input'), reservePadding && (0, $fVzF9$classNames)((0, $parcel$interopDefault($fVzF9$styles_cssmodulejs)), 'react-spectrum-Datepicker-input'), inputClassName);\n  let iconClass = (0, $fVzF9$classNames)((0, $parcel$interopDefault($fVzF9$textfield_vars_cssmodulejs)), 'spectrum-Textfield-validationIcon');\n  let validationIcon = null;\n  if (validationState === 'invalid' && !isDisabled) validationIcon = /*#__PURE__*/(0, $fVzF9$react).createElement((0, $fVzF9$spectrumiconsuiAlertMedium), {\n    \"data-testid\": \"invalid-icon\",\n    UNSAFE_className: iconClass\n  });else if (validationState === 'valid' && !isDisabled) validationIcon = /*#__PURE__*/(0, $fVzF9$react).createElement((0, $fVzF9$spectrumiconsuiCheckmarkMedium), {\n    \"data-testid\": \"valid-icon\",\n    UNSAFE_className: iconClass\n  });\n  return /*#__PURE__*/(0, $fVzF9$react).createElement(\"div\", {\n    role: \"presentation\",\n    ...(0, $fVzF9$mergeProps)(fieldProps, focusProps),\n    className: textfieldClass,\n    style: style\n  }, /*#__PURE__*/(0, $fVzF9$react).createElement(\"div\", {\n    role: \"presentation\",\n    className: inputClass\n  }, /*#__PURE__*/(0, $fVzF9$react).createElement(\"div\", {\n    role: \"presentation\",\n    className: (0, $fVzF9$classNames)((0, $parcel$interopDefault($fVzF9$styles_cssmodulejs)), 'react-spectrum-Datepicker-inputContents'),\n    ref: (0, $fVzF9$mergeRefs)(ref, inputRef)\n  }, /*#__PURE__*/(0, $fVzF9$react).createElement(\"div\", {\n    role: \"presentation\",\n    className: (0, $fVzF9$classNames)((0, $parcel$interopDefault($fVzF9$styles_cssmodulejs)), 'react-spectrum-Datepicker-inputSized'),\n    style: {\n      minWidth: props.minWidth\n    }\n  }, children))), validationIcon);\n}\nconst $79348162c55d687f$export$f5b8910cec6cf069 = /*#__PURE__*/(0, $fVzF9$react).forwardRef($79348162c55d687f$var$Input);\nexport { $79348162c55d687f$export$f5b8910cec6cf069 as Input };","map":{"version":3,"names":["$79348162c55d687f$var$Input","props","ref","inputRef","$fVzF9$useRef","isDisabled","isQuiet","inputClassName","validationState","children","fieldProps","className","style","disableFocusRing","reservePadding","setReservePadding","$fVzF9$useValueEffect","onResize","$fVzF9$useCallback","current","scrollWidth","offsetWidth","width","parentElement","$fVzF9$useLayoutEffect","$fVzF9$useResizeObserver","$fVzF9$useEvent","window","focusProps","isFocusVisible","isFocused","$fVzF9$useFocusRing","isTextInput","within","isInvalid","textfieldClass","$fVzF9$classNames","$parcel$interopDefault","$fVzF9$textfield_vars_cssmodulejs","$fVzF9$styles_cssmodulejs","inputClass","iconClass","validationIcon","$fVzF9$react","createElement","$fVzF9$spectrumiconsuiAlertMedium","UNSAFE_className","$fVzF9$spectrumiconsuiCheckmarkMedium","role","$fVzF9$mergeProps","$fVzF9$mergeRefs","minWidth","$79348162c55d687f$export$f5b8910cec6cf069","forwardRef"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-spectrum/datepicker/dist/packages/@react-spectrum/datepicker/src/Input.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport Alert from '@spectrum-icons/ui/AlertMedium';\nimport Checkmark from '@spectrum-icons/ui/CheckmarkMedium';\nimport {classNames, useValueEffect} from '@react-spectrum/utils';\nimport datepickerStyles from './styles.css';\nimport {mergeProps, mergeRefs, useEvent, useLayoutEffect, useResizeObserver} from '@react-aria/utils';\nimport React, {useCallback, useRef} from 'react';\nimport textfieldStyles from '@adobe/spectrum-css-temp/components/textfield/vars.css';\nimport {useFocusRing} from '@react-aria/focus';\n\nfunction Input(props, ref) {\n  let inputRef = useRef(null);\n  let {\n    isDisabled,\n    isQuiet,\n    inputClassName,\n    validationState,\n    children,\n    fieldProps,\n    className,\n    style,\n    disableFocusRing\n  } = props;\n\n  // Reserve padding for the error icon when the width of the input is unconstrained.\n  // When constrained, don't reserve space because adding it only when invalid will\n  // not cause a layout shift.\n  let [reservePadding, setReservePadding] = useValueEffect(false);\n  let onResize = useCallback(() => setReservePadding(function *(reservePadding) {\n    if (inputRef.current) {\n      if (reservePadding) {\n        // Try to collapse padding if the content is clipped.\n        if (inputRef.current.scrollWidth > inputRef.current.offsetWidth) {\n          let width = inputRef.current.parentElement.offsetWidth;\n          yield false;\n\n          // If removing padding causes a layout shift, add it back.\n          if (inputRef.current.parentElement.offsetWidth !== width) {\n            yield true;\n          }\n        }\n      } else {\n        // Try to add padding if the content is not clipped.\n        if (inputRef.current.offsetWidth >= inputRef.current.scrollWidth) {\n          let width = inputRef.current.parentElement.offsetWidth;\n          yield true;\n\n          // If adding padding does not change the width (i.e. width is constrained), remove it again.\n          if (inputRef.current.parentElement.offsetWidth === width) {\n            yield false;\n          }\n        }\n      }\n    }\n\n  }), [inputRef, setReservePadding]);\n\n  useLayoutEffect(onResize, [onResize]);\n  useResizeObserver({\n    ref: inputRef,\n    onResize\n  });\n\n  // We also need to listen for resize events of the window so we can detect\n  // when there is enough space for the padding to be re-added. Ideally we'd\n  // use a resize observer on a parent element, but it's hard to know _what_\n  // parent element.\n  useEvent(useRef(typeof window !== 'undefined' ? window : null), 'resize', onResize);\n\n  let {focusProps, isFocusVisible, isFocused} = useFocusRing({\n    isTextInput: true,\n    within: true\n  });\n\n  let isInvalid = validationState === 'invalid' && !isDisabled;\n  let textfieldClass = classNames(\n    textfieldStyles,\n    'spectrum-Textfield',\n    {\n      'spectrum-Textfield--invalid': isInvalid,\n      'spectrum-Textfield--valid': validationState === 'valid' && !isDisabled,\n      'spectrum-Textfield--quiet': isQuiet,\n      'focus-ring': isFocusVisible && !disableFocusRing\n    },\n    classNames(datepickerStyles, 'react-spectrum-Datepicker-field'),\n    className\n  );\n\n  let inputClass = classNames(\n    textfieldStyles,\n    'spectrum-Textfield-input',\n    {\n      'is-disabled': isDisabled,\n      'is-focused': isFocused\n    },\n    classNames(datepickerStyles, 'react-spectrum-DateField-Input'),\n    reservePadding && classNames(datepickerStyles, 'react-spectrum-Datepicker-input'),\n    inputClassName\n  );\n\n  let iconClass = classNames(\n    textfieldStyles,\n    'spectrum-Textfield-validationIcon'\n  );\n\n  let validationIcon = null;\n  if (validationState === 'invalid' && !isDisabled) {\n    validationIcon = <Alert data-testid=\"invalid-icon\" UNSAFE_className={iconClass} />;\n  } else if (validationState === 'valid' && !isDisabled) {\n    validationIcon = <Checkmark data-testid=\"valid-icon\" UNSAFE_className={iconClass} />;\n  }\n\n  return (\n    <div role=\"presentation\" {...mergeProps(fieldProps, focusProps)} className={textfieldClass} style={style}>\n      <div role=\"presentation\" className={inputClass}>\n        <div\n          role=\"presentation\"\n          className={classNames(datepickerStyles, 'react-spectrum-Datepicker-inputContents')}\n          ref={mergeRefs(ref, inputRef)}>\n          <div\n            role=\"presentation\"\n            className={classNames(datepickerStyles, 'react-spectrum-Datepicker-inputSized')}\n            style={{minWidth: props.minWidth}}>\n            {children}\n          </div>\n        </div>\n      </div>\n      {validationIcon}\n    </div>\n  );\n}\n\nconst _Input = React.forwardRef(Input);\nexport {_Input as Input};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
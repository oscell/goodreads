{"ast":null,"code":"import { CalendarMonth as $faa2f3867773cfe5$export$26e2752316b9a375 } from \"./CalendarMonth.mjs\";\nimport $bF3AV$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport \"./vars.83159c34.css\";\nimport $bF3AV$calendar_vars_cssmodulejs from \"./calendar_vars_css.mjs\";\nimport { ActionButton as $bF3AV$ActionButton } from \"@react-spectrum/button\";\nimport $bF3AV$spectrumiconsuiChevronLeftLarge from \"@spectrum-icons/ui/ChevronLeftLarge\";\nimport $bF3AV$spectrumiconsuiChevronRightLarge from \"@spectrum-icons/ui/ChevronRightLarge\";\nimport { useStyleProps as $bF3AV$useStyleProps, classNames as $bF3AV$classNames } from \"@react-spectrum/utils\";\nimport { HelpText as $bF3AV$HelpText } from \"@react-spectrum/label\";\nimport $bF3AV$react from \"react\";\nimport { useLocalizedStringFormatter as $bF3AV$useLocalizedStringFormatter, useLocale as $bF3AV$useLocale, useDateFormatter as $bF3AV$useDateFormatter } from \"@react-aria/i18n\";\nimport { VisuallyHidden as $bF3AV$VisuallyHidden } from \"@react-aria/visually-hidden\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $62cd1e80f0dffb66$export$bfd52a43017368fe(props) {\n  let {\n    state: state,\n    calendarProps: calendarProps,\n    nextButtonProps: nextButtonProps,\n    prevButtonProps: prevButtonProps,\n    errorMessageProps: errorMessageProps,\n    calendarRef: ref,\n    visibleMonths = 1\n  } = props;\n  let {\n    styleProps: styleProps\n  } = (0, $bF3AV$useStyleProps)(props);\n  let stringFormatter = (0, $bF3AV$useLocalizedStringFormatter)((0, $parcel$interopDefault($bF3AV$intlStringsmodulejs)), '@react-spectrum/calendar');\n  let {\n    direction: direction\n  } = (0, $bF3AV$useLocale)();\n  let currentMonth = state.visibleRange.start;\n  let monthDateFormatter = (0, $bF3AV$useDateFormatter)({\n    month: 'long',\n    year: 'numeric',\n    era: currentMonth.calendar.identifier === 'gregory' && currentMonth.era === 'BC' ? 'short' : undefined,\n    calendar: currentMonth.calendar.identifier,\n    timeZone: state.timeZone\n  });\n  let titles = [];\n  let calendars = [];\n  for (let i = 0; i < visibleMonths; i++) {\n    let d = currentMonth.add({\n      months: i\n    });\n    titles.push(/*#__PURE__*/(0, $bF3AV$react).createElement(\"div\", {\n      key: i,\n      className: (0, $bF3AV$classNames)((0, $parcel$interopDefault($bF3AV$calendar_vars_cssmodulejs)), 'spectrum-Calendar-monthHeader')\n    }, i === 0 && /*#__PURE__*/(0, $bF3AV$react).createElement((0, $bF3AV$ActionButton), {\n      ...prevButtonProps,\n      UNSAFE_className: (0, $bF3AV$classNames)((0, $parcel$interopDefault($bF3AV$calendar_vars_cssmodulejs)), 'spectrum-Calendar-prevMonth'),\n      isQuiet: true\n    }, direction === 'rtl' ? /*#__PURE__*/(0, $bF3AV$react).createElement((0, $bF3AV$spectrumiconsuiChevronRightLarge), null) : /*#__PURE__*/(0, $bF3AV$react).createElement((0, $bF3AV$spectrumiconsuiChevronLeftLarge), null)), /*#__PURE__*/(0, $bF3AV$react).createElement(\"h2\", {\n      // We have a visually hidden heading describing the entire visible range,\n      // and the calendar itself describes the individual month\n      // so we don't need to repeat that here for screen reader users.\n      \"aria-hidden\": true,\n      className: (0, $bF3AV$classNames)((0, $parcel$interopDefault($bF3AV$calendar_vars_cssmodulejs)), 'spectrum-Calendar-title')\n    }, monthDateFormatter.format(d.toDate(state.timeZone))), i === visibleMonths - 1 && /*#__PURE__*/(0, $bF3AV$react).createElement((0, $bF3AV$ActionButton), {\n      ...nextButtonProps,\n      UNSAFE_className: (0, $bF3AV$classNames)((0, $parcel$interopDefault($bF3AV$calendar_vars_cssmodulejs)), 'spectrum-Calendar-nextMonth'),\n      isQuiet: true\n    }, direction === 'rtl' ? /*#__PURE__*/(0, $bF3AV$react).createElement((0, $bF3AV$spectrumiconsuiChevronLeftLarge), null) : /*#__PURE__*/(0, $bF3AV$react).createElement((0, $bF3AV$spectrumiconsuiChevronRightLarge), null))));\n    calendars.push(/*#__PURE__*/(0, $bF3AV$react).createElement((0, $faa2f3867773cfe5$export$26e2752316b9a375), {\n      ...props,\n      key: i,\n      state: state,\n      startDate: d\n    }));\n  }\n  return /*#__PURE__*/(0, $bF3AV$react).createElement(\"div\", {\n    ...styleProps,\n    ...calendarProps,\n    ref: ref,\n    className: (0, $bF3AV$classNames)((0, $parcel$interopDefault($bF3AV$calendar_vars_cssmodulejs)), 'spectrum-Calendar', styleProps.className)\n  }, /*#__PURE__*/(0, $bF3AV$react).createElement((0, $bF3AV$VisuallyHidden), null, /*#__PURE__*/(0, $bF3AV$react).createElement(\"h2\", null, calendarProps['aria-label'])), /*#__PURE__*/(0, $bF3AV$react).createElement(\"div\", {\n    className: (0, $bF3AV$classNames)((0, $parcel$interopDefault($bF3AV$calendar_vars_cssmodulejs)), 'spectrum-Calendar-header')\n  }, titles), /*#__PURE__*/(0, $bF3AV$react).createElement(\"div\", {\n    className: (0, $bF3AV$classNames)((0, $parcel$interopDefault($bF3AV$calendar_vars_cssmodulejs)), 'spectrum-Calendar-months')\n  }, calendars), /*#__PURE__*/(0, $bF3AV$react).createElement((0, $bF3AV$VisuallyHidden), null, /*#__PURE__*/(0, $bF3AV$react).createElement(\"button\", {\n    \"aria-label\": nextButtonProps['aria-label'],\n    disabled: nextButtonProps.isDisabled,\n    onClick: () => state.focusNextPage(),\n    tabIndex: -1\n  })), state.isValueInvalid && /*#__PURE__*/(0, $bF3AV$react).createElement((0, $bF3AV$HelpText), {\n    showErrorIcon: true,\n    errorMessage: props.errorMessage || stringFormatter.format('invalidSelection', {\n      selectedCount: 'highlightedRange' in state ? 2 : 1\n    }),\n    errorMessageProps: errorMessageProps,\n    isInvalid: true,\n    // Intentionally a global class name so it can be targeted in DatePicker CSS...\n    UNSAFE_className: \"spectrum-Calendar-helpText\"\n  }));\n}\nexport { $62cd1e80f0dffb66$export$bfd52a43017368fe as CalendarBase };","map":{"version":3,"names":["$62cd1e80f0dffb66$export$bfd52a43017368fe","props","state","calendarProps","nextButtonProps","prevButtonProps","errorMessageProps","calendarRef","ref","visibleMonths","styleProps","$bF3AV$useStyleProps","stringFormatter","$bF3AV$useLocalizedStringFormatter","$parcel$interopDefault","$bF3AV$intlStringsmodulejs","direction","$bF3AV$useLocale","currentMonth","visibleRange","start","monthDateFormatter","$bF3AV$useDateFormatter","month","year","era","calendar","identifier","undefined","timeZone","titles","calendars","i","d","add","months","push","$bF3AV$react","createElement","key","className","$bF3AV$classNames","$bF3AV$calendar_vars_cssmodulejs","$bF3AV$ActionButton","UNSAFE_className","isQuiet","$bF3AV$spectrumiconsuiChevronRightLarge","$bF3AV$spectrumiconsuiChevronLeftLarge","format","toDate","$faa2f3867773cfe5$export$26e2752316b9a375","startDate","$bF3AV$VisuallyHidden","disabled","isDisabled","onClick","focusNextPage","tabIndex","isValueInvalid","$bF3AV$HelpText","showErrorIcon","errorMessage","selectedCount","isInvalid"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-spectrum/calendar/dist/packages/@react-spectrum/calendar/src/CalendarBase.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ActionButton} from '@react-spectrum/button';\nimport {AriaButtonProps} from '@react-types/button';\nimport {CalendarMonth} from './CalendarMonth';\nimport {CalendarPropsBase} from '@react-types/calendar';\nimport {CalendarState, RangeCalendarState} from '@react-stately/calendar';\nimport ChevronLeft from '@spectrum-icons/ui/ChevronLeftLarge';\nimport ChevronRight from '@spectrum-icons/ui/ChevronRightLarge';\nimport {classNames, useStyleProps} from '@react-spectrum/utils';\nimport {DOMProps, RefObject, StyleProps} from '@react-types/shared';\nimport {HelpText} from '@react-spectrum/label';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport React, {HTMLAttributes, JSX} from 'react';\nimport styles from '@adobe/spectrum-css-temp/components/calendar/vars.css';\nimport {useDateFormatter, useLocale, useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {VisuallyHidden} from '@react-aria/visually-hidden';\n\ninterface CalendarBaseProps<T extends CalendarState | RangeCalendarState> extends CalendarPropsBase, DOMProps, StyleProps {\n  state: T,\n  visibleMonths?: number,\n  calendarProps: HTMLAttributes<HTMLElement>,\n  nextButtonProps: AriaButtonProps,\n  prevButtonProps: AriaButtonProps,\n  errorMessageProps: HTMLAttributes<HTMLElement>,\n  calendarRef: RefObject<HTMLDivElement | null>\n}\n\nexport function CalendarBase<T extends CalendarState | RangeCalendarState>(props: CalendarBaseProps<T>) {\n  let {\n    state,\n    calendarProps,\n    nextButtonProps,\n    prevButtonProps,\n    errorMessageProps,\n    calendarRef: ref,\n    visibleMonths = 1\n  } = props;\n  let {styleProps} = useStyleProps(props);\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-spectrum/calendar');\n  let {direction} = useLocale();\n  let currentMonth = state.visibleRange.start;\n  let monthDateFormatter = useDateFormatter({\n    month: 'long',\n    year: 'numeric',\n    era: currentMonth.calendar.identifier === 'gregory' && currentMonth.era === 'BC' ? 'short' : undefined,\n    calendar: currentMonth.calendar.identifier,\n    timeZone: state.timeZone\n  });\n\n  let titles: JSX.Element[] = [];\n  let calendars: JSX.Element[] = [];\n  for (let i = 0; i < visibleMonths; i++) {\n    let d = currentMonth.add({months: i});\n    titles.push(\n      <div key={i} className={classNames(styles, 'spectrum-Calendar-monthHeader')}>\n        {i === 0 &&\n          <ActionButton\n            {...prevButtonProps}\n            UNSAFE_className={classNames(styles, 'spectrum-Calendar-prevMonth')}\n            isQuiet>\n            {direction === 'rtl' ? <ChevronRight /> : <ChevronLeft />}\n          </ActionButton>\n        }\n        <h2\n          // We have a visually hidden heading describing the entire visible range,\n          // and the calendar itself describes the individual month\n          // so we don't need to repeat that here for screen reader users.\n          aria-hidden\n          className={classNames(styles, 'spectrum-Calendar-title')}>\n          {monthDateFormatter.format(d.toDate(state.timeZone))}\n        </h2>\n        {i === visibleMonths - 1 &&\n          <ActionButton\n            {...nextButtonProps}\n            UNSAFE_className={classNames(styles, 'spectrum-Calendar-nextMonth')}\n            isQuiet>\n            {direction === 'rtl' ? <ChevronLeft /> : <ChevronRight />}\n          </ActionButton>\n        }\n      </div>\n    );\n\n    calendars.push(\n      <CalendarMonth\n        {...props}\n        key={i}\n        state={state}\n        startDate={d} />\n    );\n  }\n\n  return (\n    <div\n      {...styleProps}\n      {...calendarProps}\n      ref={ref}\n      className={\n        classNames(styles,\n          'spectrum-Calendar',\n          styleProps.className\n        )\n      }>\n      {/* Add a screen reader only description of the entire visible range rather than\n        * a separate heading above each month grid. This is placed first in the DOM order\n        * so that it is the first thing a touch screen reader user encounters.\n        * In addition, VoiceOver on iOS does not announce the aria-label of the grid\n        * elements, so the aria-label of the Calendar is included here as well. */}\n      <VisuallyHidden>\n        <h2>{calendarProps['aria-label']}</h2>\n      </VisuallyHidden>\n      <div className={classNames(styles, 'spectrum-Calendar-header')}>\n        {titles}\n      </div>\n      <div className={classNames(styles, 'spectrum-Calendar-months')}>\n        {calendars}\n      </div>\n      {/* For touch screen readers, add a visually hidden next button after the month grid\n        * so it's easy to navigate after reaching the end without going all the way\n        * back to the start of the month. */}\n      <VisuallyHidden>\n        <button\n          aria-label={nextButtonProps['aria-label']}\n          disabled={nextButtonProps.isDisabled}\n          onClick={() => state.focusNextPage()}\n          tabIndex={-1} />\n      </VisuallyHidden>\n      {state.isValueInvalid &&\n        <HelpText\n          showErrorIcon\n          errorMessage={props.errorMessage || stringFormatter.format('invalidSelection', {selectedCount: 'highlightedRange' in state ? 2 : 1})}\n          errorMessageProps={errorMessageProps}\n          isInvalid\n          // Intentionally a global class name so it can be targeted in DatePicker CSS...\n          UNSAFE_className=\"spectrum-Calendar-helpText\" />\n      }\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
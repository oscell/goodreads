{"ast":null,"code":"import { MenuContext as $d94604d52c3e3feb$export$c7e742effb1c51e2 } from \"./context.mjs\";\nimport \"./vars.a1f9fd59.css\";\nimport $5R0iF$menu_vars_cssmodulejs from \"./menu_vars_css.mjs\";\nimport { useDOMRef as $5R0iF$useDOMRef, useIsMobileDevice as $5R0iF$useIsMobileDevice, classNames as $5R0iF$classNames, SlotProvider as $5R0iF$SlotProvider } from \"@react-spectrum/utils\";\nimport { Tray as $5R0iF$Tray, Popover as $5R0iF$Popover } from \"@react-spectrum/overlays\";\nimport { PressResponder as $5R0iF$PressResponder } from \"@react-aria/interactions\";\nimport $5R0iF$react, { useRef as $5R0iF$useRef, Fragment as $5R0iF$Fragment, forwardRef as $5R0iF$forwardRef } from \"react\";\nimport { useMenuTrigger as $5R0iF$useMenuTrigger } from \"@react-aria/menu\";\nimport { useMenuTriggerState as $5R0iF$useMenuTriggerState } from \"@react-stately/menu\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $aa0b855f135b86e3$var$MenuTrigger(props, ref) {\n  let triggerRef = (0, $5R0iF$useRef)(undefined);\n  let domRef = (0, $5R0iF$useDOMRef)(ref);\n  let menuTriggerRef = domRef || triggerRef;\n  let menuRef = (0, $5R0iF$useRef)(undefined);\n  let {\n    children: children,\n    align = 'start',\n    shouldFlip = true,\n    direction = 'bottom',\n    closeOnSelect: closeOnSelect,\n    trigger = 'press'\n  } = props;\n  let [menuTrigger, menu] = (0, $5R0iF$react).Children.toArray(children);\n  let state = (0, $5R0iF$useMenuTriggerState)(props);\n  let {\n    menuTriggerProps: menuTriggerProps,\n    menuProps: menuProps\n  } = (0, $5R0iF$useMenuTrigger)({\n    trigger: trigger\n  }, state, menuTriggerRef);\n  let initialPlacement;\n  switch (direction) {\n    case 'left':\n    case 'right':\n    case 'start':\n    case 'end':\n      initialPlacement = `${direction} ${align === 'end' ? 'bottom' : 'top'}`;\n      break;\n    case 'bottom':\n    case 'top':\n    default:\n      initialPlacement = `${direction} ${align}`;\n  }\n  let isMobile = (0, $5R0iF$useIsMobileDevice)();\n  let menuContext = {\n    ...menuProps,\n    ref: menuRef,\n    onClose: state.close,\n    closeOnSelect: closeOnSelect,\n    autoFocus: state.focusStrategy || true,\n    UNSAFE_style: isMobile ? {\n      width: '100%',\n      maxHeight: 'inherit'\n    } : undefined,\n    UNSAFE_className: (0, $5R0iF$classNames)((0, $parcel$interopDefault($5R0iF$menu_vars_cssmodulejs)), {\n      'spectrum-Menu-popover': !isMobile\n    }),\n    state: state\n  };\n  // On small screen devices, the menu is rendered in a tray, otherwise a popover.\n  let overlay;\n  if (isMobile) overlay = /*#__PURE__*/(0, $5R0iF$react).createElement((0, $5R0iF$Tray), {\n    state: state,\n    isFixedHeight: true\n  }, menu);else overlay = /*#__PURE__*/(0, $5R0iF$react).createElement((0, $5R0iF$Popover), {\n    UNSAFE_style: {\n      clipPath: 'unset',\n      overflow: 'visible',\n      filter: 'unset',\n      borderWidth: '0px'\n    },\n    state: state,\n    triggerRef: menuTriggerRef,\n    scrollRef: menuRef,\n    placement: initialPlacement,\n    hideArrow: true,\n    shouldFlip: shouldFlip\n  }, menu);\n  return /*#__PURE__*/(0, $5R0iF$react).createElement((0, $5R0iF$Fragment), null, /*#__PURE__*/(0, $5R0iF$react).createElement((0, $5R0iF$SlotProvider), {\n    slots: {\n      actionButton: {\n        holdAffordance: trigger === 'longPress'\n      }\n    }\n  }, /*#__PURE__*/(0, $5R0iF$react).createElement((0, $5R0iF$PressResponder), {\n    ...menuTriggerProps,\n    ref: menuTriggerRef,\n    isPressed: state.isOpen\n  }, menuTrigger)), /*#__PURE__*/(0, $5R0iF$react).createElement((0, $d94604d52c3e3feb$export$c7e742effb1c51e2).Provider, {\n    value: menuContext\n  }, overlay));\n}\n/**\n * The MenuTrigger serves as a wrapper around a Menu and its associated trigger,\n * linking the Menu's open state with the trigger's press state.\n */\nlet $aa0b855f135b86e3$export$27d2ad3c5815583e = /*#__PURE__*/(0, $5R0iF$forwardRef)($aa0b855f135b86e3$var$MenuTrigger);\nexport { $aa0b855f135b86e3$export$27d2ad3c5815583e as MenuTrigger };","map":{"version":3,"names":["$aa0b855f135b86e3$var$MenuTrigger","props","ref","triggerRef","$5R0iF$useRef","undefined","domRef","$5R0iF$useDOMRef","menuTriggerRef","menuRef","children","align","shouldFlip","direction","closeOnSelect","trigger","menuTrigger","menu","$5R0iF$react","Children","toArray","state","$5R0iF$useMenuTriggerState","menuTriggerProps","menuProps","$5R0iF$useMenuTrigger","initialPlacement","isMobile","$5R0iF$useIsMobileDevice","menuContext","onClose","close","autoFocus","focusStrategy","UNSAFE_style","width","maxHeight","UNSAFE_className","$5R0iF$classNames","$parcel$interopDefault","$5R0iF$menu_vars_cssmodulejs","overlay","createElement","$5R0iF$Tray","isFixedHeight","$5R0iF$Popover","clipPath","overflow","filter","borderWidth","scrollRef","placement","hideArrow","$5R0iF$Fragment","$5R0iF$SlotProvider","slots","actionButton","holdAffordance","$5R0iF$PressResponder","isPressed","isOpen","$d94604d52c3e3feb$export$c7e742effb1c51e2","Provider","value","$aa0b855f135b86e3$export$27d2ad3c5815583e","$5R0iF$forwardRef"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-spectrum/menu/dist/packages/@react-spectrum/menu/src/MenuTrigger.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, SlotProvider, useDOMRef, useIsMobileDevice} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {MenuContext} from './context';\nimport {Placement} from '@react-types/overlays';\nimport {Popover, Tray} from '@react-spectrum/overlays';\nimport {PressResponder} from '@react-aria/interactions';\nimport React, {forwardRef, Fragment, useRef} from 'react';\nimport {SpectrumMenuTriggerProps} from '@react-types/menu';\nimport styles from '@adobe/spectrum-css-temp/components/menu/vars.css';\nimport {useMenuTrigger} from '@react-aria/menu';\nimport {useMenuTriggerState} from '@react-stately/menu';\n\nfunction MenuTrigger(props: SpectrumMenuTriggerProps, ref: DOMRef<HTMLElement>) {\n  let triggerRef = useRef<HTMLElement>(undefined);\n  let domRef = useDOMRef(ref);\n  let menuTriggerRef = domRef || triggerRef;\n  let menuRef = useRef<HTMLDivElement>(undefined);\n  let {\n    children,\n    align = 'start',\n    shouldFlip = true,\n    direction = 'bottom',\n    closeOnSelect,\n    trigger = 'press'\n  } = props;\n\n  let [menuTrigger, menu] = React.Children.toArray(children);\n  let state = useMenuTriggerState(props);\n\n  let {menuTriggerProps, menuProps} = useMenuTrigger({trigger}, state, menuTriggerRef);\n\n  let initialPlacement: Placement;\n  switch (direction) {\n    case 'left':\n    case 'right':\n    case 'start':\n    case 'end':\n      initialPlacement = `${direction} ${align === 'end' ? 'bottom' : 'top'}` as Placement;\n      break;\n    case 'bottom':\n    case 'top':\n    default:\n      initialPlacement = `${direction} ${align}` as Placement;\n  }\n\n  let isMobile = useIsMobileDevice();\n  let menuContext = {\n    ...menuProps,\n    ref: menuRef,\n    onClose: state.close,\n    closeOnSelect,\n    autoFocus: state.focusStrategy || true,\n    UNSAFE_style: isMobile ? {\n      width: '100%',\n      maxHeight: 'inherit'\n    } : undefined,\n    UNSAFE_className: classNames(styles, {'spectrum-Menu-popover': !isMobile}),\n    state\n  };\n\n  // On small screen devices, the menu is rendered in a tray, otherwise a popover.\n  let overlay;\n  if (isMobile) {\n    overlay = (\n      <Tray state={state} isFixedHeight>\n        {menu}\n      </Tray>\n    );\n  } else {\n    overlay = (\n      <Popover\n        UNSAFE_style={{clipPath: 'unset', overflow: 'visible', filter: 'unset', borderWidth: '0px'}}\n        state={state}\n        triggerRef={menuTriggerRef}\n        scrollRef={menuRef}\n        placement={initialPlacement}\n        hideArrow\n        shouldFlip={shouldFlip}>\n        {menu}\n      </Popover>\n    );\n  }\n\n  return (\n    <Fragment>\n      <SlotProvider slots={{actionButton: {holdAffordance: trigger === 'longPress'}}}>\n        <PressResponder {...menuTriggerProps} ref={menuTriggerRef} isPressed={state.isOpen}>\n          {menuTrigger}\n        </PressResponder>\n      </SlotProvider>\n      <MenuContext.Provider value={menuContext}>\n        {overlay}\n      </MenuContext.Provider>\n    </Fragment>\n  );\n}\n\n/**\n * The MenuTrigger serves as a wrapper around a Menu and its associated trigger,\n * linking the Menu's open state with the trigger's press state.\n */\nlet _MenuTrigger = forwardRef(MenuTrigger);\nexport {_MenuTrigger as MenuTrigger};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
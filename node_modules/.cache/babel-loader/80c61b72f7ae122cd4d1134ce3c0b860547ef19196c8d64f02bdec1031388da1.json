{"ast":null,"code":"/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nvar Hogan = {};\n(function (Hogan) {\n  Hogan.Template = function (codeObj, text, compiler, options) {\n    codeObj = codeObj || {};\n    this.r = codeObj.code || this.r;\n    this.c = compiler;\n    this.options = options || {};\n    this.text = text || '';\n    this.partials = codeObj.partials || {};\n    this.subs = codeObj.subs || {};\n    this.buf = '';\n  };\n  Hogan.Template.prototype = {\n    // render: replaced by generated code.\n    r: function (context, partials, indent) {\n      return '';\n    },\n    // variable escaping\n    v: hoganEscape,\n    // triple stache\n    t: coerceToString,\n    render: function render(context, partials, indent) {\n      return this.ri([context], partials || {}, indent);\n    },\n    // render internal -- a hook for overrides that catches partials too\n    ri: function (context, partials, indent) {\n      return this.r(context, partials, indent);\n    },\n    // ensurePartial\n    ep: function (symbol, partials) {\n      var partial = this.partials[symbol];\n\n      // check to see that if we've instantiated this partial before\n      var template = partials[partial.name];\n      if (partial.instance && partial.base == template) {\n        return partial.instance;\n      }\n      if (typeof template == 'string') {\n        if (!this.c) {\n          throw new Error(\"No compiler available.\");\n        }\n        template = this.c.compile(template, this.options);\n      }\n      if (!template) {\n        return null;\n      }\n\n      // We use this to check whether the partials dictionary has changed\n      this.partials[symbol].base = template;\n      if (partial.subs) {\n        // Make sure we consider parent template now\n        if (!partials.stackText) partials.stackText = {};\n        for (key in partial.subs) {\n          if (!partials.stackText[key]) {\n            partials.stackText[key] = this.activeSub !== undefined && partials.stackText[this.activeSub] ? partials.stackText[this.activeSub] : this.text;\n          }\n        }\n        template = createSpecializedPartial(template, partial.subs, partial.partials, this.stackSubs, this.stackPartials, partials.stackText);\n      }\n      this.partials[symbol].instance = template;\n      return template;\n    },\n    // tries to find a partial in the current scope and render it\n    rp: function (symbol, context, partials, indent) {\n      var partial = this.ep(symbol, partials);\n      if (!partial) {\n        return '';\n      }\n      return partial.ri(context, partials, indent);\n    },\n    // render a section\n    rs: function (context, partials, section) {\n      var tail = context[context.length - 1];\n      if (!isArray(tail)) {\n        section(context, partials, this);\n        return;\n      }\n      for (var i = 0; i < tail.length; i++) {\n        context.push(tail[i]);\n        section(context, partials, this);\n        context.pop();\n      }\n    },\n    // maybe start a section\n    s: function (val, ctx, partials, inverted, start, end, tags) {\n      var pass;\n      if (isArray(val) && val.length === 0) {\n        return false;\n      }\n      if (typeof val == 'function') {\n        val = this.ms(val, ctx, partials, inverted, start, end, tags);\n      }\n      pass = !!val;\n      if (!inverted && pass && ctx) {\n        ctx.push(typeof val == 'object' ? val : ctx[ctx.length - 1]);\n      }\n      return pass;\n    },\n    // find values with dotted names\n    d: function (key, ctx, partials, returnFound) {\n      var found,\n        names = key.split('.'),\n        val = this.f(names[0], ctx, partials, returnFound),\n        doModelGet = this.options.modelGet,\n        cx = null;\n      if (key === '.' && isArray(ctx[ctx.length - 2])) {\n        val = ctx[ctx.length - 1];\n      } else {\n        for (var i = 1; i < names.length; i++) {\n          found = findInScope(names[i], val, doModelGet);\n          if (found !== undefined) {\n            cx = val;\n            val = found;\n          } else {\n            val = '';\n          }\n        }\n      }\n      if (returnFound && !val) {\n        return false;\n      }\n      if (!returnFound && typeof val == 'function') {\n        ctx.push(cx);\n        val = this.mv(val, ctx, partials);\n        ctx.pop();\n      }\n      return val;\n    },\n    // find values with normal names\n    f: function (key, ctx, partials, returnFound) {\n      var val = false,\n        v = null,\n        found = false,\n        doModelGet = this.options.modelGet;\n      for (var i = ctx.length - 1; i >= 0; i--) {\n        v = ctx[i];\n        val = findInScope(key, v, doModelGet);\n        if (val !== undefined) {\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        return returnFound ? false : \"\";\n      }\n      if (!returnFound && typeof val == 'function') {\n        val = this.mv(val, ctx, partials);\n      }\n      return val;\n    },\n    // higher order templates\n    ls: function (func, cx, partials, text, tags) {\n      var oldTags = this.options.delimiters;\n      this.options.delimiters = tags;\n      this.b(this.ct(coerceToString(func.call(cx, text)), cx, partials));\n      this.options.delimiters = oldTags;\n      return false;\n    },\n    // compile text\n    ct: function (text, cx, partials) {\n      if (this.options.disableLambda) {\n        throw new Error('Lambda features disabled.');\n      }\n      return this.c.compile(text, this.options).render(cx, partials);\n    },\n    // template result buffering\n    b: function (s) {\n      this.buf += s;\n    },\n    fl: function () {\n      var r = this.buf;\n      this.buf = '';\n      return r;\n    },\n    // method replace section\n    ms: function (func, ctx, partials, inverted, start, end, tags) {\n      var textSource,\n        cx = ctx[ctx.length - 1],\n        result = func.call(cx);\n      if (typeof result == 'function') {\n        if (inverted) {\n          return true;\n        } else {\n          textSource = this.activeSub && this.subsText && this.subsText[this.activeSub] ? this.subsText[this.activeSub] : this.text;\n          return this.ls(result, cx, partials, textSource.substring(start, end), tags);\n        }\n      }\n      return result;\n    },\n    // method replace variable\n    mv: function (func, ctx, partials) {\n      var cx = ctx[ctx.length - 1];\n      var result = func.call(cx);\n      if (typeof result == 'function') {\n        return this.ct(coerceToString(result.call(cx)), cx, partials);\n      }\n      return result;\n    },\n    sub: function (name, context, partials, indent) {\n      var f = this.subs[name];\n      if (f) {\n        this.activeSub = name;\n        f(context, partials, this, indent);\n        this.activeSub = false;\n      }\n    }\n  };\n\n  //Find a key in an object\n  function findInScope(key, scope, doModelGet) {\n    var val;\n    if (scope && typeof scope == 'object') {\n      if (scope[key] !== undefined) {\n        val = scope[key];\n\n        // try lookup with get for backbone or similar model data\n      } else if (doModelGet && scope.get && typeof scope.get == 'function') {\n        val = scope.get(key);\n      }\n    }\n    return val;\n  }\n  function createSpecializedPartial(instance, subs, partials, stackSubs, stackPartials, stackText) {\n    function PartialTemplate() {}\n    ;\n    PartialTemplate.prototype = instance;\n    function Substitutions() {}\n    ;\n    Substitutions.prototype = instance.subs;\n    var key;\n    var partial = new PartialTemplate();\n    partial.subs = new Substitutions();\n    partial.subsText = {}; //hehe. substext.\n    partial.buf = '';\n    stackSubs = stackSubs || {};\n    partial.stackSubs = stackSubs;\n    partial.subsText = stackText;\n    for (key in subs) {\n      if (!stackSubs[key]) stackSubs[key] = subs[key];\n    }\n    for (key in stackSubs) {\n      partial.subs[key] = stackSubs[key];\n    }\n    stackPartials = stackPartials || {};\n    partial.stackPartials = stackPartials;\n    for (key in partials) {\n      if (!stackPartials[key]) stackPartials[key] = partials[key];\n    }\n    for (key in stackPartials) {\n      partial.partials[key] = stackPartials[key];\n    }\n    return partial;\n  }\n  var rAmp = /&/g,\n    rLt = /</g,\n    rGt = />/g,\n    rApos = /\\'/g,\n    rQuot = /\\\"/g,\n    hChars = /[&<>\\\"\\']/;\n  function coerceToString(val) {\n    return String(val === null || val === undefined ? '' : val);\n  }\n  function hoganEscape(str) {\n    str = coerceToString(str);\n    return hChars.test(str) ? str.replace(rAmp, '&amp;').replace(rLt, '&lt;').replace(rGt, '&gt;').replace(rApos, '&#39;').replace(rQuot, '&quot;') : str;\n  }\n  var isArray = Array.isArray || function (a) {\n    return Object.prototype.toString.call(a) === '[object Array]';\n  };\n})(typeof exports !== 'undefined' ? exports : Hogan);","map":{"version":3,"names":["Hogan","Template","codeObj","text","compiler","options","r","code","c","partials","subs","buf","prototype","context","indent","v","hoganEscape","t","coerceToString","render","ri","ep","symbol","partial","template","name","instance","base","Error","compile","stackText","key","activeSub","undefined","createSpecializedPartial","stackSubs","stackPartials","rp","rs","section","tail","length","isArray","i","push","pop","s","val","ctx","inverted","start","end","tags","pass","ms","d","returnFound","found","names","split","f","doModelGet","modelGet","cx","findInScope","mv","ls","func","oldTags","delimiters","b","ct","call","disableLambda","fl","textSource","result","subsText","substring","sub","scope","get","PartialTemplate","Substitutions","rAmp","rLt","rGt","rApos","rQuot","hChars","String","str","test","replace","Array","a","Object","toString","exports"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/hogan.js/lib/template.js"],"sourcesContent":["/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nvar Hogan = {};\n\n(function (Hogan) {\n  Hogan.Template = function (codeObj, text, compiler, options) {\n    codeObj = codeObj || {};\n    this.r = codeObj.code || this.r;\n    this.c = compiler;\n    this.options = options || {};\n    this.text = text || '';\n    this.partials = codeObj.partials || {};\n    this.subs = codeObj.subs || {};\n    this.buf = '';\n  }\n\n  Hogan.Template.prototype = {\n    // render: replaced by generated code.\n    r: function (context, partials, indent) { return ''; },\n\n    // variable escaping\n    v: hoganEscape,\n\n    // triple stache\n    t: coerceToString,\n\n    render: function render(context, partials, indent) {\n      return this.ri([context], partials || {}, indent);\n    },\n\n    // render internal -- a hook for overrides that catches partials too\n    ri: function (context, partials, indent) {\n      return this.r(context, partials, indent);\n    },\n\n    // ensurePartial\n    ep: function(symbol, partials) {\n      var partial = this.partials[symbol];\n\n      // check to see that if we've instantiated this partial before\n      var template = partials[partial.name];\n      if (partial.instance && partial.base == template) {\n        return partial.instance;\n      }\n\n      if (typeof template == 'string') {\n        if (!this.c) {\n          throw new Error(\"No compiler available.\");\n        }\n        template = this.c.compile(template, this.options);\n      }\n\n      if (!template) {\n        return null;\n      }\n\n      // We use this to check whether the partials dictionary has changed\n      this.partials[symbol].base = template;\n\n      if (partial.subs) {\n        // Make sure we consider parent template now\n        if (!partials.stackText) partials.stackText = {};\n        for (key in partial.subs) {\n          if (!partials.stackText[key]) {\n            partials.stackText[key] = (this.activeSub !== undefined && partials.stackText[this.activeSub]) ? partials.stackText[this.activeSub] : this.text;\n          }\n        }\n        template = createSpecializedPartial(template, partial.subs, partial.partials,\n          this.stackSubs, this.stackPartials, partials.stackText);\n      }\n      this.partials[symbol].instance = template;\n\n      return template;\n    },\n\n    // tries to find a partial in the current scope and render it\n    rp: function(symbol, context, partials, indent) {\n      var partial = this.ep(symbol, partials);\n      if (!partial) {\n        return '';\n      }\n\n      return partial.ri(context, partials, indent);\n    },\n\n    // render a section\n    rs: function(context, partials, section) {\n      var tail = context[context.length - 1];\n\n      if (!isArray(tail)) {\n        section(context, partials, this);\n        return;\n      }\n\n      for (var i = 0; i < tail.length; i++) {\n        context.push(tail[i]);\n        section(context, partials, this);\n        context.pop();\n      }\n    },\n\n    // maybe start a section\n    s: function(val, ctx, partials, inverted, start, end, tags) {\n      var pass;\n\n      if (isArray(val) && val.length === 0) {\n        return false;\n      }\n\n      if (typeof val == 'function') {\n        val = this.ms(val, ctx, partials, inverted, start, end, tags);\n      }\n\n      pass = !!val;\n\n      if (!inverted && pass && ctx) {\n        ctx.push((typeof val == 'object') ? val : ctx[ctx.length - 1]);\n      }\n\n      return pass;\n    },\n\n    // find values with dotted names\n    d: function(key, ctx, partials, returnFound) {\n      var found,\n          names = key.split('.'),\n          val = this.f(names[0], ctx, partials, returnFound),\n          doModelGet = this.options.modelGet,\n          cx = null;\n\n      if (key === '.' && isArray(ctx[ctx.length - 2])) {\n        val = ctx[ctx.length - 1];\n      } else {\n        for (var i = 1; i < names.length; i++) {\n          found = findInScope(names[i], val, doModelGet);\n          if (found !== undefined) {\n            cx = val;\n            val = found;\n          } else {\n            val = '';\n          }\n        }\n      }\n\n      if (returnFound && !val) {\n        return false;\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        ctx.push(cx);\n        val = this.mv(val, ctx, partials);\n        ctx.pop();\n      }\n\n      return val;\n    },\n\n    // find values with normal names\n    f: function(key, ctx, partials, returnFound) {\n      var val = false,\n          v = null,\n          found = false,\n          doModelGet = this.options.modelGet;\n\n      for (var i = ctx.length - 1; i >= 0; i--) {\n        v = ctx[i];\n        val = findInScope(key, v, doModelGet);\n        if (val !== undefined) {\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) {\n        return (returnFound) ? false : \"\";\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        val = this.mv(val, ctx, partials);\n      }\n\n      return val;\n    },\n\n    // higher order templates\n    ls: function(func, cx, partials, text, tags) {\n      var oldTags = this.options.delimiters;\n\n      this.options.delimiters = tags;\n      this.b(this.ct(coerceToString(func.call(cx, text)), cx, partials));\n      this.options.delimiters = oldTags;\n\n      return false;\n    },\n\n    // compile text\n    ct: function(text, cx, partials) {\n      if (this.options.disableLambda) {\n        throw new Error('Lambda features disabled.');\n      }\n      return this.c.compile(text, this.options).render(cx, partials);\n    },\n\n    // template result buffering\n    b: function(s) { this.buf += s; },\n\n    fl: function() { var r = this.buf; this.buf = ''; return r; },\n\n    // method replace section\n    ms: function(func, ctx, partials, inverted, start, end, tags) {\n      var textSource,\n          cx = ctx[ctx.length - 1],\n          result = func.call(cx);\n\n      if (typeof result == 'function') {\n        if (inverted) {\n          return true;\n        } else {\n          textSource = (this.activeSub && this.subsText && this.subsText[this.activeSub]) ? this.subsText[this.activeSub] : this.text;\n          return this.ls(result, cx, partials, textSource.substring(start, end), tags);\n        }\n      }\n\n      return result;\n    },\n\n    // method replace variable\n    mv: function(func, ctx, partials) {\n      var cx = ctx[ctx.length - 1];\n      var result = func.call(cx);\n\n      if (typeof result == 'function') {\n        return this.ct(coerceToString(result.call(cx)), cx, partials);\n      }\n\n      return result;\n    },\n\n    sub: function(name, context, partials, indent) {\n      var f = this.subs[name];\n      if (f) {\n        this.activeSub = name;\n        f(context, partials, this, indent);\n        this.activeSub = false;\n      }\n    }\n\n  };\n\n  //Find a key in an object\n  function findInScope(key, scope, doModelGet) {\n    var val;\n\n    if (scope && typeof scope == 'object') {\n\n      if (scope[key] !== undefined) {\n        val = scope[key];\n\n      // try lookup with get for backbone or similar model data\n      } else if (doModelGet && scope.get && typeof scope.get == 'function') {\n        val = scope.get(key);\n      }\n    }\n\n    return val;\n  }\n\n  function createSpecializedPartial(instance, subs, partials, stackSubs, stackPartials, stackText) {\n    function PartialTemplate() {};\n    PartialTemplate.prototype = instance;\n    function Substitutions() {};\n    Substitutions.prototype = instance.subs;\n    var key;\n    var partial = new PartialTemplate();\n    partial.subs = new Substitutions();\n    partial.subsText = {};  //hehe. substext.\n    partial.buf = '';\n\n    stackSubs = stackSubs || {};\n    partial.stackSubs = stackSubs;\n    partial.subsText = stackText;\n    for (key in subs) {\n      if (!stackSubs[key]) stackSubs[key] = subs[key];\n    }\n    for (key in stackSubs) {\n      partial.subs[key] = stackSubs[key];\n    }\n\n    stackPartials = stackPartials || {};\n    partial.stackPartials = stackPartials;\n    for (key in partials) {\n      if (!stackPartials[key]) stackPartials[key] = partials[key];\n    }\n    for (key in stackPartials) {\n      partial.partials[key] = stackPartials[key];\n    }\n\n    return partial;\n  }\n\n  var rAmp = /&/g,\n      rLt = /</g,\n      rGt = />/g,\n      rApos = /\\'/g,\n      rQuot = /\\\"/g,\n      hChars = /[&<>\\\"\\']/;\n\n  function coerceToString(val) {\n    return String((val === null || val === undefined) ? '' : val);\n  }\n\n  function hoganEscape(str) {\n    str = coerceToString(str);\n    return hChars.test(str) ?\n      str\n        .replace(rAmp, '&amp;')\n        .replace(rLt, '&lt;')\n        .replace(rGt, '&gt;')\n        .replace(rApos, '&#39;')\n        .replace(rQuot, '&quot;') :\n      str;\n  }\n\n  var isArray = Array.isArray || function(a) {\n    return Object.prototype.toString.call(a) === '[object Array]';\n  };\n\n})(typeof exports !== 'undefined' ? exports : Hogan);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"import { DialogContext as $97b119e05830ea0d$export$8b93a07348a7730c } from \"./context.mjs\";\nimport { Modal as $2W2Rs$Modal } from \"@react-spectrum/overlays\";\nimport $2W2Rs$react, { useState as $2W2Rs$useState } from \"react\";\nimport { useOverlayTriggerState as $2W2Rs$useOverlayTriggerState } from \"@react-stately/overlays\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $2a9f0ad39ddaa8d9$export$547754aada6e339f(props) {\n  let {\n    children: children,\n    type = 'modal',\n    onDismiss: onDismiss,\n    isDismissable: isDismissable,\n    isKeyboardDismissDisabled: isKeyboardDismissDisabled\n  } = props;\n  let childArray = (0, $2W2Rs$react).Children.toArray(children);\n  if (childArray.length > 1) throw new Error('Only a single child can be passed to DialogContainer.');\n  let [lastChild, setLastChild] = (0, $2W2Rs$useState)(null);\n  // React.Children.toArray mutates the children, and we need them to be stable\n  // between renders so that the lastChild comparison works.\n  let child = undefined;\n  if (Array.isArray(children)) child = children.find((0, $2W2Rs$react).isValidElement);else if (/*#__PURE__*/(0, $2W2Rs$react).isValidElement(children)) child = children;\n  if (child && child !== lastChild) setLastChild(child);\n  let context = {\n    type: type,\n    onClose: onDismiss,\n    isDismissable: isDismissable\n  };\n  let state = (0, $2W2Rs$useOverlayTriggerState)({\n    isOpen: !!child,\n    onOpenChange: isOpen => {\n      if (!isOpen) onDismiss();\n    }\n  });\n  return /*#__PURE__*/(0, $2W2Rs$react).createElement((0, $2W2Rs$Modal), {\n    state: state,\n    type: type,\n    isDismissable: isDismissable,\n    isKeyboardDismissDisabled: isKeyboardDismissDisabled\n  }, /*#__PURE__*/(0, $2W2Rs$react).createElement((0, $97b119e05830ea0d$export$8b93a07348a7730c).Provider, {\n    value: context\n  }, lastChild));\n}\nexport { $2a9f0ad39ddaa8d9$export$547754aada6e339f as DialogContainer };","map":{"version":3,"names":["$2a9f0ad39ddaa8d9$export$547754aada6e339f","props","children","type","onDismiss","isDismissable","isKeyboardDismissDisabled","childArray","$2W2Rs$react","Children","toArray","length","Error","lastChild","setLastChild","$2W2Rs$useState","child","undefined","Array","isArray","find","isValidElement","context","onClose","state","$2W2Rs$useOverlayTriggerState","isOpen","onOpenChange","createElement","$2W2Rs$Modal","$97b119e05830ea0d$export$8b93a07348a7730c","Provider","value"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-spectrum/dialog/dist/packages/@react-spectrum/dialog/src/DialogContainer.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DialogContext} from './context';\nimport {Modal} from '@react-spectrum/overlays';\nimport React, {ReactElement, useState} from 'react';\nimport {SpectrumDialogContainerProps} from '@react-types/dialog';\nimport {useOverlayTriggerState} from '@react-stately/overlays';\n\n/**\n * A DialogContainer accepts a single Dialog as a child, and manages showing and hiding\n * it in a modal. Useful in cases where there is no trigger element\n * or when the trigger unmounts while the dialog is open.\n */\nexport function DialogContainer(props: SpectrumDialogContainerProps) {\n  let {\n    children,\n    type = 'modal',\n    onDismiss,\n    isDismissable,\n    isKeyboardDismissDisabled\n  } = props;\n\n  let childArray = React.Children.toArray(children);\n  if (childArray.length > 1) {\n    throw new Error('Only a single child can be passed to DialogContainer.');\n  }\n\n  let [lastChild, setLastChild] = useState<ReactElement | null>(null);\n\n  // React.Children.toArray mutates the children, and we need them to be stable\n  // between renders so that the lastChild comparison works.\n  let child: ReactElement | undefined = undefined;\n  if (Array.isArray(children)) {\n    child = children.find(React.isValidElement);\n  } else if (React.isValidElement(children)) {\n    child = children;\n  }\n\n  if (child && child !== lastChild) {\n    setLastChild(child);\n  }\n\n  let context = {\n    type,\n    onClose: onDismiss,\n    isDismissable\n  };\n\n  let state = useOverlayTriggerState({\n    isOpen: !!child,\n    onOpenChange: isOpen => {\n      if (!isOpen) {\n        onDismiss();\n      }\n    }\n  });\n\n  return (\n    <Modal\n      state={state}\n      type={type}\n      isDismissable={isDismissable}\n      isKeyboardDismissDisabled={isKeyboardDismissDisabled}>\n      <DialogContext.Provider value={context}>\n        {lastChild}\n      </DialogContext.Provider>\n    </Modal>\n  );\n}\n"],"mappings":";;;;;AAAA;;;;;;;;;;;;AAuBO,SAASA,0CAAgBC,KAAmC;EACjE,IAAI;IAAAC,QAAA,EACFA,QAAQ;IACRC,IAAA,GAAO;IAAAC,SAAA,EACPA,SAAS;IAAAC,aAAA,EACTA,aAAa;IAAAC,yBAAA,EACbA;EAAyB,CAC1B,GAAGL,KAAA;EAEJ,IAAIM,UAAA,GAAa,IAAAC,YAAI,EAAEC,QAAQ,CAACC,OAAO,CAACR,QAAA;EACxC,IAAIK,UAAA,CAAWI,MAAM,GAAG,GACtB,MAAM,IAAIC,KAAA,CAAM;EAGlB,IAAI,CAACC,SAAA,EAAWC,YAAA,CAAa,GAAG,IAAAC,eAAO,EAAuB;EAE9D;EACA;EACA,IAAIC,KAAA,GAAkCC,SAAA;EACtC,IAAIC,KAAA,CAAMC,OAAO,CAACjB,QAAA,GAChBc,KAAA,GAAQd,QAAA,CAASkB,IAAI,CAAC,IAAAZ,YAAI,EAAEa,cAAc,OACrC,iBAAI,IAAAb,YAAI,EAAEa,cAAc,CAACnB,QAAA,GAC9Bc,KAAA,GAAQd,QAAA;EAGV,IAAIc,KAAA,IAASA,KAAA,KAAUH,SAAA,EACrBC,YAAA,CAAaE,KAAA;EAGf,IAAIM,OAAA,GAAU;UACZnB,IAAA;IACAoB,OAAA,EAASnB,SAAA;mBACTC;EACF;EAEA,IAAImB,KAAA,GAAQ,IAAAC,6BAAqB,EAAE;IACjCC,MAAA,EAAQ,CAAC,CAACV,KAAA;IACVW,YAAA,EAAcD,MAAA;MACZ,IAAI,CAACA,MAAA,EACHtB,SAAA;IAEJ;EACF;EAEA,oBACE,IAAAI,YAAA,EAAAoB,aAAA,EAAC,GAAAC,YAAI;IACHL,KAAA,EAAOA,KAAA;IACPrB,IAAA,EAAMA,IAAA;IACNE,aAAA,EAAeA,aAAA;IACfC,yBAAA,EAA2BA;kBAC3B,IAAAE,YAAA,EAAAoB,aAAA,CAAC,IAAAE,yCAAY,EAAEC,QAAQ;IAACC,KAAA,EAAOV;KAC5BT,SAAA;AAIT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */const $ce9b18daab526bbd$export$5b9bb410392e3991 = new WeakMap();\nfunction $ce9b18daab526bbd$export$f45c25170b9a99c2(state, key) {\n  let {\n    id: id\n  } = $ce9b18daab526bbd$export$5b9bb410392e3991.get(state);\n  if (!id) throw new Error('Unknown list');\n  return `${id}-${$ce9b18daab526bbd$export$e0c709538cb8ae18(key)}`;\n}\nfunction $ce9b18daab526bbd$export$e0c709538cb8ae18(key) {\n  if (typeof key === 'string') return key.replace(/\\s*/g, '');\n  return '' + key;\n}\nexport { $ce9b18daab526bbd$export$5b9bb410392e3991 as listMap, $ce9b18daab526bbd$export$f45c25170b9a99c2 as getRowId, $ce9b18daab526bbd$export$e0c709538cb8ae18 as normalizeKey };","map":{"version":3,"names":["$ce9b18daab526bbd$export$5b9bb410392e3991","WeakMap","$ce9b18daab526bbd$export$f45c25170b9a99c2","state","key","id","get","Error","$ce9b18daab526bbd$export$e0c709538cb8ae18","replace"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-aria/gridlist/dist/packages/@react-aria/gridlist/src/utils.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from '@react-types/shared';\nimport type {ListState} from '@react-stately/list';\n\ninterface ListMapShared {\n  id: string,\n  onAction: (key: Key) => void,\n  linkBehavior?: 'action' | 'selection' | 'override',\n  keyboardNavigationBehavior: 'arrow' | 'tab'\n}\n\n// Used to share:\n// id of the list and onAction between useList, useListItem, and useListSelectionCheckbox\nexport const listMap = new WeakMap<ListState<unknown>, ListMapShared>();\n\nexport function getRowId<T>(state: ListState<T>, key: Key) {\n  let {id} = listMap.get(state);\n  if (!id) {\n    throw new Error('Unknown list');\n  }\n\n  return `${id}-${normalizeKey(key)}`;\n}\n\nexport function normalizeKey(key: Key): string {\n  if (typeof key === 'string') {\n    return key.replace(/\\s*/g, '');\n  }\n\n  return '' + key;\n}\n"],"mappings":"AAAA;;;;;;;;;;GAwBO,MAAMA,yCAAA,GAAU,IAAIC,OAAA;AAEpB,SAASC,0CAAYC,KAAmB,EAAEC,GAAQ;EACvD,IAAI;IAAAC,EAAA,EAACA;EAAE,CAAC,GAAGL,yCAAA,CAAQM,GAAG,CAACH,KAAA;EACvB,IAAI,CAACE,EAAA,EACH,MAAM,IAAIE,KAAA,CAAM;EAGlB,OAAO,GAAGF,EAAA,IAAMG,yCAAA,CAAaJ,GAAA,GAAM;AACrC;AAEO,SAASI,0CAAaJ,GAAQ;EACnC,IAAI,OAAOA,GAAA,KAAQ,UACjB,OAAOA,GAAA,CAAIK,OAAO,CAAC,QAAQ;EAG7B,OAAO,KAAKL,GAAA;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
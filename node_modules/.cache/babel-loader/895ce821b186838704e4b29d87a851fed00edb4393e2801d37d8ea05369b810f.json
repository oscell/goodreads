{"ast":null,"code":"import { ColorAreaContext as $4e85f108e88277b8$export$ebe63fadcdce34ed } from \"./RSPContexts.mjs\";\nimport { InternalColorThumbContext as $e2b71ec1d6016406$export$c80c0ea2ca5cb846 } from \"./ColorThumb.mjs\";\nimport { Provider as $64fa3d84918910a7$export$2881499e37b75b9a, useContextProps as $64fa3d84918910a7$export$29f1550f4b0d4415, useRenderProps as $64fa3d84918910a7$export$4d86445c2cf5e3 } from \"./utils.mjs\";\nimport { useColorAreaState as $xv8AM$useColorAreaState } from \"@react-stately/color\";\nimport { filterDOMProps as $xv8AM$filterDOMProps } from \"@react-aria/utils\";\nimport $xv8AM$react, { createContext as $xv8AM$createContext, useRef as $xv8AM$useRef, forwardRef as $xv8AM$forwardRef } from \"react\";\nimport { useColorArea as $xv8AM$useColorArea } from \"@react-aria/color\";\nconst $0de070065d44825d$export$6b32221de49982e = /*#__PURE__*/(0, $xv8AM$createContext)(null);\nfunction $0de070065d44825d$var$ColorArea(props, ref) {\n  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, (0, $4e85f108e88277b8$export$ebe63fadcdce34ed));\n  let inputXRef = (0, $xv8AM$useRef)(null);\n  let inputYRef = (0, $xv8AM$useRef)(null);\n  let state = (0, $xv8AM$useColorAreaState)(props);\n  let {\n    colorAreaProps: colorAreaProps,\n    xInputProps: xInputProps,\n    yInputProps: yInputProps,\n    thumbProps: thumbProps\n  } = (0, $xv8AM$useColorArea)({\n    ...props,\n    inputXRef: inputXRef,\n    inputYRef: inputYRef,\n    containerRef: ref\n  }, state);\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({\n    ...props,\n    defaultClassName: 'react-aria-ColorArea',\n    defaultStyle: colorAreaProps.style,\n    values: {\n      state: state,\n      isDisabled: props.isDisabled || false\n    }\n  });\n  let DOMProps = (0, $xv8AM$filterDOMProps)(props);\n  delete DOMProps.id;\n  return /*#__PURE__*/(0, $xv8AM$react).createElement(\"div\", {\n    ref: ref,\n    ...colorAreaProps,\n    ...DOMProps,\n    ...renderProps,\n    slot: props.slot || undefined,\n    \"data-disabled\": props.isDisabled || undefined\n  }, /*#__PURE__*/(0, $xv8AM$react).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {\n    values: [[$0de070065d44825d$export$6b32221de49982e, state], [(0, $e2b71ec1d6016406$export$c80c0ea2ca5cb846), {\n      state: state,\n      thumbProps: thumbProps,\n      inputXRef: inputXRef,\n      xInputProps: xInputProps,\n      inputYRef: inputYRef,\n      yInputProps: yInputProps,\n      isDisabled: props.isDisabled\n    }]]\n  }, renderProps.children));\n}\n/**\n * A color area allows users to adjust two channels of an RGB, HSL or HSB color value against a two-dimensional gradient background.\n */\nconst $0de070065d44825d$export$b2103f68a961418e = /*#__PURE__*/(0, $xv8AM$forwardRef)($0de070065d44825d$var$ColorArea);\nexport { $0de070065d44825d$export$6b32221de49982e as ColorAreaStateContext, $0de070065d44825d$export$b2103f68a961418e as ColorArea };","map":{"version":3,"names":["$0de070065d44825d$export$6b32221de49982e","$xv8AM$createContext","$0de070065d44825d$var$ColorArea","props","ref","$64fa3d84918910a7$export$29f1550f4b0d4415","$4e85f108e88277b8$export$ebe63fadcdce34ed","inputXRef","$xv8AM$useRef","inputYRef","state","$xv8AM$useColorAreaState","colorAreaProps","xInputProps","yInputProps","thumbProps","$xv8AM$useColorArea","containerRef","renderProps","$64fa3d84918910a7$export$4d86445c2cf5e3","defaultClassName","defaultStyle","style","values","isDisabled","DOMProps","$xv8AM$filterDOMProps","id","$xv8AM$react","createElement","slot","undefined","$64fa3d84918910a7$export$2881499e37b75b9a","$e2b71ec1d6016406$export$c80c0ea2ca5cb846","children","$0de070065d44825d$export$b2103f68a961418e","$xv8AM$forwardRef"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/react-aria-components/dist/packages/react-aria-components/src/ColorArea.tsx"],"sourcesContent":["import {AriaColorAreaProps} from '@react-types/color';\nimport {ColorAreaContext} from './RSPContexts';\nimport {ColorAreaState, useColorAreaState} from '@react-stately/color';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {InternalColorThumbContext} from './ColorThumb';\nimport {Provider, RenderProps, SlotProps, useContextProps, useRenderProps} from './utils';\nimport React, {createContext, ForwardedRef, forwardRef, useRef} from 'react';\nimport {useColorArea} from '@react-aria/color';\n\nexport interface ColorAreaRenderProps {\n  /**\n   * Whether the color area is disabled.\n   * @selector [data-disabled]\n   */\n  isDisabled: boolean,\n  /**\n   * State of the color area.\n   */\n  state: ColorAreaState\n}\n\nexport interface ColorAreaProps extends AriaColorAreaProps, RenderProps<ColorAreaRenderProps>, SlotProps {}\n\nexport const ColorAreaStateContext = createContext<ColorAreaState | null>(null);\n\nfunction ColorArea(props: ColorAreaProps, ref: ForwardedRef<HTMLDivElement>) {\n  [props, ref] = useContextProps(props, ref, ColorAreaContext);\n  let inputXRef = useRef(null);\n  let inputYRef = useRef(null);\n\n  let state = useColorAreaState(props);\n  let {\n    colorAreaProps,\n    xInputProps,\n    yInputProps,\n    thumbProps\n  } = useColorArea({\n    ...props,\n    inputXRef,\n    inputYRef,\n    containerRef: ref\n  }, state);\n\n  let renderProps = useRenderProps({\n    ...props,\n    defaultClassName: 'react-aria-ColorArea',\n    defaultStyle: colorAreaProps.style,\n    values: {\n      state,\n      isDisabled: props.isDisabled || false\n    }\n  });\n\n  let DOMProps = filterDOMProps(props);\n  delete DOMProps.id;\n\n  return (\n    <div\n      ref={ref}\n      {...colorAreaProps}\n      {...DOMProps}\n      {...renderProps}\n      slot={props.slot || undefined}\n      data-disabled={props.isDisabled || undefined}>\n      <Provider\n        values={[\n          [ColorAreaStateContext, state],\n          [InternalColorThumbContext, {state, thumbProps, inputXRef, xInputProps, inputYRef, yInputProps, isDisabled: props.isDisabled}]\n        ]}>\n        {renderProps.children}\n      </Provider>\n    </div>\n  );\n}\n\n/**\n * A color area allows users to adjust two channels of an RGB, HSL or HSB color value against a two-dimensional gradient background.\n */\nconst _ColorArea = forwardRef(ColorArea);\nexport {_ColorArea as ColorArea};\n"],"mappings":";;;;;;;AAuBO,MAAMA,wCAAA,gBAAwB,IAAAC,oBAAY,EAAyB;AAE1E,SAASC,gCAAUC,KAAqB,EAAEC,GAAiC;EACzE,CAACD,KAAA,EAAOC,GAAA,CAAI,GAAG,IAAAC,yCAAc,EAAEF,KAAA,EAAOC,GAAA,GAAK,GAAAE,yCAAe;EAC1D,IAAIC,SAAA,GAAY,IAAAC,aAAK,EAAE;EACvB,IAAIC,SAAA,GAAY,IAAAD,aAAK,EAAE;EAEvB,IAAIE,KAAA,GAAQ,IAAAC,wBAAgB,EAAER,KAAA;EAC9B,IAAI;IAAAS,cAAA,EACFA,cAAc;IAAAC,WAAA,EACdA,WAAW;IAAAC,WAAA,EACXA,WAAW;IAAAC,UAAA,EACXA;EAAU,CACX,GAAG,IAAAC,mBAAW,EAAE;IACf,GAAGb,KAAK;eACRI,SAAA;eACAE,SAAA;IACAQ,YAAA,EAAcb;EAChB,GAAGM,KAAA;EAEH,IAAIQ,WAAA,GAAc,IAAAC,uCAAa,EAAE;IAC/B,GAAGhB,KAAK;IACRiB,gBAAA,EAAkB;IAClBC,YAAA,EAAcT,cAAA,CAAeU,KAAK;IAClCC,MAAA,EAAQ;aACNb,KAAA;MACAc,UAAA,EAAYrB,KAAA,CAAMqB,UAAU,IAAI;IAClC;EACF;EAEA,IAAIC,QAAA,GAAW,IAAAC,qBAAa,EAAEvB,KAAA;EAC9B,OAAOsB,QAAA,CAASE,EAAE;EAElB,oBACE,IAAAC,YAAA,EAAAC,aAAA,CAAC;IACCzB,GAAA,EAAKA,GAAA;IACJ,GAAGQ,cAAc;IACjB,GAAGa,QAAQ;IACX,GAAGP,WAAW;IACfY,IAAA,EAAM3B,KAAA,CAAM2B,IAAI,IAAIC,SAAA;IACpB,iBAAe5B,KAAA,CAAMqB,UAAU,IAAIO;kBACnC,IAAAH,YAAA,EAAAC,aAAA,EAAC,GAAAG,yCAAO;IACNT,MAAA,EAAQ,CACN,CAACvB,wCAAA,EAAuBU,KAAA,CAAM,EAC9B,EAAC,GAAAuB,yCAAwB,GAAG;aAACvB,KAAA;kBAAOK,UAAA;iBAAYR,SAAA;mBAAWM,WAAA;iBAAaJ,SAAA;mBAAWK,WAAA;MAAaU,UAAA,EAAYrB,KAAA,CAAMqB;IAAU,EAAE;KAE/HN,WAAA,CAAYgB,QAAQ;AAI7B;AAEA;;;AAGA,MAAMC,yCAAA,gBAAa,IAAAC,iBAAS,EAAElC,+BAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { useDragSession as $67560de7c78cb232$export$418e185dd3f1b968 } from \"./DragManager.mjs\";\nimport $gKRvW$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport { useDragModality as $7252cd45fc48c07c$export$49bac5d6d4b352ea } from \"./utils.mjs\";\nimport { useDescription as $gKRvW$useDescription } from \"@react-aria/utils\";\nimport { useLocalizedStringFormatter as $gKRvW$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $224594fe3e57ff1e$var$MESSAGES = {\n  keyboard: 'dropDescriptionKeyboard',\n  touch: 'dropDescriptionTouch',\n  virtual: 'dropDescriptionVirtual'\n};\nfunction $224594fe3e57ff1e$export$62447ad3d2ec7da6() {\n  let stringFormatter = (0, $gKRvW$useLocalizedStringFormatter)((0, $parcel$interopDefault($gKRvW$intlStringsmodulejs)), '@react-aria/dnd');\n  let modality = (0, $7252cd45fc48c07c$export$49bac5d6d4b352ea)();\n  let dragSession = $67560de7c78cb232$export$418e185dd3f1b968();\n  let descriptionProps = (0, $gKRvW$useDescription)(dragSession ? stringFormatter.format($224594fe3e57ff1e$var$MESSAGES[modality]) : '');\n  return {\n    dropProps: {\n      ...descriptionProps,\n      // Mobile Safari does not properly bubble click events on elements except links or inputs\n      // unless there is an onclick handler bound directly to the element itself. By adding this\n      // handler, React will take care of adding that for us, and we are able to handle document\n      // level click events in the DragManager.\n      // See https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n      onClick: () => {}\n    }\n  };\n}\nexport { $224594fe3e57ff1e$export$62447ad3d2ec7da6 as useVirtualDrop };","map":{"version":3,"names":["$224594fe3e57ff1e$var$MESSAGES","keyboard","touch","virtual","$224594fe3e57ff1e$export$62447ad3d2ec7da6","stringFormatter","$gKRvW$useLocalizedStringFormatter","$parcel$interopDefault","$gKRvW$intlStringsmodulejs","modality","$7252cd45fc48c07c$export$49bac5d6d4b352ea","dragSession","$67560de7c78cb232$export$418e185dd3f1b968","descriptionProps","$gKRvW$useDescription","format","dropProps","onClick"],"sources":["/Users/oscar.meunier/Documents/Coding/Personal/final/goodreads/node_modules/@react-aria/dnd/dist/packages/@react-aria/dnd/src/useVirtualDrop.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport * as DragManager from './DragManager';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {useDescription} from '@react-aria/utils';\nimport {useDragModality} from './utils';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\n\ninterface VirtualDropResult {\n  dropProps: DOMAttributes\n}\n\nconst MESSAGES = {\n  keyboard: 'dropDescriptionKeyboard',\n  touch: 'dropDescriptionTouch',\n  virtual: 'dropDescriptionVirtual'\n};\n\nexport function useVirtualDrop(): VirtualDropResult {\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/dnd');\n  let modality = useDragModality();\n  let dragSession = DragManager.useDragSession();\n  let descriptionProps = useDescription(dragSession ? stringFormatter.format(MESSAGES[modality]) : '');\n\n  return {\n    dropProps: {\n      ...descriptionProps,\n      // Mobile Safari does not properly bubble click events on elements except links or inputs\n      // unless there is an onclick handler bound directly to the element itself. By adding this\n      // handler, React will take care of adding that for us, and we are able to handle document\n      // level click events in the DragManager.\n      // See https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n      onClick: () => {}\n    }\n  };\n}\n"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;AAwBA,MAAMA,8BAAA,GAAW;EACfC,QAAA,EAAU;EACVC,KAAA,EAAO;EACPC,OAAA,EAAS;AACX;AAEO,SAASC,0CAAA;EACd,IAAIC,eAAA,GAAkB,IAAAC,kCAA0B,GAAE,GAAAC,sBAAA,CAAAC,0BAAA,CAAW,GAAG;EAChE,IAAIC,QAAA,GAAW,IAAAC,yCAAc;EAC7B,IAAIC,WAAA,GAAcC,yCAAA;EAClB,IAAIC,gBAAA,GAAmB,IAAAC,qBAAa,EAAEH,WAAA,GAAcN,eAAA,CAAgBU,MAAM,CAACf,8BAAQ,CAACS,QAAA,CAAS,IAAI;EAEjG,OAAO;IACLO,SAAA,EAAW;MACT,GAAGH,gBAAgB;MACnB;MACA;MACA;MACA;MACA;MACAI,OAAA,EAASA,CAAA,MAAO;IAClB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { CollectionRendererContext as $7135fc7d473fd974$export$4feb769f8ddf26c5, SectionContext as $7135fc7d473fd974$export$d40e14dec8b060a8 } from \"./Collection.mjs\";\nimport { Provider as $64fa3d84918910a7$export$2881499e37b75b9a, useContextProps as $64fa3d84918910a7$export$29f1550f4b0d4415, useRenderProps as $64fa3d84918910a7$export$4d86445c2cf5e3, useSlot as $64fa3d84918910a7$export$9d4c57ee4c6ffdd8 } from \"./utils.mjs\";\nimport { DragAndDropContext as $612b8eb6cb90e02d$export$d188a835a7bc5783, DropIndicatorContext as $612b8eb6cb90e02d$export$f55761759794cf55, useDndPersistedKeys as $612b8eb6cb90e02d$export$d1e8e3fbb7461f6, useRenderDropIndicator as $612b8eb6cb90e02d$export$971707d8a129a1f7 } from \"./DragAndDrop.mjs\";\nimport { HeaderContext as $72a5793c14baf454$export$e0e4026c12a8bdbb } from \"./Header.mjs\";\nimport { SeparatorContext as $431f98aba6844401$export$6615d83f6de245ce } from \"./Separator.mjs\";\nimport { TextContext as $514c0188e459b4c0$export$9afb8bc826b033ea } from \"./Text.mjs\";\nimport { useLocale as $e8Bmu$useLocale, useCollator as $e8Bmu$useCollator, ListKeyboardDelegate as $e8Bmu$ListKeyboardDelegate, useListBox as $e8Bmu$useListBox, useFocusRing as $e8Bmu$useFocusRing, FocusScope as $e8Bmu$FocusScope, mergeProps as $e8Bmu$mergeProps, useListBoxSection as $e8Bmu$useListBoxSection, useOption as $e8Bmu$useOption, useHover as $e8Bmu$useHover } from \"react-aria\";\nimport { CollectionBuilder as $e8Bmu$CollectionBuilder, Collection as $e8Bmu$Collection, createLeafComponent as $e8Bmu$createLeafComponent } from \"@react-aria/collections\";\nimport { useListState as $e8Bmu$useListState } from \"react-stately\";\nimport { filterDOMProps as $e8Bmu$filterDOMProps, useObjectRef as $e8Bmu$useObjectRef } from \"@react-aria/utils\";\nimport $e8Bmu$react, { createContext as $e8Bmu$createContext, useContext as $e8Bmu$useContext, forwardRef as $e8Bmu$forwardRef, useMemo as $e8Bmu$useMemo, useRef as $e8Bmu$useRef, useEffect as $e8Bmu$useEffect } from \"react\";\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $eed445e0843c11d0$export$7ff8f37d2d81a48d = /*#__PURE__*/(0, $e8Bmu$createContext)(null);\nconst $eed445e0843c11d0$export$7c5906fe4f1f2af2 = /*#__PURE__*/(0, $e8Bmu$createContext)(null);\nfunction $eed445e0843c11d0$var$ListBox(props, ref) {\n  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $eed445e0843c11d0$export$7ff8f37d2d81a48d);\n  let state = (0, $e8Bmu$useContext)($eed445e0843c11d0$export$7c5906fe4f1f2af2);\n  // The structure of ListBox is a bit strange because it needs to work inside other components like ComboBox and Select.\n  // Those components render two copies of their children so that the collection can be built even when the popover is closed.\n  // The first copy sends a collection document via context which we render the collection portal into.\n  // The second copy sends a ListState object via context which we use to render the ListBox without rebuilding the state.\n  // Otherwise, we have a standalone ListBox, so we need to create a collection and state ourselves.\n  if (state) return /*#__PURE__*/(0, $e8Bmu$react).createElement($eed445e0843c11d0$var$ListBoxInner, {\n    state: state,\n    props: props,\n    listBoxRef: ref\n  });\n  return /*#__PURE__*/(0, $e8Bmu$react).createElement((0, $e8Bmu$CollectionBuilder), {\n    content: /*#__PURE__*/(0, $e8Bmu$react).createElement((0, $e8Bmu$Collection), props)\n  }, collection => /*#__PURE__*/(0, $e8Bmu$react).createElement($eed445e0843c11d0$var$StandaloneListBox, {\n    props: props,\n    listBoxRef: ref,\n    collection: collection\n  }));\n}\nfunction $eed445e0843c11d0$var$StandaloneListBox({\n  props: props,\n  listBoxRef: listBoxRef,\n  collection: collection\n}) {\n  props = {\n    ...props,\n    collection: collection,\n    children: null,\n    items: null\n  };\n  let {\n    layoutDelegate: layoutDelegate\n  } = (0, $e8Bmu$useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));\n  let state = (0, $e8Bmu$useListState)({\n    ...props,\n    layoutDelegate: layoutDelegate\n  });\n  return /*#__PURE__*/(0, $e8Bmu$react).createElement($eed445e0843c11d0$var$ListBoxInner, {\n    state: state,\n    props: props,\n    listBoxRef: listBoxRef\n  });\n}\n/**\n * A listbox displays a list of options and allows a user to select one or more of them.\n */\nconst $eed445e0843c11d0$export$41f133550aa26f48 = /*#__PURE__*/(0, $e8Bmu$forwardRef)($eed445e0843c11d0$var$ListBox);\nfunction $eed445e0843c11d0$var$ListBoxInner({\n  state: state,\n  props: props,\n  listBoxRef: listBoxRef\n}) {\n  let {\n    dragAndDropHooks: dragAndDropHooks,\n    layout = 'stack',\n    orientation = 'vertical'\n  } = props;\n  let {\n    collection: collection,\n    selectionManager: selectionManager\n  } = state;\n  let isListDraggable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDraggableCollectionState);\n  let isListDroppable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDroppableCollectionState);\n  let {\n    direction: direction\n  } = (0, $e8Bmu$useLocale)();\n  let {\n    disabledBehavior: disabledBehavior,\n    disabledKeys: disabledKeys\n  } = selectionManager;\n  let collator = (0, $e8Bmu$useCollator)({\n    usage: 'search',\n    sensitivity: 'base'\n  });\n  let {\n    isVirtualized: isVirtualized,\n    layoutDelegate: layoutDelegate,\n    dropTargetDelegate: ctxDropTargetDelegate,\n    CollectionRoot: CollectionRoot\n  } = (0, $e8Bmu$useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));\n  let keyboardDelegate = (0, $e8Bmu$useMemo)(() => props.keyboardDelegate || new (0, $e8Bmu$ListKeyboardDelegate)({\n    collection: collection,\n    collator: collator,\n    ref: listBoxRef,\n    disabledKeys: disabledKeys,\n    disabledBehavior: disabledBehavior,\n    layout: layout,\n    orientation: orientation,\n    direction: direction,\n    layoutDelegate: layoutDelegate\n  }), [collection, collator, listBoxRef, disabledBehavior, disabledKeys, orientation, direction, props.keyboardDelegate, layout, layoutDelegate]);\n  let {\n    listBoxProps: listBoxProps\n  } = (0, $e8Bmu$useListBox)({\n    ...props,\n    shouldSelectOnPressUp: isListDraggable || props.shouldSelectOnPressUp,\n    keyboardDelegate: keyboardDelegate,\n    isVirtualized: isVirtualized\n  }, state, listBoxRef);\n  let dragHooksProvided = (0, $e8Bmu$useRef)(isListDraggable);\n  let dropHooksProvided = (0, $e8Bmu$useRef)(isListDroppable);\n  (0, $e8Bmu$useEffect)(() => {\n    if (dragHooksProvided.current !== isListDraggable) console.warn('Drag hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.');\n    if (dropHooksProvided.current !== isListDroppable) console.warn('Drop hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.');\n  }, [isListDraggable, isListDroppable]);\n  let dragState = undefined;\n  let dropState = undefined;\n  let droppableCollection = undefined;\n  let isRootDropTarget = false;\n  let dragPreview = null;\n  let preview = (0, $e8Bmu$useRef)(null);\n  if (isListDraggable && dragAndDropHooks) {\n    dragState = dragAndDropHooks.useDraggableCollectionState({\n      collection: collection,\n      selectionManager: selectionManager,\n      preview: dragAndDropHooks.renderDragPreview ? preview : undefined\n    });\n    dragAndDropHooks.useDraggableCollection({}, dragState, listBoxRef);\n    let DragPreview = dragAndDropHooks.DragPreview;\n    dragPreview = dragAndDropHooks.renderDragPreview ? /*#__PURE__*/(0, $e8Bmu$react).createElement(DragPreview, {\n      ref: preview\n    }, dragAndDropHooks.renderDragPreview) : null;\n  }\n  if (isListDroppable && dragAndDropHooks) {\n    dropState = dragAndDropHooks.useDroppableCollectionState({\n      collection: collection,\n      selectionManager: selectionManager\n    });\n    let dropTargetDelegate = dragAndDropHooks.dropTargetDelegate || ctxDropTargetDelegate || new dragAndDropHooks.ListDropTargetDelegate(collection, listBoxRef, {\n      orientation: orientation,\n      layout: layout,\n      direction: direction\n    });\n    droppableCollection = dragAndDropHooks.useDroppableCollection({\n      keyboardDelegate: keyboardDelegate,\n      dropTargetDelegate: dropTargetDelegate\n    }, dropState, listBoxRef);\n    isRootDropTarget = dropState.isDropTarget({\n      type: 'root'\n    });\n  }\n  let {\n    focusProps: focusProps,\n    isFocused: isFocused,\n    isFocusVisible: isFocusVisible\n  } = (0, $e8Bmu$useFocusRing)();\n  let renderValues = {\n    isDropTarget: isRootDropTarget,\n    isEmpty: state.collection.size === 0,\n    isFocused: isFocused,\n    isFocusVisible: isFocusVisible,\n    layout: props.layout || 'stack',\n    state: state\n  };\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({\n    className: props.className,\n    style: props.style,\n    defaultClassName: 'react-aria-ListBox',\n    values: renderValues\n  });\n  let emptyState = null;\n  if (state.collection.size === 0 && props.renderEmptyState) emptyState = /*#__PURE__*/(0, $e8Bmu$react).createElement(\"div\", {\n    // eslint-disable-next-line\n    role: \"option\",\n    style: {\n      display: 'contents'\n    }\n  }, props.renderEmptyState(renderValues));\n  return /*#__PURE__*/(0, $e8Bmu$react).createElement((0, $e8Bmu$FocusScope), null, /*#__PURE__*/(0, $e8Bmu$react).createElement(\"div\", {\n    ...(0, $e8Bmu$filterDOMProps)(props),\n    ...(0, $e8Bmu$mergeProps)(listBoxProps, focusProps, droppableCollection === null || droppableCollection === void 0 ? void 0 : droppableCollection.collectionProps),\n    ...renderProps,\n    ref: listBoxRef,\n    slot: props.slot || undefined,\n    onScroll: props.onScroll,\n    \"data-drop-target\": isRootDropTarget || undefined,\n    \"data-empty\": state.collection.size === 0 || undefined,\n    \"data-focused\": isFocused || undefined,\n    \"data-focus-visible\": isFocusVisible || undefined,\n    \"data-layout\": props.layout || 'stack',\n    \"data-orientation\": props.orientation || 'vertical'\n  }, /*#__PURE__*/(0, $e8Bmu$react).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {\n    values: [[$eed445e0843c11d0$export$7ff8f37d2d81a48d, props], [$eed445e0843c11d0$export$7c5906fe4f1f2af2, state], [(0, $612b8eb6cb90e02d$export$d188a835a7bc5783), {\n      dragAndDropHooks: dragAndDropHooks,\n      dragState: dragState,\n      dropState: dropState\n    }], [(0, $431f98aba6844401$export$6615d83f6de245ce), {\n      elementType: 'div'\n    }], [(0, $612b8eb6cb90e02d$export$f55761759794cf55), {\n      render: $eed445e0843c11d0$var$ListBoxDropIndicatorWrapper\n    }], [(0, $7135fc7d473fd974$export$d40e14dec8b060a8), {\n      render: $eed445e0843c11d0$var$ListBoxSection\n    }]]\n  }, /*#__PURE__*/(0, $e8Bmu$react).createElement(CollectionRoot, {\n    collection: collection,\n    scrollRef: listBoxRef,\n    persistedKeys: (0, $612b8eb6cb90e02d$export$d1e8e3fbb7461f6)(selectionManager, dragAndDropHooks, dropState),\n    renderDropIndicator: (0, $612b8eb6cb90e02d$export$971707d8a129a1f7)(dragAndDropHooks, dropState)\n  })), emptyState, dragPreview));\n}\nfunction $eed445e0843c11d0$var$ListBoxSection(props, ref, section) {\n  let state = (0, $e8Bmu$useContext)($eed445e0843c11d0$export$7c5906fe4f1f2af2);\n  let {\n    dragAndDropHooks: dragAndDropHooks,\n    dropState: dropState\n  } = (0, $e8Bmu$useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));\n  let {\n    CollectionBranch: CollectionBranch\n  } = (0, $e8Bmu$useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));\n  let [headingRef, heading] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();\n  var _props_arialabel;\n  let {\n    headingProps: headingProps,\n    groupProps: groupProps\n  } = (0, $e8Bmu$useListBoxSection)({\n    heading: heading,\n    'aria-label': (_props_arialabel = props['aria-label']) !== null && _props_arialabel !== void 0 ? _props_arialabel : undefined\n  });\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({\n    defaultClassName: 'react-aria-Section',\n    className: props.className,\n    style: props.style,\n    values: {}\n  });\n  return /*#__PURE__*/(0, $e8Bmu$react).createElement(\"section\", {\n    ...(0, $e8Bmu$filterDOMProps)(props),\n    ...groupProps,\n    ...renderProps,\n    ref: ref\n  }, /*#__PURE__*/(0, $e8Bmu$react).createElement((0, $72a5793c14baf454$export$e0e4026c12a8bdbb).Provider, {\n    value: {\n      ...headingProps,\n      ref: headingRef\n    }\n  }, /*#__PURE__*/(0, $e8Bmu$react).createElement(CollectionBranch, {\n    collection: state.collection,\n    parent: section,\n    renderDropIndicator: (0, $612b8eb6cb90e02d$export$971707d8a129a1f7)(dragAndDropHooks, dropState)\n  })));\n}\nconst $eed445e0843c11d0$export$a11e76429ed99b4 = /*#__PURE__*/(0, $e8Bmu$createLeafComponent)('item', function ListBoxItem(props, forwardedRef, item) {\n  let ref = (0, $e8Bmu$useObjectRef)(forwardedRef);\n  let state = (0, $e8Bmu$useContext)($eed445e0843c11d0$export$7c5906fe4f1f2af2);\n  let {\n    dragAndDropHooks: dragAndDropHooks,\n    dragState: dragState,\n    dropState: dropState\n  } = (0, $e8Bmu$useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));\n  let {\n    optionProps: optionProps,\n    labelProps: labelProps,\n    descriptionProps: descriptionProps,\n    ...states\n  } = (0, $e8Bmu$useOption)({\n    key: item.key,\n    'aria-label': props === null || props === void 0 ? void 0 : props['aria-label']\n  }, state, ref);\n  let {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  } = (0, $e8Bmu$useHover)({\n    isDisabled: !states.allowsSelection && !states.hasAction,\n    onHoverStart: item.props.onHoverStart,\n    onHoverChange: item.props.onHoverChange,\n    onHoverEnd: item.props.onHoverEnd\n  });\n  let draggableItem = null;\n  if (dragState && dragAndDropHooks) draggableItem = dragAndDropHooks.useDraggableItem({\n    key: item.key\n  }, dragState);\n  let droppableItem = null;\n  if (dropState && dragAndDropHooks) droppableItem = dragAndDropHooks.useDroppableItem({\n    target: {\n      type: 'item',\n      key: item.key,\n      dropPosition: 'on'\n    }\n  }, dropState, ref);\n  let isDragging = dragState && dragState.isDragging(item.key);\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({\n    ...props,\n    id: undefined,\n    children: props.children,\n    defaultClassName: 'react-aria-ListBoxItem',\n    values: {\n      ...states,\n      isHovered: isHovered,\n      selectionMode: state.selectionManager.selectionMode,\n      selectionBehavior: state.selectionManager.selectionBehavior,\n      allowsDragging: !!dragState,\n      isDragging: isDragging,\n      isDropTarget: droppableItem === null || droppableItem === void 0 ? void 0 : droppableItem.isDropTarget\n    }\n  });\n  (0, $e8Bmu$useEffect)(() => {\n    if (!item.textValue) console.warn('A `textValue` prop is required for <ListBoxItem> elements with non-plain text children in order to support accessibility features such as type to select.');\n  }, [item.textValue]);\n  let ElementType = props.href ? 'a' : 'div';\n  return /*#__PURE__*/(0, $e8Bmu$react).createElement(ElementType, {\n    ...(0, $e8Bmu$mergeProps)(optionProps, hoverProps, draggableItem === null || draggableItem === void 0 ? void 0 : draggableItem.dragProps, droppableItem === null || droppableItem === void 0 ? void 0 : droppableItem.dropProps),\n    ...renderProps,\n    ref: ref,\n    \"data-allows-dragging\": !!dragState || undefined,\n    \"data-selected\": states.isSelected || undefined,\n    \"data-disabled\": states.isDisabled || undefined,\n    \"data-hovered\": isHovered || undefined,\n    \"data-focused\": states.isFocused || undefined,\n    \"data-focus-visible\": states.isFocusVisible || undefined,\n    \"data-pressed\": states.isPressed || undefined,\n    \"data-dragging\": isDragging || undefined,\n    \"data-drop-target\": (droppableItem === null || droppableItem === void 0 ? void 0 : droppableItem.isDropTarget) || undefined,\n    \"data-selection-mode\": state.selectionManager.selectionMode === 'none' ? undefined : state.selectionManager.selectionMode\n  }, /*#__PURE__*/(0, $e8Bmu$react).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {\n    values: [[(0, $514c0188e459b4c0$export$9afb8bc826b033ea), {\n      slots: {\n        label: labelProps,\n        description: descriptionProps\n      }\n    }]]\n  }, renderProps.children));\n});\nfunction $eed445e0843c11d0$var$ListBoxDropIndicatorWrapper(props, ref) {\n  ref = (0, $e8Bmu$useObjectRef)(ref);\n  let {\n    dragAndDropHooks: dragAndDropHooks,\n    dropState: dropState\n  } = (0, $e8Bmu$useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));\n  let {\n    dropIndicatorProps: dropIndicatorProps,\n    isHidden: isHidden,\n    isDropTarget: isDropTarget\n  } = dragAndDropHooks.useDropIndicator(props, dropState, ref);\n  if (isHidden) return null;\n  return /*#__PURE__*/(0, $e8Bmu$react).createElement($eed445e0843c11d0$var$ListBoxDropIndicatorForwardRef, {\n    ...props,\n    dropIndicatorProps: dropIndicatorProps,\n    isDropTarget: isDropTarget,\n    ref: ref\n  });\n}\nfunction $eed445e0843c11d0$var$ListBoxDropIndicator(props, ref) {\n  let {\n    dropIndicatorProps: dropIndicatorProps,\n    isDropTarget: isDropTarget,\n    ...otherProps\n  } = props;\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({\n    ...otherProps,\n    defaultClassName: 'react-aria-DropIndicator',\n    values: {\n      isDropTarget: isDropTarget\n    }\n  });\n  return /*#__PURE__*/(0, $e8Bmu$react).createElement(\"div\", {\n    ...dropIndicatorProps,\n    ...renderProps,\n    // eslint-disable-next-line\n    role: \"option\",\n    ref: ref,\n    \"data-drop-target\": isDropTarget || undefined\n  });\n}\nconst $eed445e0843c11d0$var$ListBoxDropIndicatorForwardRef = /*#__PURE__*/(0, $e8Bmu$forwardRef)($eed445e0843c11d0$var$ListBoxDropIndicator);\nexport { $eed445e0843c11d0$export$7ff8f37d2d81a48d as ListBoxContext, $eed445e0843c11d0$export$7c5906fe4f1f2af2 as ListStateContext, $eed445e0843c11d0$export$41f133550aa26f48 as ListBox, $eed445e0843c11d0$export$a11e76429ed99b4 as ListBoxItem };","map":{"version":3,"names":["$eed445e0843c11d0$export$7ff8f37d2d81a48d","$e8Bmu$createContext","$eed445e0843c11d0$export$7c5906fe4f1f2af2","$eed445e0843c11d0$var$ListBox","props","ref","$64fa3d84918910a7$export$29f1550f4b0d4415","state","$e8Bmu$useContext","$e8Bmu$react","createElement","$eed445e0843c11d0$var$ListBoxInner","listBoxRef","$e8Bmu$CollectionBuilder","content","$e8Bmu$Collection","collection","$eed445e0843c11d0$var$StandaloneListBox","children","items","layoutDelegate","$7135fc7d473fd974$export$4feb769f8ddf26c5","$e8Bmu$useListState","$eed445e0843c11d0$export$41f133550aa26f48","$e8Bmu$forwardRef","dragAndDropHooks","layout","orientation","selectionManager","isListDraggable","useDraggableCollectionState","isListDroppable","useDroppableCollectionState","direction","$e8Bmu$useLocale","disabledBehavior","disabledKeys","collator","$e8Bmu$useCollator","usage","sensitivity","isVirtualized","dropTargetDelegate","ctxDropTargetDelegate","CollectionRoot","keyboardDelegate","$e8Bmu$useMemo","$e8Bmu$ListKeyboardDelegate","listBoxProps","$e8Bmu$useListBox","shouldSelectOnPressUp","dragHooksProvided","$e8Bmu$useRef","dropHooksProvided","$e8Bmu$useEffect","current","console","warn","dragState","undefined","dropState","droppableCollection","isRootDropTarget","dragPreview","preview","renderDragPreview","useDraggableCollection","DragPreview","ListDropTargetDelegate","useDroppableCollection","isDropTarget","type","focusProps","isFocused","isFocusVisible","$e8Bmu$useFocusRing","renderValues","isEmpty","size","renderProps","$64fa3d84918910a7$export$4d86445c2cf5e3","className","style","defaultClassName","values","emptyState","renderEmptyState","role","display","$e8Bmu$FocusScope","$e8Bmu$filterDOMProps","$e8Bmu$mergeProps","collectionProps","slot","onScroll","$64fa3d84918910a7$export$2881499e37b75b9a","$612b8eb6cb90e02d$export$d188a835a7bc5783","$431f98aba6844401$export$6615d83f6de245ce","elementType","$612b8eb6cb90e02d$export$f55761759794cf55","render","$eed445e0843c11d0$var$ListBoxDropIndicatorWrapper","$7135fc7d473fd974$export$d40e14dec8b060a8","$eed445e0843c11d0$var$ListBoxSection","scrollRef","persistedKeys","$612b8eb6cb90e02d$export$d1e8e3fbb7461f6","renderDropIndicator","$612b8eb6cb90e02d$export$971707d8a129a1f7","section","CollectionBranch","headingRef","heading","$64fa3d84918910a7$export$9d4c57ee4c6ffdd8","_props_arialabel","headingProps","groupProps","$e8Bmu$useListBoxSection","$72a5793c14baf454$export$e0e4026c12a8bdbb","Provider","value","parent","$eed445e0843c11d0$export$a11e76429ed99b4","$e8Bmu$createLeafComponent","ListBoxItem","forwardedRef","item","$e8Bmu$useObjectRef","optionProps","labelProps","descriptionProps","states","$e8Bmu$useOption","key","hoverProps","isHovered","$e8Bmu$useHover","isDisabled","allowsSelection","hasAction","onHoverStart","onHoverChange","onHoverEnd","draggableItem","useDraggableItem","droppableItem","useDroppableItem","target","dropPosition","isDragging","id","selectionMode","selectionBehavior","allowsDragging","textValue","ElementType","href","dragProps","dropProps","isSelected","isPressed","$514c0188e459b4c0$export$9afb8bc826b033ea","slots","label","description","dropIndicatorProps","isHidden","useDropIndicator","$eed445e0843c11d0$var$ListBoxDropIndicatorForwardRef","$eed445e0843c11d0$var$ListBoxDropIndicator","otherProps"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/react-aria-components/dist/packages/react-aria-components/src/ListBox.tsx"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaListBoxOptions, AriaListBoxProps, DraggableItemResult, DragPreviewRenderer, DroppableCollectionResult, DroppableItemResult, FocusScope, ListKeyboardDelegate, mergeProps, useCollator, useFocusRing, useHover, useListBox, useListBoxSection, useLocale, useOption} from 'react-aria';\nimport {Collection, CollectionBuilder, createLeafComponent} from '@react-aria/collections';\nimport {CollectionProps, CollectionRendererContext, ItemRenderProps, SectionContext, SectionProps} from './Collection';\nimport {ContextValue, Provider, RenderProps, ScrollableProps, SlotProps, StyleRenderProps, useContextProps, useRenderProps, useSlot} from './utils';\nimport {DragAndDropContext, DropIndicatorContext, DropIndicatorProps, useDndPersistedKeys, useRenderDropIndicator} from './DragAndDrop';\nimport {DragAndDropHooks} from './useDragAndDrop';\nimport {DraggableCollectionState, DroppableCollectionState, ListState, Node, Orientation, SelectionBehavior, useListState} from 'react-stately';\nimport {filterDOMProps, useObjectRef} from '@react-aria/utils';\nimport {forwardRefType, HoverEvents, Key, LinkDOMProps, RefObject} from '@react-types/shared';\nimport {HeaderContext} from './Header';\nimport React, {createContext, ForwardedRef, forwardRef, JSX, ReactNode, useContext, useEffect, useMemo, useRef} from 'react';\nimport {SeparatorContext} from './Separator';\nimport {TextContext} from './Text';\n\nexport interface ListBoxRenderProps {\n  /**\n   * Whether the listbox has no items and should display its empty state.\n   * @selector [data-empty]\n   */\n  isEmpty: boolean,\n  /**\n   * Whether the listbox is currently focused.\n   * @selector [data-focused]\n   */\n  isFocused: boolean,\n  /**\n   * Whether the listbox is currently keyboard focused.\n   * @selector [data-focus-visible]\n   */\n  isFocusVisible: boolean,\n  /**\n   * Whether the listbox is currently the active drop target.\n   * @selector [data-drop-target]\n   */\n  isDropTarget: boolean,\n  /**\n   * Whether the items are arranged in a stack or grid.\n   * @selector [data-layout=\"stack | grid\"]\n   */\n  layout: 'stack' | 'grid',\n  /**\n   * State of the listbox.\n   */\n  state: ListState<unknown>\n}\n\nexport interface ListBoxProps<T> extends Omit<AriaListBoxProps<T>, 'children' | 'label'>, CollectionProps<T>, StyleRenderProps<ListBoxRenderProps>, SlotProps, ScrollableProps<HTMLDivElement> {\n  /** How multiple selection should behave in the collection. */\n  selectionBehavior?: SelectionBehavior,\n  /** The drag and drop hooks returned by `useDragAndDrop` used to enable drag and drop behavior for the ListBox. */\n  dragAndDropHooks?: DragAndDropHooks,\n  /** Provides content to display when there are no items in the list. */\n  renderEmptyState?: (props: ListBoxRenderProps) => ReactNode,\n  /**\n   * Whether the items are arranged in a stack or grid.\n   * @default 'stack'\n   */\n  layout?: 'stack' | 'grid',\n  /**\n   * The primary orientation of the items. Usually this is the\n   * direction that the collection scrolls.\n   * @default 'vertical'\n   */\n  orientation?: Orientation\n}\n\nexport const ListBoxContext = createContext<ContextValue<ListBoxProps<any>, HTMLDivElement>>(null);\nexport const ListStateContext = createContext<ListState<any> | null>(null);\n\nfunction ListBox<T extends object>(props: ListBoxProps<T>, ref: ForwardedRef<HTMLDivElement>) {\n  [props, ref] = useContextProps(props, ref, ListBoxContext);\n  let state = useContext(ListStateContext);\n\n  // The structure of ListBox is a bit strange because it needs to work inside other components like ComboBox and Select.\n  // Those components render two copies of their children so that the collection can be built even when the popover is closed.\n  // The first copy sends a collection document via context which we render the collection portal into.\n  // The second copy sends a ListState object via context which we use to render the ListBox without rebuilding the state.\n  // Otherwise, we have a standalone ListBox, so we need to create a collection and state ourselves.\n\n  if (state) {\n    return <ListBoxInner state={state} props={props} listBoxRef={ref} />;\n  }\n\n  return (\n    <CollectionBuilder content={<Collection {...props} />}>\n      {collection => <StandaloneListBox props={props} listBoxRef={ref} collection={collection} />}\n    </CollectionBuilder>\n  );\n}\n\nfunction StandaloneListBox({props, listBoxRef, collection}) {\n  props = {...props, collection, children: null, items: null};\n  let {layoutDelegate} = useContext(CollectionRendererContext);\n  let state = useListState({...props, layoutDelegate});\n  return <ListBoxInner state={state} props={props} listBoxRef={listBoxRef} />;\n}\n\n/**\n * A listbox displays a list of options and allows a user to select one or more of them.\n */\nconst _ListBox = /*#__PURE__*/ (forwardRef as forwardRefType)(ListBox);\nexport {_ListBox as ListBox};\n\ninterface ListBoxInnerProps<T> {\n  state: ListState<T>,\n  props: ListBoxProps<T> & AriaListBoxOptions<T>,\n  listBoxRef: RefObject<HTMLDivElement | null>\n}\n\nfunction ListBoxInner<T extends object>({state, props, listBoxRef}: ListBoxInnerProps<T>) {\n  let {dragAndDropHooks, layout = 'stack', orientation = 'vertical'} = props;\n  let {collection, selectionManager} = state;\n  let isListDraggable = !!dragAndDropHooks?.useDraggableCollectionState;\n  let isListDroppable = !!dragAndDropHooks?.useDroppableCollectionState;\n  let {direction} = useLocale();\n  let {disabledBehavior, disabledKeys} = selectionManager;\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let {isVirtualized, layoutDelegate, dropTargetDelegate: ctxDropTargetDelegate, CollectionRoot} = useContext(CollectionRendererContext);\n  let keyboardDelegate = useMemo(() => (\n    props.keyboardDelegate || new ListKeyboardDelegate({\n      collection,\n      collator,\n      ref: listBoxRef,\n      disabledKeys,\n      disabledBehavior,\n      layout,\n      orientation,\n      direction,\n      layoutDelegate\n    })\n  ), [collection, collator, listBoxRef, disabledBehavior, disabledKeys, orientation, direction, props.keyboardDelegate, layout, layoutDelegate]);\n\n  let {listBoxProps} = useListBox({\n    ...props,\n    shouldSelectOnPressUp: isListDraggable || props.shouldSelectOnPressUp,\n    keyboardDelegate,\n    isVirtualized\n  }, state, listBoxRef);\n\n  let dragHooksProvided = useRef(isListDraggable);\n  let dropHooksProvided = useRef(isListDroppable);\n  useEffect(() => {\n    if (dragHooksProvided.current !== isListDraggable) {\n      console.warn('Drag hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.');\n    }\n    if (dropHooksProvided.current !== isListDroppable) {\n      console.warn('Drop hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.');\n    }\n  }, [isListDraggable, isListDroppable]);\n\n  let dragState: DraggableCollectionState | undefined = undefined;\n  let dropState: DroppableCollectionState | undefined = undefined;\n  let droppableCollection: DroppableCollectionResult | undefined = undefined;\n  let isRootDropTarget = false;\n  let dragPreview: JSX.Element | null = null;\n  let preview = useRef<DragPreviewRenderer>(null);\n\n  if (isListDraggable && dragAndDropHooks) {\n    dragState = dragAndDropHooks.useDraggableCollectionState!({\n      collection,\n      selectionManager,\n      preview: dragAndDropHooks.renderDragPreview ? preview : undefined\n    });\n    dragAndDropHooks.useDraggableCollection!({}, dragState, listBoxRef);\n\n    let DragPreview = dragAndDropHooks.DragPreview!;\n    dragPreview = dragAndDropHooks.renderDragPreview\n      ? <DragPreview ref={preview}>{dragAndDropHooks.renderDragPreview}</DragPreview>\n      : null;\n  }\n\n  if (isListDroppable && dragAndDropHooks) {\n    dropState = dragAndDropHooks.useDroppableCollectionState!({\n      collection,\n      selectionManager\n    });\n\n    let dropTargetDelegate = dragAndDropHooks.dropTargetDelegate || ctxDropTargetDelegate || new dragAndDropHooks.ListDropTargetDelegate(collection, listBoxRef, {orientation, layout, direction});\n    droppableCollection = dragAndDropHooks.useDroppableCollection!({\n      keyboardDelegate,\n      dropTargetDelegate\n    }, dropState, listBoxRef);\n\n    isRootDropTarget = dropState.isDropTarget({type: 'root'});\n  }\n\n  let {focusProps, isFocused, isFocusVisible} = useFocusRing();\n  let renderValues = {\n    isDropTarget: isRootDropTarget,\n    isEmpty: state.collection.size === 0,\n    isFocused,\n    isFocusVisible,\n    layout: props.layout || 'stack',\n    state\n  };\n  let renderProps = useRenderProps({\n    className: props.className,\n    style: props.style,\n    defaultClassName: 'react-aria-ListBox',\n    values: renderValues\n  });\n\n  let emptyState: JSX.Element | null = null;\n  if (state.collection.size === 0 && props.renderEmptyState) {\n    emptyState = (\n      <div\n        // eslint-disable-next-line\n        role=\"option\"\n        style={{display: 'contents'}}>\n        {props.renderEmptyState(renderValues)}\n      </div>\n    );\n  }\n\n  return (\n    <FocusScope>\n      <div\n        {...filterDOMProps(props)}\n        {...mergeProps(listBoxProps, focusProps, droppableCollection?.collectionProps)}\n        {...renderProps}\n        ref={listBoxRef}\n        slot={props.slot || undefined}\n        onScroll={props.onScroll}\n        data-drop-target={isRootDropTarget || undefined}\n        data-empty={state.collection.size === 0 || undefined}\n        data-focused={isFocused || undefined}\n        data-focus-visible={isFocusVisible || undefined}\n        data-layout={props.layout || 'stack'}\n        data-orientation={props.orientation || 'vertical'}>\n        <Provider\n          values={[\n            [ListBoxContext, props],\n            [ListStateContext, state],\n            [DragAndDropContext, {dragAndDropHooks, dragState, dropState}],\n            [SeparatorContext, {elementType: 'div'}],\n            [DropIndicatorContext, {render: ListBoxDropIndicatorWrapper}],\n            [SectionContext, {render: ListBoxSection}]\n          ]}>\n          <CollectionRoot\n            collection={collection}\n            scrollRef={listBoxRef}\n            persistedKeys={useDndPersistedKeys(selectionManager, dragAndDropHooks, dropState)}\n            renderDropIndicator={useRenderDropIndicator(dragAndDropHooks, dropState)} />\n        </Provider>\n        {emptyState}\n        {dragPreview}\n      </div>\n    </FocusScope>\n  );\n}\n\nfunction ListBoxSection<T extends object>(props: SectionProps<T>, ref: ForwardedRef<HTMLElement>, section: Node<T>) {\n  let state = useContext(ListStateContext)!;\n  let {dragAndDropHooks, dropState} = useContext(DragAndDropContext)!;\n  let {CollectionBranch} = useContext(CollectionRendererContext);\n  let [headingRef, heading] = useSlot();\n  let {headingProps, groupProps} = useListBoxSection({\n    heading,\n    'aria-label': props['aria-label'] ?? undefined\n  });\n  let renderProps = useRenderProps({\n    defaultClassName: 'react-aria-Section',\n    className: props.className,\n    style: props.style,\n    values: {}\n  });\n\n  return (\n    <section\n      {...filterDOMProps(props as any)}\n      {...groupProps}\n      {...renderProps}\n      ref={ref}>\n      <HeaderContext.Provider value={{...headingProps, ref: headingRef}}>\n        <CollectionBranch\n          collection={state.collection}\n          parent={section}\n          renderDropIndicator={useRenderDropIndicator(dragAndDropHooks, dropState)} />\n      </HeaderContext.Provider>\n    </section>\n  );\n}\n\nexport interface ListBoxItemRenderProps extends ItemRenderProps {}\n\nexport interface ListBoxItemProps<T = object> extends RenderProps<ListBoxItemRenderProps>, LinkDOMProps, HoverEvents {\n  /** The unique id of the item. */\n  id?: Key,\n  /** The object value that this item represents. When using dynamic collections, this is set automatically. */\n  value?: T,\n  /** A string representation of the item's contents, used for features like typeahead. */\n  textValue?: string,\n  /** An accessibility label for this item. */\n  'aria-label'?: string,\n  /** Whether the item is disabled. */\n  isDisabled?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the item. The exact user event depends on\n   * the collection's `selectionBehavior` prop and the interaction modality.\n   */\n  onAction?: () => void\n}\n\n/**\n * A ListBoxItem represents an individual option in a ListBox.\n */\nexport const ListBoxItem = /*#__PURE__*/ createLeafComponent('item', function ListBoxItem<T extends object>(props: ListBoxItemProps<T>, forwardedRef: ForwardedRef<HTMLDivElement>, item: Node<T>) {\n  let ref = useObjectRef<any>(forwardedRef);\n  let state = useContext(ListStateContext)!;\n  let {dragAndDropHooks, dragState, dropState} = useContext(DragAndDropContext)!;\n  let {optionProps, labelProps, descriptionProps, ...states} = useOption(\n    {key: item.key, 'aria-label': props?.['aria-label']},\n    state,\n    ref\n  );\n\n  let {hoverProps, isHovered} = useHover({\n    isDisabled: !states.allowsSelection && !states.hasAction,\n    onHoverStart: item.props.onHoverStart,\n    onHoverChange: item.props.onHoverChange,\n    onHoverEnd: item.props.onHoverEnd\n  });\n\n  let draggableItem: DraggableItemResult | null = null;\n  if (dragState && dragAndDropHooks) {\n    draggableItem = dragAndDropHooks.useDraggableItem!({key: item.key}, dragState);\n  }\n\n  let droppableItem: DroppableItemResult | null = null;\n  if (dropState && dragAndDropHooks) {\n    droppableItem = dragAndDropHooks.useDroppableItem!({\n      target: {type: 'item', key: item.key, dropPosition: 'on'}\n    }, dropState, ref);\n  }\n\n  let isDragging = dragState && dragState.isDragging(item.key);\n  let renderProps = useRenderProps({\n    ...props,\n    id: undefined,\n    children: props.children,\n    defaultClassName: 'react-aria-ListBoxItem',\n    values: {\n      ...states,\n      isHovered,\n      selectionMode: state.selectionManager.selectionMode,\n      selectionBehavior: state.selectionManager.selectionBehavior,\n      allowsDragging: !!dragState,\n      isDragging,\n      isDropTarget: droppableItem?.isDropTarget\n    }\n  });\n\n  useEffect(() => {\n    if (!item.textValue) {\n      console.warn('A `textValue` prop is required for <ListBoxItem> elements with non-plain text children in order to support accessibility features such as type to select.');\n    }\n  }, [item.textValue]);\n\n  let ElementType: React.ElementType = props.href ? 'a' : 'div';\n\n  return (\n    <ElementType\n      {...mergeProps(optionProps, hoverProps, draggableItem?.dragProps, droppableItem?.dropProps)}\n      {...renderProps}\n      ref={ref}\n      data-allows-dragging={!!dragState || undefined}\n      data-selected={states.isSelected || undefined}\n      data-disabled={states.isDisabled || undefined}\n      data-hovered={isHovered || undefined}\n      data-focused={states.isFocused || undefined}\n      data-focus-visible={states.isFocusVisible || undefined}\n      data-pressed={states.isPressed || undefined}\n      data-dragging={isDragging || undefined}\n      data-drop-target={droppableItem?.isDropTarget || undefined}\n      data-selection-mode={state.selectionManager.selectionMode === 'none' ? undefined : state.selectionManager.selectionMode}>\n      <Provider\n        values={[\n          [TextContext, {\n            slots: {\n              label: labelProps,\n              description: descriptionProps\n            }\n          }]\n        ]}>\n        {renderProps.children}\n      </Provider>\n    </ElementType>\n  );\n});\n\nfunction ListBoxDropIndicatorWrapper(props: DropIndicatorProps, ref: ForwardedRef<HTMLElement>) {\n  ref = useObjectRef(ref);\n  let {dragAndDropHooks, dropState} = useContext(DragAndDropContext)!;\n  let {dropIndicatorProps, isHidden, isDropTarget} = dragAndDropHooks!.useDropIndicator!(\n    props,\n    dropState!,\n    ref\n  );\n\n  if (isHidden) {\n    return null;\n  }\n\n  return (\n    <ListBoxDropIndicatorForwardRef {...props} dropIndicatorProps={dropIndicatorProps} isDropTarget={isDropTarget} ref={ref} />\n  );\n}\n\ninterface ListBoxDropIndicatorProps extends DropIndicatorProps {\n  dropIndicatorProps: React.HTMLAttributes<HTMLElement>,\n  isDropTarget: boolean\n}\n\nfunction ListBoxDropIndicator(props: ListBoxDropIndicatorProps, ref: ForwardedRef<HTMLElement>) {\n  let {\n    dropIndicatorProps,\n    isDropTarget,\n    ...otherProps\n  } = props;\n\n  let renderProps = useRenderProps({\n    ...otherProps,\n    defaultClassName: 'react-aria-DropIndicator',\n    values: {\n      isDropTarget\n    }\n  });\n\n  return (\n    <div\n      {...dropIndicatorProps}\n      {...renderProps}\n      // eslint-disable-next-line\n      role=\"option\"\n      ref={ref as RefObject<HTMLDivElement | null>}\n      data-drop-target={isDropTarget || undefined} />\n  );\n}\n\nconst ListBoxDropIndicatorForwardRef = forwardRef(ListBoxDropIndicator);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
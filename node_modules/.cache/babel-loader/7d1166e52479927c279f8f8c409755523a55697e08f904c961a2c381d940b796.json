{"ast":null,"code":"import { Rect as $9jo3j$Rect, LayoutInfo as $9jo3j$LayoutInfo } from \"@react-stately/virtualizer\";\nimport { ListLayout as $9jo3j$ListLayout } from \"@react-stately/layout\";\n\n/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nclass $bc6cc67dd6240ebd$export$dab781655dfbb7d3 extends (0, $9jo3j$ListLayout) {\n  update(invalidationContext) {\n    var _invalidationContext_layoutOptions;\n    this.isLoading = ((_invalidationContext_layoutOptions = invalidationContext.layoutOptions) === null || _invalidationContext_layoutOptions === void 0 ? void 0 : _invalidationContext_layoutOptions.isLoading) || false;\n    super.update(invalidationContext);\n  }\n  buildCollection() {\n    let nodes = super.buildCollection();\n    let y = this.contentSize.height;\n    if (this.isLoading) {\n      let rect = new (0, $9jo3j$Rect)(0, y, this.virtualizer.visibleRect.width, nodes.length === 0 ? this.virtualizer.visibleRect.height : this.estimatedRowHeight);\n      let loader = new (0, $9jo3j$LayoutInfo)('loader', 'loader', rect);\n      let node = {\n        layoutInfo: loader,\n        validRect: loader.rect\n      };\n      nodes.push(node);\n      this.layoutNodes.set(loader.key, node);\n      y = loader.rect.maxY;\n    }\n    if (nodes.length === 0) {\n      let rect = new (0, $9jo3j$Rect)(0, y, this.virtualizer.visibleRect.width, this.virtualizer.visibleRect.height);\n      let placeholder = new (0, $9jo3j$LayoutInfo)('placeholder', 'placeholder', rect);\n      let node = {\n        layoutInfo: placeholder,\n        validRect: placeholder.rect\n      };\n      nodes.push(node);\n      this.layoutNodes.set(placeholder.key, node);\n      y = placeholder.rect.maxY;\n    }\n    this.contentSize.height = y;\n    return nodes;\n  }\n  buildItem(node, x, y) {\n    let res = super.buildItem(node, x, y);\n    // allow overflow so the focus ring/selection ring can extend outside to overlap with the adjacent items borders\n    res.layoutInfo.allowOverflow = true;\n    return res;\n  }\n  constructor(...args) {\n    super(...args);\n    this.isLoading = false;\n  }\n}\nexport { $bc6cc67dd6240ebd$export$dab781655dfbb7d3 as ListViewLayout };","map":{"version":3,"names":["$bc6cc67dd6240ebd$export$dab781655dfbb7d3","$9jo3j$ListLayout","update","invalidationContext","_invalidationContext_layoutOptions","isLoading","layoutOptions","buildCollection","nodes","y","contentSize","height","rect","$9jo3j$Rect","virtualizer","visibleRect","width","length","estimatedRowHeight","loader","$9jo3j$LayoutInfo","node","layoutInfo","validRect","push","layoutNodes","set","key","maxY","placeholder","buildItem","x","res","allowOverflow"],"sources":["/Users/oscar.meunier/Documents/Personal/goodreads/node_modules/@react-spectrum/list/dist/packages/@react-spectrum/list/src/ListViewLayout.ts"],"sourcesContent":["/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport {InvalidationContext, LayoutInfo, Rect} from '@react-stately/virtualizer';\nimport {LayoutNode, ListLayout} from '@react-stately/layout';\nimport {Node} from '@react-types/shared';\n\ninterface ListViewLayoutProps {\n  isLoading?: boolean\n}\n\nexport class ListViewLayout<T> extends ListLayout<T, ListViewLayoutProps> {\n  private isLoading: boolean = false;\n\n  update(invalidationContext: InvalidationContext<ListViewLayoutProps>): void {\n    this.isLoading = invalidationContext.layoutOptions?.isLoading || false;\n    super.update(invalidationContext);\n  }\n\n  protected buildCollection(): LayoutNode[] {\n    let nodes = super.buildCollection();\n    let y = this.contentSize.height;\n\n    if (this.isLoading) {\n      let rect = new Rect(0, y, this.virtualizer.visibleRect.width, nodes.length === 0 ? this.virtualizer.visibleRect.height : this.estimatedRowHeight);\n      let loader = new LayoutInfo('loader', 'loader', rect);\n      let node = {\n        layoutInfo: loader,\n        validRect: loader.rect\n      };\n      nodes.push(node);\n      this.layoutNodes.set(loader.key, node);\n      y = loader.rect.maxY;\n    }\n\n    if (nodes.length === 0) {\n      let rect = new Rect(0, y, this.virtualizer.visibleRect.width, this.virtualizer.visibleRect.height);\n      let placeholder = new LayoutInfo('placeholder', 'placeholder', rect);\n      let node = {\n        layoutInfo: placeholder,\n        validRect: placeholder.rect\n      };\n      nodes.push(node);\n      this.layoutNodes.set(placeholder.key, node);\n      y = placeholder.rect.maxY;\n    }\n\n    this.contentSize.height = y;\n    return nodes;\n  }\n\n  protected buildItem(node: Node<T>, x: number, y: number): LayoutNode {\n    let res = super.buildItem(node, x, y);\n    // allow overflow so the focus ring/selection ring can extend outside to overlap with the adjacent items borders\n    res.layoutInfo.allowOverflow = true;\n    return res;\n  }\n}\n"],"mappings":";;;AAAA;;;;;;;;;;;;AAmBO,MAAMA,yCAAA,UAA0B,GAAAC,iBAAS;EAG9CC,OAAOC,mBAA6D,EAAQ;QACzDC,kCAAA;IAAjB,IAAI,CAACC,SAAS,GAAG,EAAAD,kCAAA,GAAAD,mBAAA,CAAoBG,aAAa,cAAjCF,kCAAA,uBAAAA,kCAAA,CAAmCC,SAAS,KAAI;IACjE,KAAK,CAACH,MAAA,CAAOC,mBAAA;EACf;EAEUI,gBAAA,EAAgC;IACxC,IAAIC,KAAA,GAAQ,KAAK,CAACD,eAAA;IAClB,IAAIE,CAAA,GAAI,IAAI,CAACC,WAAW,CAACC,MAAM;IAE/B,IAAI,IAAI,CAACN,SAAS,EAAE;MAClB,IAAIO,IAAA,GAAO,KAAI,GAAAC,WAAG,EAAE,GAAGJ,CAAA,EAAG,IAAI,CAACK,WAAW,CAACC,WAAW,CAACC,KAAK,EAAER,KAAA,CAAMS,MAAM,KAAK,IAAI,IAAI,CAACH,WAAW,CAACC,WAAW,CAACJ,MAAM,GAAG,IAAI,CAACO,kBAAkB;MAChJ,IAAIC,MAAA,GAAS,KAAI,GAAAC,iBAAS,EAAE,UAAU,UAAUR,IAAA;MAChD,IAAIS,IAAA,GAAO;QACTC,UAAA,EAAYH,MAAA;QACZI,SAAA,EAAWJ,MAAA,CAAOP;MACpB;MACAJ,KAAA,CAAMgB,IAAI,CAACH,IAAA;MACX,IAAI,CAACI,WAAW,CAACC,GAAG,CAACP,MAAA,CAAOQ,GAAG,EAAEN,IAAA;MACjCZ,CAAA,GAAIU,MAAA,CAAOP,IAAI,CAACgB,IAAI;IACtB;IAEA,IAAIpB,KAAA,CAAMS,MAAM,KAAK,GAAG;MACtB,IAAIL,IAAA,GAAO,KAAI,GAAAC,WAAG,EAAE,GAAGJ,CAAA,EAAG,IAAI,CAACK,WAAW,CAACC,WAAW,CAACC,KAAK,EAAE,IAAI,CAACF,WAAW,CAACC,WAAW,CAACJ,MAAM;MACjG,IAAIkB,WAAA,GAAc,KAAI,GAAAT,iBAAS,EAAE,eAAe,eAAeR,IAAA;MAC/D,IAAIS,IAAA,GAAO;QACTC,UAAA,EAAYO,WAAA;QACZN,SAAA,EAAWM,WAAA,CAAYjB;MACzB;MACAJ,KAAA,CAAMgB,IAAI,CAACH,IAAA;MACX,IAAI,CAACI,WAAW,CAACC,GAAG,CAACG,WAAA,CAAYF,GAAG,EAAEN,IAAA;MACtCZ,CAAA,GAAIoB,WAAA,CAAYjB,IAAI,CAACgB,IAAI;IAC3B;IAEA,IAAI,CAAClB,WAAW,CAACC,MAAM,GAAGF,CAAA;IAC1B,OAAOD,KAAA;EACT;EAEUsB,UAAUT,IAAa,EAAEU,CAAS,EAAEtB,CAAS,EAAc;IACnE,IAAIuB,GAAA,GAAM,KAAK,CAACF,SAAA,CAAUT,IAAA,EAAMU,CAAA,EAAGtB,CAAA;IACnC;IACAuB,GAAA,CAAIV,UAAU,CAACW,aAAa,GAAG;IAC/B,OAAOD,GAAA;EACT;;;SA5CQ3B,SAAA,GAAqB;;AA6C/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}